[{"/Users/mauriciovillalba/project/remote/desktop/frontend/src/index.tsx":"1","/Users/mauriciovillalba/project/remote/desktop/frontend/src/serviceWorker.ts":"2","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/Controller.ts":"3","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/Heartbeat.ts":"4","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/analyticsHelper.ts":"5","/Users/mauriciovillalba/project/remote/desktop/frontend/src/styling/theme.ts":"6","/Users/mauriciovillalba/project/remote/desktop/frontend/src/store.tsx":"7","/Users/mauriciovillalba/project/remote/desktop/frontend/src/styling/index.ts":"8","/Users/mauriciovillalba/project/remote/desktop/frontend/src/shared/constants.ts":"9","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/App/index.ts":"10","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/rootModel.ts":"11","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/ui.ts":"12","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/shares.ts":"13","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/logs.ts":"14","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/labels.ts":"15","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/licensing.ts":"16","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/devices.ts":"17","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/accounts.ts":"18","/Users/mauriciovillalba/project/remote/desktop/frontend/src/shared/nameHelper.ts":"19","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/graphQL.ts":"20","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/graphQLLogs.ts":"21","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/remote.it.ts":"22","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/platformConfiguration.ts":"23","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/graphQLMutation.ts":"24","/Users/mauriciovillalba/project/remote/desktop/frontend/src/sharedAdaptor.ts":"25","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/platformHelper.ts":"26","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/connectionHelper.ts":"27","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/backend.ts":"28","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/binaries.ts":"29","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/graphQLDevice.ts":"30","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/analytics.ts":"31","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/auth.ts":"32","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/applicationTypes.ts":"33","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/App/App.tsx":"34","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/sleep.ts":"35","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/Browser.ts":"36","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/dateHelper.ts":"37","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/cloudController.ts":"38","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/uiHelper.ts":"39","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Header/Header.tsx":"40","/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/Notifications.ts":"41","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Icon/index.ts":"42","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Router/index.ts":"43","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Body/index.ts":"44","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/Page/index.ts":"45","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SignInPage/index.ts":"46","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InstallationNotice/index.ts":"47","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LoadingMessage/index.ts":"48","/Users/mauriciovillalba/project/remote/desktop/frontend/src/shared/applications.ts":"49","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Body/Body.tsx":"50","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Icon/Icon.tsx":"51","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Router/Router.tsx":"52","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/Page/Page.tsx":"53","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SignInPage/SignInPage.tsx":"54","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LoadingMessage/LoadingMessage.tsx":"55","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InstallationNotice/InstallationNotice.tsx":"56","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/routeHelper.ts":"57","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SharePage/SharePage.tsx":"58","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/AccountMembershipPage.tsx":"59","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/AccountAccessPage.tsx":"60","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/AccountSharePage.tsx":"61","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ReportsPage/index.ts":"62","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/LogPage/index.ts":"63","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Sidebar/index.ts":"64","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceEditPage/index.ts":"65","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/RemoteHeader/index.ts":"66","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UpdateNotice/index.ts":"67","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/userHelper.ts":"68","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SignInForm/index.ts":"69","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceEditPage/index.ts":"70","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ContactSelector.tsx":"71","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ContactCard.tsx":"72","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UsersPageDevice/index.ts":"73","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UsersPageService/index.ts":"74","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/LanSharePage/index.ts":"75","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServicePage/index.ts":"76","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServicesPage/index.ts":"77","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Alert/index.ts":"78","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceDetailPage/index.ts":"79","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceLogPage/index.ts":"80","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceDetailPage/index.ts":"81","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DevicesPage/index.ts":"82","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceAddPage/index.ts":"83","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/NetworkPage/index.ts":"84","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SetupWaiting/index.ts":"85","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ConnectionsPage/index.ts":"86","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SetupDevice/index.ts":"87","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SettingsPage/index.ts":"88","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Logo/index.tsx":"89","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Notice.tsx":"90","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ReportsPage/ReportsPage.tsx":"91","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/LogPage/LogPage.tsx":"92","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/RemoteHeader/RemoteHeader.tsx":"93","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UpdateNotice/UpdateNotice.tsx":"94","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceEditPage/ServiceEditPage.tsx":"95","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Sidebar/Sidebar.tsx":"96","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Title/index.ts":"97","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Container/index.ts":"98","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/contacts.ts":"99","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Breadcrumbs/index.ts":"100","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SignInForm/SignInForm.tsx":"101","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharingForm.tsx":"102","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceEditPage/DeviceEditPage.tsx":"103","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Alert/Alert.tsx":"104","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceLogPage/DeviceLogPage.tsx":"105","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceDetailPage/DeviceDetailPage.tsx":"106","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceAddPage/ServiceAddPage.tsx":"107","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServicesPage/ServicesPage.tsx":"108","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServicePage/ServicePage.tsx":"109","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UsersPageService/UsersPageService.tsx":"110","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DevicesPage/DevicesPage.tsx":"111","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceDetailPage/ServiceDetailPage.tsx":"112","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/LanSharePage/LanSharePage.tsx":"113","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UsersPageDevice/UsersPageDevice.tsx":"114","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SettingsPage/SettingsPage.tsx":"115","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SetupDevice/SetupDevice.tsx":"116","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Logo/Logo.tsx":"117","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SetupWaiting/SetupWaiting.tsx":"118","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ConnectionsPage/ConnectionsPage.tsx":"119","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/NetworkPage/NetworkPage.tsx":"120","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Duration/index.ts":"121","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InitiatorPlatform/index.ts":"122","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/AddUserButton/index.ts":"123","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Title/Title.tsx":"124","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Container/Container.tsx":"125","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DeleteServiceButton.tsx":"126","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Breadcrumbs/Breadcrumbs.tsx":"127","/Users/mauriciovillalba/project/remote/desktop/frontend/src/hooks/reactReduxHooks.ts":"128","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/lanSharing.ts":"129","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceLogPage/EventIcon.tsx":"130","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/QualityDetails.tsx":"131","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Quote.tsx":"132","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DatePicker/DatePicker.tsx":"133","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InitiatorPlatform/InitiatorPlatform.tsx":"134","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Duration/Duration.tsx":"135","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/AddUserButton/AddUserButton.tsx":"136","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingSetting.tsx":"137","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AccountLinkingSettings.tsx":"138","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Columns/index.ts":"139","/Users/mauriciovillalba/project/remote/desktop/frontend/src/assets/index.ts":"140","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceForm/index.ts":"141","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/TargetPlatform/index.ts":"142","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/OutOfBand/index.ts":"143","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportDeviceQualityList/index.tsx":"144","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportTimeSeriesVis/index.tsx":"145","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportSummaryBox/index.tsx":"146","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/UnregisterServiceButton/index.ts":"147","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DeleteButton/index.ts":"148","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/RefreshButton/index.ts":"149","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CSVDownloadButton/index.ts":"150","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Subtitle/index.ts":"151","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharedUsersHeader/index.ts":"152","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceList/index.ts":"153","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Confirm.tsx":"154","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DataDisplay/index.ts":"155","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharedUsersList/index.ts":"156","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Avatar/index.ts":"157","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LocalhostScanForm/index.ts":"158","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SessionsList/index.ts":"159","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Scan/index.ts":"160","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceLogPage/EventMessage.tsx":"161","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Formats.tsx":"162","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UpdateSetting/index.ts":"163","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionsList/index.ts":"164","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemSetting/index.ts":"165","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AccountSelect.tsx":"166","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DocsLinks/index.tsx":"167","/Users/mauriciovillalba/project/remote/desktop/frontend/src/hooks/useInterval.ts":"168","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SettingsDisableNetworkItem/index.ts":"169","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceSetupItem/index.ts":"170","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LimitSetting.tsx":"171","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceForm/ServiceForm.tsx":"172","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Columns/Columns.tsx":"173","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/OutOfBand/OutOfBand.tsx":"174","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportDeviceQualityList/ReportDeviceQualityList.tsx":"175","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportTimeSeriesVis/ReportTimeSeriesVis.tsx":"176","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportSummaryBox/ReportSummaryBox.tsx":"177","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/TargetPlatform/TargetPlatform.tsx":"178","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/UnregisterServiceButton/UnregisterServiceButton.tsx":"179","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingNotice.tsx":"180","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingIcon.tsx":"181","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DeleteButton/DeleteButton.tsx":"182","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CSVDownloadButton/CSVDownloadButton.tsx":"183","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceList/DeviceList.tsx":"184","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharedUsersHeader/SharedUsersHeader.tsx":"185","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DataDisplay/DataDisplay.tsx":"186","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharedUsersList/SharedUsersList.tsx":"187","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SearchField/index.ts":"188","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/FilterButton/index.ts":"189","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Subtitle/Subtitle.tsx":"190","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Scan/Scan.tsx":"191","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SessionsList/SessionsList.tsx":"192","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DocsLinks/DocsLinks.tsx":"193","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemSetting/ListItemSetting.tsx":"194","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionsList/ConnectionsList.tsx":"195","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UpdateSetting/UpdateSetting.tsx":"196","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemLocation/index.ts":"197","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceAttributesForm.tsx":"198","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingTitle.tsx":"199","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/FilterButton/FilterButton.tsx":"200","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SearchField/SearchField.tsx":"201","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemLocation/ListItemLocation.tsx":"202","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemCheckbox/index.ts":"203","/Users/mauriciovillalba/project/remote/desktop/frontend/src/hooks/useApplication.ts":"204","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/TemplateSetting.tsx":"205","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LoadMore/index.ts":"206","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceContextualMenu/index.ts":"207","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceListItem/index.ts":"208","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ShareDetails/index.ts":"209","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UserListItem/index.ts":"210","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ScanNetwork/index.ts":"211","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceName/index.ts":"212","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ClearButton/index.ts":"213","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceListItem/index.ts":"214","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemCheckbox/ListItemCheckbox.tsx":"215","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ShareDetails/ShareDetails.tsx":"216","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UserListItem/UserListItem.tsx":"217","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ScanNetwork/ScanNetwork.tsx":"218","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceName/ServiceName.tsx":"219","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceMiniState/index.ts":"220","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceMiniState/ServiceMiniState.tsx":"221","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceListItem/ServiceListItem.tsx":"222","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ClearButton/ClearButton.tsx":"223","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CopyButton.tsx":"224","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SessionsTooltip/index.ts":"225","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ErrorButton/index.ts":"226","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/LaunchButton/index.ts":"227","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ComboButton/index.ts":"228","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/SessionsButton/index.ts":"229","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionErrorMessage/index.ts":"230","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/PromptModal.tsx":"231","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SessionsTooltip/SessionsTooltip.tsx":"232","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/LaunchButton/LaunchButton.tsx":"233","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/SessionsButton/SessionsButton.tsx":"234","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionErrorMessage/ConnectionErrorMessage.tsx":"235","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ComboButton/ComboButton.tsx":"236","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ErrorButton/ErrorButton.tsx":"237","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceListItem/DeviceListItem.tsx":"238","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceContextualMenu/ServiceContextualMenu.tsx":"239","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LoadMore/LoadMore.tsx":"240","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DialogApp/index.ts":"241","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/OfflineButton/index.ts":"242","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ConnectButton/index.ts":"243","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DisconnectButton/index.ts":"244","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/RestoreButton.tsx":"245","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DialogApp/DialogApp.tsx":"246","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ConnectButton/ConnectButton.tsx":"247","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DisconnectButton/DisconnectButton.tsx":"248","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/OfflineButton/OfflineButton.tsx":"249","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionStateIcon/index.ts":"250","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceLabel/index.ts":"251","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionStateIcon/ConnectionStateIcon.tsx":"252","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceLabel/DeviceLabel.tsx":"253","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DynamicButton/index.ts":"254","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DynamicButton/DynamicButton.tsx":"255","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AddFromNetwork.tsx":"256","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SettingsDisableNetworkItem/SettingsDisableNetworkItem.tsx":"257","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceSetupItem/DeviceSetupItem.tsx":"258","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Avatar/Avatar.tsx":"259","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LocalhostScanForm/LocalhostScanForm.tsx":"260","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/RefreshButton/RefreshButton.tsx":"261","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/RegisterButton.tsx":"262","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/CustomAttributeSettings.tsx":"263","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UsersSelect/UsersSelect.tsx":"264","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingServiceNotice.tsx":"265","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AdminPanelConnect.tsx":"266","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceListEmpty/index.ts":"267","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/FilterDrawerContent/index.ts":"268","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/EditButton/index.ts":"269","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UsersSelect/index.ts":"270","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LanShareSelect/index.ts":"271","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ForgetButton/index.ts":"272","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UnauthorizedPage/index.ts":"273","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AutoStartSetting/index.ts":"274","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineTemplateSetting/index.ts":"275","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceConnected/index.ts":"276","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ProxySetting/index.ts":"277","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/HostSetting/index.ts":"278","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/NameSetting/index.ts":"279","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/PortSetting/index.ts":"280","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceList/index.ts":"281","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/UnregisterDeviceButton/index.ts":"282","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/FilterDrawerContent/FilterDrawerContent.tsx":"283","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceListEmpty/DeviceListEmpty.tsx":"284","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/EditButton/EditButton.tsx":"285","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ForgetButton/ForgetButton.tsx":"286","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UnauthorizedPage/UnauthorizedPage.tsx":"287","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LanShareSelect/LanShareSelect.tsx":"288","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineTextFieldSetting/index.ts":"289","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceConnected/ServiceConnected.tsx":"290","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ProxySetting/ProxySetting.tsx":"291","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/HostSetting/HostSetting.tsx":"292","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/NameSetting/NameSetting.tsx":"293","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceList/ServiceList.tsx":"294","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/PortSetting/PortSetting.tsx":"295","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/UnregisterDeviceButton/UnregisterDeviceButton.tsx":"296","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/FilterDrawerContent/FilterSelector.tsx":"297","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineTextFieldSetting/InlineTextFieldSetting.tsx":"298","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CloseButton/index.ts":"299","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineSelectSetting/index.ts":"300","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CloseButton/CloseButton.tsx":"301","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineSetting/index.ts":"302","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineSelectSetting/InlineSelectSetting.tsx":"303","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AutoStartSetting/AutoStartSetting.tsx":"304","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineTemplateSetting/InlineTemplateSetting.tsx":"305","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineSetting/InlineSetting.tsx":"306","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceNameSetting/index.ts":"307","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/AddServiceButton/index.ts":"308","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ShareSaveActions/index.ts":"309","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceNameSetting/DeviceNameSetting.tsx":"310","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/AddServiceButton/AddServiceButton.tsx":"311","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ShareSaveActions/ShareSaveActions.tsx":"312","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ResetButton/index.ts":"313","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ResetButton/ResetButton.tsx":"314","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/LabelButton/index.ts":"315","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/LabelButton/LabelButton.tsx":"316","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionLogSetting.tsx":"317"},{"size":1165,"mtime":1608510771219,"results":"318","hashOfConfig":"319"},{"size":5201,"mtime":1602519662059,"results":"320","hashOfConfig":"319"},{"size":5922,"mtime":1611184419505,"results":"321","hashOfConfig":"319"},{"size":445,"mtime":1610731746624,"results":"322","hashOfConfig":"319"},{"size":4726,"mtime":1608510771214,"results":"323","hashOfConfig":"319"},{"size":6812,"mtime":1611929435103,"results":"324","hashOfConfig":"319"},{"size":1526,"mtime":1611186412181,"results":"325","hashOfConfig":"319"},{"size":1656,"mtime":1610731746629,"results":"326","hashOfConfig":"319"},{"size":3365,"mtime":1611929435102,"results":"327","hashOfConfig":"319"},{"size":28,"mtime":1602519661965,"results":"328","hashOfConfig":"319"},{"size":973,"mtime":1610731746613,"results":"329","hashOfConfig":"319"},{"size":2357,"mtime":1611186412176,"results":"330","hashOfConfig":"319"},{"size":3413,"mtime":1611186412175,"results":"331","hashOfConfig":"319"},{"size":2800,"mtime":1611186412175,"results":"332","hashOfConfig":"319"},{"size":770,"mtime":1608510771222,"results":"333","hashOfConfig":"319"},{"size":5178,"mtime":1611929435095,"results":"334","hashOfConfig":"319"},{"size":11748,"mtime":1611929435094,"results":"335","hashOfConfig":"319"},{"size":6941,"mtime":1611929435092,"results":"336","hashOfConfig":"319"},{"size":2459,"mtime":1610976449940,"results":"337","hashOfConfig":"319"},{"size":1651,"mtime":1611186412178,"results":"338","hashOfConfig":"319"},{"size":1177,"mtime":1610731746626,"results":"339","hashOfConfig":"319"},{"size":1142,"mtime":1611929435102,"results":"340","hashOfConfig":"319"},{"size":790,"mtime":1611929435101,"results":"341","hashOfConfig":"319"},{"size":2716,"mtime":1611186412180,"results":"342","hashOfConfig":"319"},{"size":116,"mtime":1602519662064,"results":"343","hashOfConfig":"319"},{"size":1582,"mtime":1611929435092,"results":"344","hashOfConfig":"319"},{"size":4379,"mtime":1611929435091,"results":"345","hashOfConfig":"319"},{"size":6626,"mtime":1611929435094,"results":"346","hashOfConfig":"319"},{"size":1744,"mtime":1608510771221,"results":"347","hashOfConfig":"319"},{"size":6243,"mtime":1611929435101,"results":"348","hashOfConfig":"319"},{"size":8010,"mtime":1611929435093,"results":"349","hashOfConfig":"319"},{"size":6558,"mtime":1611186412173,"results":"350","hashOfConfig":"319"},{"size":1587,"mtime":1611186412173,"results":"351","hashOfConfig":"319"},{"size":4577,"mtime":1610997281298,"results":"352","hashOfConfig":"319"},{"size":103,"mtime":1608510771247,"results":"353","hashOfConfig":"319"},{"size":1297,"mtime":1611184419505,"results":"354","hashOfConfig":"319"},{"size":504,"mtime":1610731746609,"results":"355","hashOfConfig":"319"},{"size":7587,"mtime":1611929435100,"results":"356","hashOfConfig":"319"},{"size":241,"mtime":1608510771217,"results":"357","hashOfConfig":"319"},{"size":1624,"mtime":1608510771170,"results":"358","hashOfConfig":"319"},{"size":1768,"mtime":1611929435100,"results":"359","hashOfConfig":"319"},{"size":30,"mtime":1602519661981,"results":"360","hashOfConfig":"319"},{"size":34,"mtime":1602519662002,"results":"361","hashOfConfig":"319"},{"size":30,"mtime":1602519661967,"results":"362","hashOfConfig":"319"},{"size":30,"mtime":1602519662050,"results":"363","hashOfConfig":"319"},{"size":42,"mtime":1602519662057,"results":"364","hashOfConfig":"319"},{"size":58,"mtime":1602519661993,"results":"365","hashOfConfig":"319"},{"size":50,"mtime":1602519661996,"results":"366","hashOfConfig":"319"},{"size":4498,"mtime":1610976449939,"results":"367","hashOfConfig":"319"},{"size":1728,"mtime":1611929435074,"results":"368","hashOfConfig":"319"},{"size":1650,"mtime":1610976449934,"results":"369","hashOfConfig":"319"},{"size":5616,"mtime":1611186412165,"results":"370","hashOfConfig":"319"},{"size":4246,"mtime":1610731746617,"results":"371","hashOfConfig":"319"},{"size":2448,"mtime":1608510771241,"results":"372","hashOfConfig":"319"},{"size":938,"mtime":1608510771190,"results":"373","hashOfConfig":"319"},{"size":2624,"mtime":1608510771185,"results":"374","hashOfConfig":"319"},{"size":978,"mtime":1608510771217,"results":"375","hashOfConfig":"319"},{"size":7141,"mtime":1610731746622,"results":"376","hashOfConfig":"319"},{"size":2638,"mtime":1610731746614,"results":"377","hashOfConfig":"319"},{"size":2759,"mtime":1610731746614,"results":"378","hashOfConfig":"319"},{"size":2181,"mtime":1610731746615,"results":"379","hashOfConfig":"319"},{"size":44,"mtime":1610731746618,"results":"380","hashOfConfig":"319"},{"size":36,"mtime":1602519662048,"results":"381","hashOfConfig":"319"},{"size":36,"mtime":1602519662014,"results":"382","hashOfConfig":"319"},{"size":51,"mtime":1608510771237,"results":"383","hashOfConfig":"319"},{"size":46,"mtime":1602519662002,"results":"384","hashOfConfig":"319"},{"size":46,"mtime":1602519662020,"results":"385","hashOfConfig":"319"},{"size":501,"mtime":1608510771217,"results":"386","hashOfConfig":"319"},{"size":42,"mtime":1602519662015,"results":"387","hashOfConfig":"319"},{"size":49,"mtime":1608510771230,"results":"388","hashOfConfig":"319"},{"size":2269,"mtime":1608510771158,"results":"389","hashOfConfig":"319"},{"size":1957,"mtime":1610731746599,"results":"390","hashOfConfig":"319"},{"size":51,"mtime":1608510771242,"results":"391","hashOfConfig":"319"},{"size":53,"mtime":1608510771243,"results":"392","hashOfConfig":"319"},{"size":46,"mtime":1602519662047,"results":"393","hashOfConfig":"319"},{"size":44,"mtime":1602519662052,"results":"394","hashOfConfig":"319"},{"size":46,"mtime":1602519662052,"results":"395","hashOfConfig":"319"},{"size":32,"mtime":1602519661964,"results":"396","hashOfConfig":"319"},{"size":55,"mtime":1608510771236,"results":"397","hashOfConfig":"319"},{"size":47,"mtime":1608510771233,"results":"398","hashOfConfig":"319"},{"size":53,"mtime":1608510771229,"results":"399","hashOfConfig":"319"},{"size":44,"mtime":1602519662047,"results":"400","hashOfConfig":"319"},{"size":50,"mtime":1608510771236,"results":"401","hashOfConfig":"319"},{"size":44,"mtime":1602519662048,"results":"402","hashOfConfig":"319"},{"size":46,"mtime":1602519662056,"results":"403","hashOfConfig":"319"},{"size":52,"mtime":1602519662041,"results":"404","hashOfConfig":"319"},{"size":44,"mtime":1602519662054,"results":"405","hashOfConfig":"319"},{"size":46,"mtime":1602519662053,"results":"406","hashOfConfig":"319"},{"size":30,"mtime":1602519661997,"results":"407","hashOfConfig":"319"},{"size":1913,"mtime":1610731746604,"results":"408","hashOfConfig":"319"},{"size":4668,"mtime":1611929435096,"results":"409","hashOfConfig":"319"},{"size":1549,"mtime":1610731746617,"results":"410","hashOfConfig":"319"},{"size":1477,"mtime":1608510771197,"results":"411","hashOfConfig":"319"},{"size":1243,"mtime":1608510771213,"results":"412","hashOfConfig":"319"},{"size":3353,"mtime":1611929435096,"results":"413","hashOfConfig":"319"},{"size":4466,"mtime":1611186412170,"results":"414","hashOfConfig":"319"},{"size":32,"mtime":1602519662020,"results":"415","hashOfConfig":"319"},{"size":40,"mtime":1602519661973,"results":"416","hashOfConfig":"319"},{"size":277,"mtime":1610731746609,"results":"417","hashOfConfig":"319"},{"size":44,"mtime":1602519661968,"results":"418","hashOfConfig":"319"},{"size":871,"mtime":1611768384488,"results":"419","hashOfConfig":"319"},{"size":5373,"mtime":1611929435088,"results":"420","hashOfConfig":"319"},{"size":5728,"mtime":1611186412176,"results":"421","hashOfConfig":"319"},{"size":1343,"mtime":1602519661964,"results":"422","hashOfConfig":"319"},{"size":5829,"mtime":1610731746616,"results":"423","hashOfConfig":"319"},{"size":2732,"mtime":1611186412176,"results":"424","hashOfConfig":"319"},{"size":2909,"mtime":1611186412177,"results":"425","hashOfConfig":"319"},{"size":3875,"mtime":1611929435098,"results":"426","hashOfConfig":"319"},{"size":6137,"mtime":1611929435097,"results":"427","hashOfConfig":"319"},{"size":1233,"mtime":1608510771242,"results":"428","hashOfConfig":"319"},{"size":2456,"mtime":1611186412177,"results":"429","hashOfConfig":"319"},{"size":2311,"mtime":1610731746618,"results":"430","hashOfConfig":"319"},{"size":6509,"mtime":1611929435209,"results":"431","hashOfConfig":"319"},{"size":1121,"mtime":1608510771241,"results":"432","hashOfConfig":"319"},{"size":8299,"mtime":1611929435099,"results":"433","hashOfConfig":"319"},{"size":4467,"mtime":1611929435099,"results":"434","hashOfConfig":"319"},{"size":6581,"mtime":1608510771191,"results":"435","hashOfConfig":"319"},{"size":2013,"mtime":1610731746621,"results":"436","hashOfConfig":"319"},{"size":2294,"mtime":1608510771227,"results":"437","hashOfConfig":"319"},{"size":1389,"mtime":1608510771235,"results":"438","hashOfConfig":"319"},{"size":38,"mtime":1602519661979,"results":"439","hashOfConfig":"319"},{"size":56,"mtime":1608510771182,"results":"440","hashOfConfig":"319"},{"size":47,"mtime":1608510771133,"results":"441","hashOfConfig":"319"},{"size":740,"mtime":1610731746608,"results":"442","hashOfConfig":"319"},{"size":1378,"mtime":1611929435075,"results":"443","hashOfConfig":"319"},{"size":1710,"mtime":1611929435072,"results":"444","hashOfConfig":"319"},{"size":2755,"mtime":1608510771153,"results":"445","hashOfConfig":"319"},{"size":540,"mtime":1602519662031,"results":"446","hashOfConfig":"319"},{"size":1363,"mtime":1611926215995,"results":"447","hashOfConfig":"319"},{"size":1293,"mtime":1608510771232,"results":"448","hashOfConfig":"319"},{"size":1219,"mtime":1608510771196,"results":"449","hashOfConfig":"319"},{"size":497,"mtime":1608510771196,"results":"450","hashOfConfig":"319"},{"size":1050,"mtime":1608510771161,"results":"451","hashOfConfig":"319"},{"size":1740,"mtime":1608510771181,"results":"452","hashOfConfig":"319"},{"size":764,"mtime":1608510771167,"results":"453","hashOfConfig":"319"},{"size":607,"mtime":1608510771132,"results":"454","hashOfConfig":"319"},{"size":2463,"mtime":1611929435078,"results":"455","hashOfConfig":"319"},{"size":734,"mtime":1608510771147,"results":"456","hashOfConfig":"319"},{"size":36,"mtime":1602519661968,"results":"457","hashOfConfig":"319"},{"size":161,"mtime":1602519661945,"results":"458","hashOfConfig":"319"},{"size":44,"mtime":1608510771200,"results":"459","hashOfConfig":"319"},{"size":50,"mtime":1608510771211,"results":"460","hashOfConfig":"319"},{"size":40,"mtime":1602519662000,"results":"461","hashOfConfig":"319"},{"size":68,"mtime":1610731746604,"results":"462","hashOfConfig":"319"},{"size":60,"mtime":1610731746605,"results":"463","hashOfConfig":"319"},{"size":54,"mtime":1610731746605,"results":"464","hashOfConfig":"319"},{"size":68,"mtime":1608510771147,"results":"465","hashOfConfig":"319"},{"size":46,"mtime":1602519661953,"results":"466","hashOfConfig":"319"},{"size":48,"mtime":1602519661960,"results":"467","hashOfConfig":"319"},{"size":56,"mtime":1608510771136,"results":"468","hashOfConfig":"319"},{"size":38,"mtime":1602519662016,"results":"469","hashOfConfig":"319"},{"size":55,"mtime":1608510771207,"results":"470","hashOfConfig":"319"},{"size":42,"mtime":1602519661975,"results":"471","hashOfConfig":"319"},{"size":1081,"mtime":1610731746598,"results":"472","hashOfConfig":"319"},{"size":44,"mtime":1602519661973,"results":"473","hashOfConfig":"319"},{"size":51,"mtime":1608510771207,"results":"474","hashOfConfig":"319"},{"size":34,"mtime":1608510771152,"results":"475","hashOfConfig":"319"},{"size":56,"mtime":1602519661996,"results":"476","hashOfConfig":"319"},{"size":31,"mtime":1608510771203,"results":"477","hashOfConfig":"319"},{"size":30,"mtime":1602519662003,"results":"478","hashOfConfig":"319"},{"size":2229,"mtime":1610731746616,"results":"479","hashOfConfig":"319"},{"size":625,"mtime":1608510771169,"results":"480","hashOfConfig":"319"},{"size":48,"mtime":1602519662021,"results":"481","hashOfConfig":"319"},{"size":52,"mtime":1602519661971,"results":"482","hashOfConfig":"319"},{"size":52,"mtime":1608510771189,"results":"483","hashOfConfig":"319"},{"size":2334,"mtime":1611186412164,"results":"484","hashOfConfig":"319"},{"size":40,"mtime":1602519661978,"results":"485","hashOfConfig":"319"},{"size":501,"mtime":1602519662031,"results":"486","hashOfConfig":"319"},{"size":74,"mtime":1602519662011,"results":"487","hashOfConfig":"319"},{"size":52,"mtime":1602519661978,"results":"488","hashOfConfig":"319"},{"size":1750,"mtime":1608510771188,"results":"489","hashOfConfig":"319"},{"size":10130,"mtime":1611929435086,"results":"490","hashOfConfig":"319"},{"size":983,"mtime":1608510771153,"results":"491","hashOfConfig":"319"},{"size":1959,"mtime":1608510771194,"results":"492","hashOfConfig":"319"},{"size":5408,"mtime":1611184419488,"results":"493","hashOfConfig":"319"},{"size":4896,"mtime":1610731746605,"results":"494","hashOfConfig":"319"},{"size":1507,"mtime":1610731746605,"results":"495","hashOfConfig":"319"},{"size":817,"mtime":1611929435089,"results":"496","hashOfConfig":"319"},{"size":1685,"mtime":1611186412163,"results":"497","hashOfConfig":"319"},{"size":2129,"mtime":1611929435077,"results":"498","hashOfConfig":"319"},{"size":366,"mtime":1608510771186,"results":"499","hashOfConfig":"319"},{"size":2002,"mtime":1610997212108,"results":"500","hashOfConfig":"319"},{"size":1191,"mtime":1608510771134,"results":"501","hashOfConfig":"319"},{"size":2584,"mtime":1611186412165,"results":"502","hashOfConfig":"319"},{"size":604,"mtime":1610731746608,"results":"503","hashOfConfig":"319"},{"size":1314,"mtime":1610731746600,"results":"504","hashOfConfig":"319"},{"size":2260,"mtime":1611929435087,"results":"505","hashOfConfig":"319"},{"size":44,"mtime":1602519662004,"results":"506","hashOfConfig":"319"},{"size":46,"mtime":1602519661956,"results":"507","hashOfConfig":"319"},{"size":631,"mtime":1602519662016,"results":"508","hashOfConfig":"319"},{"size":4253,"mtime":1611929435085,"results":"509","hashOfConfig":"319"},{"size":1950,"mtime":1611929435086,"results":"510","hashOfConfig":"319"},{"size":1343,"mtime":1608510771167,"results":"511","hashOfConfig":"319"},{"size":1958,"mtime":1611929435078,"results":"512","hashOfConfig":"319"},{"size":1404,"mtime":1608510771156,"results":"513","hashOfConfig":"319"},{"size":964,"mtime":1611929435090,"results":"514","hashOfConfig":"319"},{"size":54,"mtime":1602519661994,"results":"515","hashOfConfig":"319"},{"size":3973,"mtime":1611929435085,"results":"516","hashOfConfig":"319"},{"size":271,"mtime":1608510771188,"results":"517","hashOfConfig":"319"},{"size":1069,"mtime":1608510771142,"results":"518","hashOfConfig":"319"},{"size":3038,"mtime":1609964237772,"results":"519","hashOfConfig":"319"},{"size":909,"mtime":1608510771188,"results":"520","hashOfConfig":"319"},{"size":54,"mtime":1608510771188,"results":"521","hashOfConfig":"319"},{"size":241,"mtime":1611184419495,"results":"522","hashOfConfig":"319"},{"size":740,"mtime":1611929435089,"results":"523","hashOfConfig":"319"},{"size":38,"mtime":1602519661995,"results":"524","hashOfConfig":"319"},{"size":64,"mtime":1608510771200,"results":"525","hashOfConfig":"319"},{"size":50,"mtime":1602519661976,"results":"526","hashOfConfig":"319"},{"size":46,"mtime":1608510771205,"results":"527","hashOfConfig":"319"},{"size":46,"mtime":1608510771214,"results":"528","hashOfConfig":"319"},{"size":44,"mtime":1602519662003,"results":"529","hashOfConfig":"319"},{"size":44,"mtime":1602519662009,"results":"530","hashOfConfig":"319"},{"size":44,"mtime":1608510771137,"results":"531","hashOfConfig":"319"},{"size":52,"mtime":1602519662008,"results":"532","hashOfConfig":"319"},{"size":1300,"mtime":1610731746603,"results":"533","hashOfConfig":"319"},{"size":1165,"mtime":1611186412169,"results":"534","hashOfConfig":"319"},{"size":1219,"mtime":1611929435090,"results":"535","hashOfConfig":"319"},{"size":5918,"mtime":1611186412166,"results":"536","hashOfConfig":"319"},{"size":2429,"mtime":1611186412169,"results":"537","hashOfConfig":"319"},{"size":54,"mtime":1602519662009,"results":"538","hashOfConfig":"319"},{"size":3230,"mtime":1611186412168,"results":"539","hashOfConfig":"319"},{"size":3183,"mtime":1610731746607,"results":"540","hashOfConfig":"319"},{"size":995,"mtime":1608510771136,"results":"541","hashOfConfig":"319"},{"size":2297,"mtime":1610976449933,"results":"542","hashOfConfig":"319"},{"size":52,"mtime":1602519662010,"results":"543","hashOfConfig":"319"},{"size":44,"mtime":1602519661955,"results":"544","hashOfConfig":"319"},{"size":46,"mtime":1602519661959,"results":"545","hashOfConfig":"319"},{"size":44,"mtime":1608510771137,"results":"546","hashOfConfig":"319"},{"size":50,"mtime":1602519661962,"results":"547","hashOfConfig":"319"},{"size":66,"mtime":1602519661969,"results":"548","hashOfConfig":"319"},{"size":1953,"mtime":1611929435079,"results":"549","hashOfConfig":"319"},{"size":1258,"mtime":1608510771203,"results":"550","hashOfConfig":"319"},{"size":3808,"mtime":1611184419484,"results":"551","hashOfConfig":"319"},{"size":1093,"mtime":1602519661962,"results":"552","hashOfConfig":"319"},{"size":1786,"mtime":1608510771155,"results":"553","hashOfConfig":"319"},{"size":1052,"mtime":1608510771137,"results":"554","hashOfConfig":"319"},{"size":733,"mtime":1608510771142,"results":"555","hashOfConfig":"319"},{"size":2626,"mtime":1610731746600,"results":"556","hashOfConfig":"319"},{"size":4237,"mtime":1608510771199,"results":"557","hashOfConfig":"319"},{"size":1209,"mtime":1602519661994,"results":"558","hashOfConfig":"319"},{"size":39,"mtime":1610731746601,"results":"559","hashOfConfig":"319"},{"size":48,"mtime":1602519661959,"results":"560","hashOfConfig":"319"},{"size":48,"mtime":1602519661952,"results":"561","hashOfConfig":"319"},{"size":54,"mtime":1602519661954,"results":"562","hashOfConfig":"319"},{"size":1045,"mtime":1610731746597,"results":"563","hashOfConfig":"319"},{"size":932,"mtime":1610731746600,"results":"564","hashOfConfig":"319"},{"size":2101,"mtime":1610731746596,"results":"565","hashOfConfig":"319"},{"size":1066,"mtime":1608510771139,"results":"566","hashOfConfig":"319"},{"size":521,"mtime":1608510771144,"results":"567","hashOfConfig":"319"},{"size":60,"mtime":1602519661970,"results":"568","hashOfConfig":"319"},{"size":44,"mtime":1608510771162,"results":"569","hashOfConfig":"319"},{"size":3881,"mtime":1611186412165,"results":"570","hashOfConfig":"319"},{"size":602,"mtime":1608510771162,"results":"571","hashOfConfig":"319"},{"size":48,"mtime":1602519661954,"results":"572","hashOfConfig":"319"},{"size":2296,"mtime":1608510771140,"results":"573","hashOfConfig":"319"},{"size":1048,"mtime":1611186412164,"results":"574","hashOfConfig":"319"},{"size":1340,"mtime":1608510771204,"results":"575","hashOfConfig":"319"},{"size":2939,"mtime":1610731746600,"results":"576","hashOfConfig":"319"},{"size":1309,"mtime":1608510771151,"results":"577","hashOfConfig":"319"},{"size":2567,"mtime":1608510771191,"results":"578","hashOfConfig":"319"},{"size":897,"mtime":1609964237771,"results":"579","hashOfConfig":"319"},{"size":3641,"mtime":1611929435073,"results":"580","hashOfConfig":"319"},{"size":1039,"mtime":1610976449934,"results":"581","hashOfConfig":"319"},{"size":1485,"mtime":1611929435091,"results":"582","hashOfConfig":"319"},{"size":1630,"mtime":1610731746603,"results":"583","hashOfConfig":"319"},{"size":1004,"mtime":1610731746597,"results":"584","hashOfConfig":"319"},{"size":52,"mtime":1602519661976,"results":"585","hashOfConfig":"319"},{"size":60,"mtime":1608510771168,"results":"586","hashOfConfig":"319"},{"size":42,"mtime":1602519661955,"results":"587","hashOfConfig":"319"},{"size":44,"mtime":1602519662023,"results":"588","hashOfConfig":"319"},{"size":50,"mtime":1602519661993,"results":"589","hashOfConfig":"319"},{"size":46,"mtime":1602519661958,"results":"590","hashOfConfig":"319"},{"size":35,"mtime":1608510771241,"results":"591","hashOfConfig":"319"},{"size":54,"mtime":1602519661966,"results":"592","hashOfConfig":"319"},{"size":64,"mtime":1608510771184,"results":"593","hashOfConfig":"319"},{"size":54,"mtime":1602519662005,"results":"594","hashOfConfig":"319"},{"size":46,"mtime":1602519662001,"results":"595","hashOfConfig":"319"},{"size":44,"mtime":1602519661980,"results":"596","hashOfConfig":"319"},{"size":44,"mtime":1602519661998,"results":"597","hashOfConfig":"319"},{"size":44,"mtime":1602519662001,"results":"598","hashOfConfig":"319"},{"size":44,"mtime":1602519662007,"results":"599","hashOfConfig":"319"},{"size":66,"mtime":1608510771146,"results":"600","hashOfConfig":"319"},{"size":4623,"mtime":1611929435075,"results":"601","hashOfConfig":"319"},{"size":1689,"mtime":1608510771164,"results":"602","hashOfConfig":"319"},{"size":912,"mtime":1608510771140,"results":"603","hashOfConfig":"319"},{"size":970,"mtime":1608510771143,"results":"604","hashOfConfig":"319"},{"size":1069,"mtime":1608510771241,"results":"605","hashOfConfig":"319"},{"size":1091,"mtime":1610731746602,"results":"606","hashOfConfig":"319"},{"size":66,"mtime":1608510771184,"results":"607","hashOfConfig":"319"},{"size":1363,"mtime":1608510771199,"results":"608","hashOfConfig":"319"},{"size":1242,"mtime":1608510771195,"results":"609","hashOfConfig":"319"},{"size":1069,"mtime":1608510771171,"results":"610","hashOfConfig":"319"},{"size":897,"mtime":1608510771191,"results":"611","hashOfConfig":"319"},{"size":829,"mtime":1608510771200,"results":"612","hashOfConfig":"319"},{"size":1248,"mtime":1611929435079,"results":"613","hashOfConfig":"319"},{"size":1821,"mtime":1608510771146,"results":"614","hashOfConfig":"319"},{"size":939,"mtime":1611929435076,"results":"615","hashOfConfig":"319"},{"size":1935,"mtime":1611929435077,"results":"616","hashOfConfig":"319"},{"size":44,"mtime":1602519661950,"results":"617","hashOfConfig":"319"},{"size":60,"mtime":1608510771183,"results":"618","hashOfConfig":"319"},{"size":438,"mtime":1602519661950,"results":"619","hashOfConfig":"319"},{"size":48,"mtime":1602519661991,"results":"620","hashOfConfig":"319"},{"size":1739,"mtime":1608510771182,"results":"621","hashOfConfig":"319"},{"size":783,"mtime":1608510771150,"results":"622","hashOfConfig":"319"},{"size":1554,"mtime":1611929435076,"results":"623","hashOfConfig":"319"},{"size":4214,"mtime":1608510771183,"results":"624","hashOfConfig":"319"},{"size":56,"mtime":1608510771165,"results":"625","hashOfConfig":"319"},{"size":54,"mtime":1608510771132,"results":"626","hashOfConfig":"319"},{"size":54,"mtime":1608510771205,"results":"627","hashOfConfig":"319"},{"size":1917,"mtime":1608510771165,"results":"628","hashOfConfig":"319"},{"size":598,"mtime":1611186412161,"results":"629","hashOfConfig":"319"},{"size":865,"mtime":1611184419491,"results":"630","hashOfConfig":"319"},{"size":44,"mtime":1602519661961,"results":"631","hashOfConfig":"319"},{"size":411,"mtime":1602519661961,"results":"632","hashOfConfig":"319"},{"size":44,"mtime":1608510771143,"results":"633","hashOfConfig":"319"},{"size":2152,"mtime":1608510771143,"results":"634","hashOfConfig":"319"},{"size":1035,"mtime":1611929435074,"results":"635","hashOfConfig":"319"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},"16sdh3l",{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"638"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"638"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"638"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"638"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"638"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"638"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"638"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"638"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"638"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"638"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"638"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"638"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853","usedDeprecatedRules":"638"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856","usedDeprecatedRules":"638"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"638"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"638"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"638"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"638"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"638"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892","usedDeprecatedRules":"638"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"638"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"638"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923","usedDeprecatedRules":"638"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1004","usedDeprecatedRules":"638"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011","usedDeprecatedRules":"638"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"638"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029","usedDeprecatedRules":"638"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032","usedDeprecatedRules":"638"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047","usedDeprecatedRules":"638"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062","usedDeprecatedRules":"638"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1101","usedDeprecatedRules":"638"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1110","messages":"1111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1134","usedDeprecatedRules":"638"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1163","usedDeprecatedRules":"638"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1174","usedDeprecatedRules":"638"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1203","usedDeprecatedRules":"638"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1224","messages":"1225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1226","messages":"1227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238","usedDeprecatedRules":"638"},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"638"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1278","messages":"1279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1282","messages":"1283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1284","usedDeprecatedRules":"638"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1287","usedDeprecatedRules":"638"},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1290","messages":"1291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1292","messages":"1293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1302","messages":"1303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1304","messages":"1305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1306","messages":"1307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"638"},{"filePath":"1308","messages":"1309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mauriciovillalba/project/remote/desktop/frontend/src/index.tsx",[],["1310","1311"],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/serviceWorker.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/Controller.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/Heartbeat.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/analyticsHelper.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/styling/theme.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/store.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/styling/index.ts",["1312"],"export type FontSize = 'bug' | 'xxxs' | 'xxs' | 'xs' | 'sm' | 'base' | 'md' | 'lg' | 'xl' | 'xxl' | 'xxxl' | 'max'\n\nexport const fontSizes: { [key in FontSize]: number } = {\n  bug: 7,\n  xxxs: 8,\n  xxs: 10,\n  xs: 11,\n  sm: 12,\n  base: 14,\n  md: 16,\n  lg: 19,\n  xl: 24,\n  xxl: 36,\n  xxxl: 48,\n  max: 64,\n}\n\nexport type Color =\n  | 'primary'\n  | 'primaryLight'\n  | 'primaryLighter'\n  | 'primaryHighlight'\n  | 'secondary'\n  | 'successLight'\n  | 'success'\n  | 'successDark'\n  | 'dangerLight'\n  | 'danger'\n  | 'dangerDark'\n  | 'warning'\n  | 'gray'\n  | 'grayLightest'\n  | 'grayLighter'\n  | 'grayLight'\n  | 'grayDark'\n  | 'grayDarker'\n  | 'grayDarkest'\n  | 'white'\n  | 'black'\n  | 'darken'\n  | 'screen'\n  | 'rpi'\n\nexport const colors: { [key in Color]: string } = {\n  primary: '#0096e7',\n  primaryLight: '#9ed3f0',\n  primaryLighter: '#e7f2f9',\n  primaryHighlight: '#edf8ff',\n  secondary: '#75bd00',\n  successLight: '#a4db4c',\n  success: '#75bd00',\n  successDark: '#436807',\n  dangerLight: '#e07562',\n  danger: '#d6290a',\n  dangerDark: '#871a06',\n  warning: '#ed9912',\n  grayLightest: '#f9f9f9',\n  grayLighter: '#efefef',\n  grayLight: '#dbdbdb',\n  gray: '#bbb',\n  grayDark: '#999',\n  grayDarker: '#666',\n  grayDarkest: '#333',\n  white: '#fff',\n  black: '#000',\n  darken: 'rgba(0,0,0,0.15)',\n  screen: 'rgba(0,0,0,0.03)',\n  rpi: '#C51A4A',\n}\n\nexport type Spacing = 'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n\nexport const spacing: { [key in Spacing]: number } = {\n  xxs: 3,\n  xs: 6,\n  sm: 12,\n  md: 18,\n  lg: 24,\n  xl: 36,\n  xxl: 48,\n}\n\nexport const page = {\n  marginVertical: 30,\n  marginHorizontal: 50,\n}\n\nexport default { fontSizes, colors, spacing, page }\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/shared/constants.ts",["1313","1314"],"/* \n  This is a shared file between backend and frontend\n  It will be copied from the frontend to the backend on build\n  \n  ONLY EDIT THE SOURCE FILE IN frontend\n*/\nexport const CLIENT_ID = process.env.REACT_APP_CLIENT_ID || '26g0ltne0gr8lk1vs51mihrmig'\nexport const API_URL = process.env.REACT_APP_API_URL || process.env.API_URL || 'https://api.remote.it/apv/v27'\nexport const GRAPHQL_API = process.env.REACT_APP_GRAPHQL_API || 'https://api.remote.it/graphql/v1'\nexport const GRAPHQL_BETA_API = process.env.REACT_APP_GRAPHQL_BETA_API || 'https://api.remote.it/graphql/beta'\nexport const DEVELOPER_KEY =\n  process.env.REACT_APP_DEVELOPER_KEY || process.env.DEVELOPER_KEY || 'Mjc5REIzQUQtMTQyRC00NTcxLTlGRDktMTVGNzVGNDYxQkE3'\nexport const PROTOCOL =\n  process.env.PROTOCOL || process.env.NODE_ENV === 'development' ? 'remoteitdev://' : 'remoteit://'\nexport const REDIRECT_URL = process.env.REACT_APP_REDIRECT_URL || process.env.REDIRECT_URL || PROTOCOL + 'authCallback'\nexport const CALLBACK_URL =\n  process.env.REACT_APP_CALLBACK_URL || process.env.CALLBACK_URL || process.env.NODE_ENV === 'development'\n    ? 'https://dev-auth.internal.remote.it/v1/callback'\n    : 'https://auth.api.remote.it/v1/callback'\nexport const WEBSOCKET_URL = process.env.REACT_APP_WEBSOCKET_URL || 'wss://ws.remote.it/v1'\nexport const WEBSOCKET_BETA_URL = process.env.REACT_APP_WEBSOCKET_BETA_URL || 'wss://ws.remote.it/beta'\n\nexport const PORT = process.env.REACT_APP_PORT || 29999\nexport const HEARTBEAT_INTERVAL = 1000 * 15 // 15 SEC\n\nexport const IP_OPEN: ipAddress = '0.0.0.0'\nexport const IP_LATCH: ipAddress = '255.255.255.255'\nexport const IP_PRIVATE: ipAddress = '127.0.0.1'\n\nexport const REGEX_LAST_PATH = /\\/[^/]+$/g\nexport const REGEX_FIRST_PATH = /^\\/(\\w+)/g\nexport const REGEX_NAME_SAFE = /[^a-zA-Z0-9_ -]/g\nexport const REGEX_NOT_FILE_SAFE = /[\\W]/g\nexport const REGEX_IP_SAFE = /[^0-9.]+/g\nexport const REGEX_PORT_SAFE = /[^0-9]+/g\nexport const REGEX_NUMERIC_VALUE = /=(\\d+)/\nexport const REGEX_LAST_NUMBER = /-*\\d*$/\nexport const REGEX_VALID_IP = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]):[0-9]+$/\nexport const REGEX_VALID_HOSTNAME = /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]):[0-9]+$/\n\nexport const FRONTEND_RETRY_DELAY = 20000\nexport const TARGET_SERVICES_LIMIT = 10\nexport const MAX_NAME_LENGTH = 100\n\nexport const LEGACY_ATTRIBUTES = [\n  'categoryA',\n  'categoryB',\n  'categoryC',\n  'categoryD',\n  'categoryE',\n  'statusA',\n  'statusB',\n  'statusC',\n  'statusD',\n  'statusE',\n]\n\nexport const DEFAULT_TARGET: ITarget | ITargetDevice = {\n  hardwareID: '',\n  hostname: IP_PRIVATE,\n  disabled: false,\n  name: '',\n  port: 0,\n  secret: '',\n  type: 1,\n  uid: '',\n}\n\nexport const ROUTES: IRoute[] = [\n  {\n    key: 'failover',\n    icon: 'cloud',\n    name: 'Peer to peer with proxy failover',\n    description:\n      'Default is to prioritize peer to peer connections over proxy connections, but use proxy if peer to peer fails. Also allows overriding at time of connection.',\n  },\n  {\n    key: 'p2p',\n    icon: 'arrows-h',\n    name: 'Peer to peer only',\n    description: 'Only connect using peer to peer. Does not allow overriding.',\n  },\n  {\n    key: 'proxy',\n    icon: 'cloud',\n    name: 'Proxy only',\n    description: 'Only allow proxy connections. Does not allow overriding.',\n  },\n]\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/App/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/rootModel.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/ui.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/shares.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/logs.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/labels.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/licensing.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/devices.ts",["1315"],"import {\n  graphQLSetAttributes,\n  graphQLClaimDevice,\n  graphQLAddService,\n  graphQLUpdateService,\n  graphQLRemoveService,\n} from '../services/graphQLMutation'\nimport { graphQLFetchDevices, graphQLFetchDevice, graphQLAdaptor } from '../services/graphQLDevice'\nimport { cleanOrphanConnections, getConnectionIds } from '../helpers/connectionHelper'\nimport { graphQLGetErrors, graphQLCatchError } from '../services/graphQL'\nimport { getActiveAccountId, getAllDevices } from './accounts'\nimport { platformConfiguration } from '../services/platformConfiguration'\nimport { r3, hasCredentials } from '../services/remote.it'\nimport { ApplicationState } from '../store'\nimport { createModel } from '@rematch/core'\nimport { RootModel } from './rootModel'\n\ntype DeviceParams = { [key: string]: any }\n\ntype IGetDevice = {\n  deviceId: string\n  hidden?: boolean\n}\n\ntype IDeviceState = {\n  initialized: boolean\n  total: number\n  results: number\n  searched: boolean\n  fetching: boolean\n  fetchingMore: boolean\n  destroying: boolean // fixme - move to ui model\n  query: string\n  append: boolean\n  filter: 'all' | 'active' | 'inactive'\n  sort: 'name' | '-name' | 'state' | '-state' | 'color' | '-color'\n  owner: 'all' | 'me' | 'others'\n  size: number\n  from: number\n  contacts: IUserRef[]\n  eventsUrl: string\n}\n\nexport const state: IDeviceState = {\n  initialized: false,\n  total: 0,\n  results: 0,\n  searched: false,\n  fetching: true,\n  fetchingMore: false,\n  destroying: false,\n  query: '',\n  append: false,\n  filter: 'all',\n  sort: 'name',\n  owner: 'all',\n  size: 50,\n  from: 0,\n  contacts: [],\n  eventsUrl: '',\n}\n\nexport default createModel<RootModel>()({\n  state,\n  effects: (dispatch: any) => ({\n    /* \n      GraphQL search query for all device data\n    */\n    async fetch(optionalAccountId?: string, globalState?) {\n      const accountId: string = optionalAccountId || getActiveAccountId(globalState)\n      const { set, graphQLFetchProcessor } = dispatch.devices\n      const { setDevices, appendDevices } = dispatch.accounts\n      const { query, sort, owner, filter, size, from, append, searched } = globalState.devices\n      const { user } = globalState.auth\n      const options: gqlOptions = {\n        size,\n        from,\n        account: accountId,\n        state: filter === 'all' ? undefined : filter,\n        name: query,\n        ids: append ? undefined : getConnectionIds(globalState),\n        sort,\n        owner: owner === 'all' ? undefined : owner === 'me',\n      }\n\n      if (!(await hasCredentials())) return\n\n      set({ fetching: true })\n      console.log('FETCHING', accountId)\n      const { devices, connections, total, contacts, error } = await graphQLFetchProcessor(options)\n\n      if (searched) set({ results: total })\n      else set({ total })\n\n      // awaiting setDevices is critical for accurate initialized state\n      if (append) {\n        console.log('APPENDING', accountId)\n        await appendDevices({ devices, accountId })\n      } else {\n        await setDevices({ devices, accountId })\n        await appendDevices({ devices: connections, accountId: user?.id })\n      }\n\n      if (!error) cleanOrphanConnections()\n      platformConfiguration()\n\n      // @TODO pull contacts out into its own model / request on page load\n      set({ initialized: true, fetching: false, append: false, contacts })\n    },\n\n    /*\n      Fetches a single device and merges in the state\n    */\n    async fetchSingle({ deviceId, hidden }: IGetDevice, globalState: any): Promise<IDevice | undefined> {\n      const { set } = dispatch.devices\n      const device = selectDevice(globalState, deviceId)\n      const accountId = device?.accountId || getActiveAccountId(globalState)\n\n      let result: IDevice | undefined\n\n      if (!(await hasCredentials()) || !deviceId) return\n\n      set({ fetching: true })\n      try {\n        const gqlResponse = await graphQLFetchDevice(deviceId)\n        graphQLGetErrors(gqlResponse)\n        const gqlDevice = gqlResponse?.data?.data?.login.device || {}\n        const loginId = gqlResponse?.data?.data?.login?.id\n        result = gqlDevice ? graphQLAdaptor(gqlDevice, loginId, accountId, hidden)[0] : undefined\n      } catch (error) {\n        await graphQLCatchError(error)\n      }\n\n      await dispatch.accounts.setDevice({ id: deviceId, accountId, device: result })\n      set({ fetching: false })\n\n      platformConfiguration()\n      return result\n    },\n\n    async graphQLFetchProcessor(options: gqlOptions) {\n      const { graphQLMetadata } = dispatch.devices\n      const parseAccounts = dispatch.accounts.parse\n      try {\n        const gqlResponse = await graphQLFetchDevices(options)\n        const [deviceData, connectionData, total, loginId, contacts, error] = await graphQLMetadata(gqlResponse)\n        const connections = graphQLAdaptor(connectionData, loginId, options.account, true)\n        const devices = graphQLAdaptor(deviceData, loginId, options.account)\n        await parseAccounts(gqlResponse)\n        return { devices, connections, total, contacts, error }\n      } catch (error) {\n        await graphQLCatchError(error)\n        return { devices: [], total: 0, error }\n      }\n    },\n\n    async updateShareDevice(device: IDevice) {\n      dispatch.accounts.setDevice({ id: device.id, device })\n    },\n\n    async graphQLMetadata(gqlData: any) {\n      const error = graphQLGetErrors(gqlData)\n      const total = gqlData?.data?.data?.login?.account?.devices?.total || 0\n      const devices = gqlData?.data?.data?.login?.account?.devices?.items || {}\n      const { connections, contacts, id } = gqlData?.data?.data?.login\n      return [devices, connections, total, id, contacts, error]\n    },\n\n    async renameService(service: IService, globalState: any) {\n      let device = getAllDevices(globalState).find((d: IDevice) => d.id === service.deviceID)\n      if (!device) return\n      const index = device.services.findIndex((s: IService) => s.id === service.id)\n      device.services[index].name = service.name\n      dispatch.accounts.setDevice({ id: device.id, device })\n      dispatch.devices.rename(service)\n    },\n\n    async renameDevice(device: IDevice) {\n      dispatch.accounts.setDevice({ id: device.id, device })\n      dispatch.devices.rename(device)\n    },\n\n    async rename({ id, name }: { id: string; name: string }) {\n      try {\n        await r3.post(`/device/name/`, { deviceaddress: id, devicealias: name })\n        await dispatch.devices.fetch()\n      } catch (error) {\n        dispatch.ui.set({ errorMessage: error.message })\n        console.warn(error)\n      }\n    },\n\n    async setAttributes(device: IDevice) {\n      graphQLSetAttributes(device.attributes, device.id)\n      dispatch.accounts.setDevice({ id: device.id, device })\n    },\n\n    async setServiceAttributes(service: IService, globalState) {\n      let device = getAllDevices(globalState).find((d: IDevice) => d.id === service.deviceID)\n      if (!device) return\n      const index = device.services.findIndex((s: IService) => s.id === service.id)\n      device.services[index].attributes = service.attributes\n      graphQLSetAttributes(service.attributes, service.id)\n      dispatch.accounts.setDevice({ id: device.id, device })\n    },\n\n    async cloudAddService({ form, deviceId }: { form: IServiceForm; deviceId: string }) {\n      console.log('CLOUD ADD SERVICE', form)\n      dispatch.ui.set({ setupServiceBusy: form.uid, setupAddingService: true })\n      const result = await graphQLAddService({\n        deviceId,\n        name: form.name,\n        application: form.type,\n        host: form.hostname,\n        port: form.port,\n        enabled: !form.disabled,\n      })\n      console.log('CLOUD RESULT', result)\n      const id = result?.data?.data?.addService?.id\n      if (id) {\n        await graphQLSetAttributes(form.attributes, id)\n        await dispatch.devices.fetchSingle({ deviceId })\n      }\n      dispatch.ui.set({ setupServiceBusy: undefined, setupAddingService: false })\n    },\n\n    async cloudUpdateService({ form, deviceId }: { form: IServiceForm; deviceId: string }) {\n      console.log('CLOUD UPDATE SERVICE', form)\n      dispatch.ui.set({ setupServiceBusy: form.uid })\n      await graphQLUpdateService({\n        id: form.uid,\n        name: form.name,\n        application: form.type,\n        host: form.hostname,\n        port: form.port,\n        enabled: !form.disabled,\n      })\n      await graphQLSetAttributes(form.attributes, form.uid)\n      await dispatch.devices.fetchSingle({ deviceId })\n      dispatch.ui.set({ setupServiceBusy: undefined })\n    },\n\n    async cloudRemoveService({ serviceId, deviceId }: { serviceId: string; deviceId?: string }) {\n      console.log('REMOVING SERVICE', serviceId, deviceId)\n      dispatch.ui.set({ setupServiceBusy: serviceId, setupDeletingService: serviceId })\n      await graphQLRemoveService(serviceId)\n      await dispatch.devices.fetchSingle({ deviceId })\n      dispatch.ui.set({ setupServiceBusy: undefined, setupDeletingService: false })\n    },\n\n    async claimDevice(code: string) {\n      console.log('CLAIM DEVICE CODE', code)\n      const result = await graphQLClaimDevice(code)\n      try {\n        const device = result?.data?.data?.claimDevice\n        if (device?.id) {\n          await dispatch.devices.fetch() // fetch all so that the sorting is correct\n          dispatch.ui.set({ successMessage: `'${device.name}' was successfully registered!` })\n        } else {\n          dispatch.ui.set({ noticeMessage: `Your device (${code}) could not be found.` })\n        }\n        dispatch.ui.set({ claiming: false })\n      } catch (error) {\n        dispatch.ui.set({ errorMessage: `An error occurred registering your device. (${error.message})` })\n        console.error(error)\n      }\n    },\n\n    async destroy(device: IDevice, globalState) {\n      const { auth } = globalState\n      dispatch.devices.set({ destroying: true })\n      try {\n        device.shared\n          ? await r3.post(`/developer/device/share/${device.id}/${encodeURIComponent(auth.user?.email || '')}`, {\n              devices: device.id,\n              emails: auth.user?.email,\n              state: 'off',\n              scripting: false,\n            })\n          : await r3.post(`/developer/device/delete/registered/${device.id}`)\n        await dispatch.devices.fetch()\n      } catch (error) {\n        dispatch.ui.set({ errorMessage: error.message })\n        console.warn(error)\n      }\n      dispatch.devices.set({ destroying: false })\n    },\n  }),\n\n  reducers: {\n    set(state: IDeviceState, params: DeviceParams) {\n      Object.keys(params).forEach(key => (state[key] = params[key]))\n      return state\n    },\n  },\n})\n\nconst isIService = (instance: any): instance is IService => !!instance?.license\n\nexport function isOffline(instance?: IDevice | IService, connection?: IConnection) {\n  const inactive = instance?.state !== 'active' && !connection?.active\n  const unlicensed = isIService(instance) && instance.license === 'UNLICENSED'\n  return inactive || unlicensed\n}\n\nexport function selectDevice(state: ApplicationState, deviceId: string) {\n  return getAllDevices(state).find(d => d.id === deviceId)\n}\n\nexport function selectService(state: ApplicationState, serviceId: string) {\n  return findService(getAllDevices(state), serviceId)\n}\n\nexport function findService(devices: IDevice[], id: string) {\n  let service: IService | undefined\n  const device = devices.find(\n    d =>\n      d.id === id ||\n      d?.services?.find(s => {\n        if (s.id === id) {\n          service = s\n          return true\n        }\n      })\n  )\n  return [service, device] as [IService | undefined, IDevice | undefined]\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/accounts.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/shared/nameHelper.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/graphQL.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/graphQLLogs.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/remote.it.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/platformConfiguration.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/graphQLMutation.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/sharedAdaptor.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/platformHelper.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/connectionHelper.ts",["1316"],"import { emit } from '../services/Controller'\nimport { IP_OPEN, IP_PRIVATE } from '../shared/constants'\nimport { attributeName } from '../shared/nameHelper'\nimport { getAllDevices, getActiveAccountId } from '../models/accounts'\nimport { ApplicationState } from '../store'\nimport { store } from '../store'\n\nexport const DEFAULT_CONNECTION = {\n  id: 'service-id',\n  name: 'Unknown',\n  owner: { id: '', email: 'Unknown' },\n  deviceID: 'Unknown',\n  online: false,\n  port: 33000,\n  host: IP_PRIVATE,\n  restriction: IP_OPEN,\n  autoStart: true,\n}\n\nexport function connectionName(service?: IService, device?: IDevice) {\n  if (!device) return attributeName(service)\n  if (!service) return attributeName(device)\n  return `${attributeName(device)} - ${attributeName(service)}`\n}\n\nexport function newConnection(service?: IService | null, port?: number) {\n  const state = store.getState()\n  const accountId = getActiveAccountId(state)\n  const user = [...state.accounts.member, state.auth.user].find(u => u?.id === accountId)\n\n  let connection: IConnection = {\n    ...DEFAULT_CONNECTION,\n    port,\n    owner: { id: user?.id || '', email: user?.email || 'Unknown' },\n    failover: service?.attributes.route !== 'p2p',\n    proxyOnly: service?.attributes.route === 'proxy',\n  }\n\n  if (service) {\n    const device = getAllDevices(state).find((d: IDevice) => d.id === service.deviceID)\n    // @TODO The whole service obj should be in the connection\n    connection.name = attributeName(service)\n    connection.id = service.id\n    connection.deviceID = service.deviceID\n    connection.online = service.state === 'active'\n    connection.typeID = service.typeID\n    if (device) connection.name = connectionName(service, device)\n  }\n\n  return connection\n}\n\nexport function setConnection(connection: IConnection) {\n  if (!connection.id || !connection.name || !connection.deviceID) {\n    var error = new Error()\n    console.warn('Connection missing data. Set failed', connection, error.stack)\n    return false\n  }\n  emit('connection', connection)\n}\n\nexport function clearConnectionError(connection: IConnection) {\n  delete connection.error\n  emit('connection', connection)\n}\n\nexport function getConnectionIds(state: ApplicationState) {\n  const { device } = state.backend\n  const connections = selectConnections(state)\n  let ids = connections.map(c => c.id)\n  if (device.uid && !ids.includes(device.uid)) ids.push(device.uid)\n  return ids\n}\n\nexport function selectConnections(state: ApplicationState) {\n  const id = state.auth.user?.id\n  return state.backend.connections.filter(c => !!c.startTime)\n}\n\nexport function selectMyConnections(state: ApplicationState) {\n  const devices = getAllDevices(state)\n  const allConnections = selectConnections(state)\n\n  let services: IService[] = []\n  let connections: IConnection[] = []\n\n  for (const device of devices) {\n    for (const service of device.services) {\n      const index = allConnections.findIndex(c => c.id === service.id)\n\n      if (index > -1) {\n        connections.push(allConnections[index])\n        services.push(service)\n        allConnections.splice(index, 1)\n      }\n    }\n  }\n\n  return { services, connections }\n}\n\nexport function updateConnections(devices: IDevice[]) {\n  const { connections } = store.getState().backend\n  let lookup = connections.reduce((result: ConnectionLookup, c: IConnection) => {\n    result[c.id] = c\n    return result\n  }, {})\n\n  devices.forEach(d => {\n    d.services.forEach(s => {\n      const connection = lookup[s.id]\n\n      const online = s.state === 'active'\n      if (connection && connection.online !== online) {\n        setConnection({ ...connection, deviceID: d.id, online })\n      }\n    })\n  })\n\n  return devices\n}\n\nexport function cleanOrphanConnections() {\n  const state = store.getState()\n  const services = getAllDevices(state)\n    .map(d => d.services.map(s => s.id))\n    .flat()\n  state.backend.connections.forEach(c => {\n    if (!services.includes(c.id)) {\n      emit('service/forget', c)\n    }\n  })\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/backend.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/binaries.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/graphQLDevice.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/analytics.ts",["1317","1318","1319","1320","1321","1322","1323","1324"],"import { createModel } from '@rematch/core'\nimport { ApplicationState } from '../store'\nimport { graphQLRequest, graphQLGetErrors, graphQLCatchError } from '../services/graphQL'\nimport { hasCredentials } from '../services/remote.it'\nimport { RootModel } from './rootModel'\nimport { set as setDate, eachDayOfInterval, isEqual } from 'date-fns'\nimport { getTimeZone } from '../helpers/dateHelper'\nimport { startOfDay } from 'date-fns/esm'\n\nconst MAX_DEVICE_LENGTH = 1000\n\nexport interface IAnalyticsDevice {\n  id: string\n  name: string\n  quality: 'GOOD' | 'MODERATE' | 'POOR' | 'UNKNOWN'\n  createdAt: Date\n  qualitySort: number\n}\nexport enum QualityType {\n  'GOOD' = 3,\n  'MODERATE' = 2,\n  'POOR' = 1,\n  'UNKNOWN' = 0,\n}\nexport interface IDateOptions {\n  startDate: Date\n  endDate: Date\n}\nexport interface ITimeSeriesData {\n  date: Date\n  count: number\n}\n\ntype IAnalyticsState = {\n  fetching: boolean\n  startDate: Date\n  endDate?: Date\n  from: number\n  size: number\n  totalDevices: number\n  lastMonthDeviceCount: number\n  lastMonthConnectionCount: number\n  devices: IAnalyticsDevice[]\n  deviceTimeseries: ITimeSeriesData[]\n  connectionTimeseries: ITimeSeriesData[]\n  timeZone?: string\n}\n\nconst state: IAnalyticsState = {\n  fetching: false,\n  from: 0,\n  size: MAX_DEVICE_LENGTH,\n  startDate: setDate(new Date().setMonth(new Date().getMonth() - 1), {\n    date: 1,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n  }),\n  endDate: setDate(new Date().setDate(0), { hours: 23, minutes: 59, seconds: 59, milliseconds: 999 }),\n  totalDevices: 0,\n  lastMonthDeviceCount: 0,\n  lastMonthConnectionCount: 0,\n  devices: [],\n  deviceTimeseries: [],\n  connectionTimeseries: [],\n}\n\ntype analyticsGQLOptions = {\n  size: number\n  from: number\n}\ntype parseDeviceOptions = {\n  devices: any[]\n  connectionTimeseries: ITimeSeriesData[]\n  lastMonthConnectionCount: number\n}\nexport default createModel<RootModel>()({\n  state,\n  effects: (dispatch: any) => ({\n    async fetchAnalytics(_: void, globalState: any) {\n      if (!hasCredentials()) return\n      const { from, size, startDate, endDate } = globalState.analytics\n      const { getAnalytics, set, primeGraphTimeseries } = dispatch.analytics\n      const primedGraphTimeseries = primeGraphTimeseries({ startDate: startDate, endDate: endDate })\n      const timeZone = getTimeZone()\n      set({\n        fetching: true,\n        deviceTimeseries: primedGraphTimeseries,\n        connectionTimeseries: primedGraphTimeseries,\n      })\n      getAnalytics({ from, size })\n    },\n    async getAnalytics({ from, size }: analyticsGQLOptions, globalState: ApplicationState) {\n      const { startDate, endDate } = globalState.analytics\n      const { parse } = dispatch.analytics\n      const options = { from, size, start: startDate, end: endDate, timezone: getTimeZone() }\n\n      try {\n        const result = await graphQLRequest(\n          `query($from: Int, $size: Int, $start: DateTime, $end: DateTime, $timezone: String) {\n             login {\n              devices(size: $size, from: $from, owner: true) {\n                total\n                hasMore\n                items {\n                  id\n                  name\n                  created\n                  endpoint {\n                    quality\n                  }\n                  services {\n                    id\n                    name\n                    type\n                    timeSeries(type: CONNECT, start: $start, end: $end, resolution: DAY, timezone: $timezone) {\n                      data\n                    }\n                  }\n                }\n              }\n            }\n          }`,\n          options\n        )\n        graphQLGetErrors(result)\n        parse(result)\n      } catch (error) {\n        await graphQLCatchError(error)\n      }\n    },\n    async parse(gqlResponse: any, globalState: ApplicationState) {\n      const gqlData = gqlResponse?.data?.data?.login\n      const {\n        from,\n        size,\n        startDate,\n        endDate,\n        timeZone,\n        devices,\n        connectionTimeseries,\n        deviceTimeseries,\n        lastMonthConnectionCount,\n      } = globalState.analytics\n      const { set, getAnalytics, parseDevices } = dispatch.analytics\n      if (!gqlData) {\n        const newState = set({\n          fetching: false,\n        })\n        return\n      }\n      const { parsedDevices, updatedConnectionTimeseries, updatedLastMonthConnectionCount } = parseDevices({\n        devices: gqlData.devices.items,\n        connectionTimeseries: connectionTimeseries,\n        lastMonthConnectionCount: lastMonthConnectionCount,\n      })\n      const devicelist: IAnalyticsDevice[] = devices.length < 1 ? parsedDevices : devices.concat(parsedDevices)\n      let newFromIndex = from\n      if (gqlData.devices.hasMore) {\n        newFromIndex += size\n      } else {\n        newFromIndex = gqlData.devices.total\n      }\n      set({\n        from: newFromIndex,\n        devices: devicelist,\n        totalDevices: gqlData.devices.total,\n        connectionTimeseries: updatedConnectionTimeseries,\n        lastMonthConnectionCount: updatedLastMonthConnectionCount,\n      })\n      if (gqlData.devices.hasMore) {\n        getAnalytics({ from: newFromIndex, size })\n        return\n      }\n      //iterate over devices to put them in a timeseries & calculate connections\n      let pastMonthDevices = 0\n      //add to the devices in this period\n      const newDeviceTimeseries = deviceTimeseries.map(item => {\n        let count = 0\n        devicelist.map(d => {\n          if (isEqual(startOfDay(item.date), startOfDay(d.createdAt))) {\n            pastMonthDevices += 1\n            count += 1\n            return count\n          }\n        })\n        return { date: item.date, count }\n      })\n      set({\n        fetching: false,\n        lastMonthDeviceCount: pastMonthDevices,\n        deviceTimeseries: newDeviceTimeseries,\n      })\n    },\n    primeGraphTimeseries({ startDate, endDate }: IDateOptions) {\n      //make an array of graph objects for each day in the month\n      if (startDate && endDate) {\n        const daysInMonth = eachDayOfInterval({\n          start: startDate,\n          end: endDate,\n        })\n        const initTimeSeries = daysInMonth.map(d => {\n          return { date: d, count: 0 }\n        })\n        return initTimeSeries\n      }\n    },\n    parseDevices({ devices, connectionTimeseries, lastMonthConnectionCount }: parseDeviceOptions, globalState) {\n      let updatedLastMonthConnectionCount = lastMonthConnectionCount\n      const parsedDevices: IAnalyticsDevice[] = devices.map(d => {\n        const createdDate = new Date(d.created)\n        const qualitySort = getQualityNumber(d.endpoint.quality)\n        const device: IAnalyticsDevice = {\n          createdAt: createdDate,\n          id: d.id,\n          name: d.name,\n          quality: d.endpoint.quality,\n          qualitySort,\n        }\n\n        //go through the services and extract connection time series\n        d.services.map(s => {\n          //start adding to the connections timeseries\n          if (s.timeSeries.data.length > 0) {\n            s.timeSeries.data.map((c, i) => {\n              if (c > 0) {\n                connectionTimeseries[i]['count'] += c\n                updatedLastMonthConnectionCount += c\n              }\n            })\n          }\n        })\n        return device\n      })\n      return {\n        parsedDevices: parsedDevices,\n        updatedConnectionTimeseries: connectionTimeseries,\n        updatedLastMonthConnectionCount: updatedLastMonthConnectionCount,\n      }\n    },\n  }),\n  reducers: {\n    set(state: IAnalyticsState, params: ILookup<any>) {\n      Object.keys(params).forEach(key => (state[key] = params[key]))\n      return state\n    },\n  },\n})\nfunction getQualityNumber(quality: string) {\n  let value\n  switch (quality) {\n    case 'GOOD':\n      value = 3\n      break\n    case 'MODERATE':\n      value = 2\n      break\n    case 'POOR':\n      value = 1\n      break\n    case 'UNKNOWN':\n      value = 0\n      break\n  }\n  return value\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/auth.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/models/applicationTypes.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/App/App.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/sleep.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/Browser.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/dateHelper.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/cloudController.ts",["1325","1326"],"import ReconnectingWebSocket from 'reconnecting-websocket'\nimport { WEBSOCKET_URL, WEBSOCKET_BETA_URL } from '../shared/constants'\nimport { getToken } from './remote.it'\nimport { version } from '../../package.json'\nimport { store } from '../store'\nimport { notify } from './Notifications'\nimport { selectService } from '../models/devices'\nimport { connectionName, setConnection } from '../helpers/connectionHelper'\nimport { graphQLGetErrors } from './graphQL'\n\nclass CloudController {\n  socket?: ReconnectingWebSocket\n  token?: string\n\n  init() {\n    this.connect()\n  }\n\n  connect() {\n    this.socket = new ReconnectingWebSocket(version.includes('alpha') ? WEBSOCKET_BETA_URL : WEBSOCKET_URL)\n    this.socket.addEventListener('open', this.onOpen)\n    this.socket.addEventListener('message', this.onMessage)\n    this.socket.addEventListener('close', e => console.log('CLOUD WS closed', e))\n    this.socket.addEventListener('error', e => console.warn('CLOUD WS error', e))\n  }\n\n  close() {\n    this.socket?.close()\n  }\n\n  onOpen = event => {\n    console.log('\\n-------------------------> SOCKET OPEN\\n\\n')\n    console.log('CLOUD WS opened', event)\n    this.authenticate()\n    // const unshare = {\n    //   data: {\n    //     event: {\n    //       type: 'DEVICE_SHARE',\n    //       state: null,\n    //       timestamp: '2020-12-24T00:47:47.000Z',\n    //       target: [\n    //         {\n    //           id: '80:00:00:00:01:09:62:19',\n    //           name: 'ubuntu vm',\n    //           application: 35,\n    //           platform: 1120,\n    //           owner: { id: 'E62083B2-91D8-4113-8778-3C77BFDCA1F7', email: 'jamieruderman@gmail.com' },\n    //         },\n    //       ],\n    //       actor: { id: 'E62083B2-91D8-4113-8778-3C77BFDCA1F7', email: 'jamieruderman@gmail.com' },\n    //       users: [{ id: 'C3DEBA49-1019-4571-AA34-4F2D58B69A7F', email: 'jamie@remote.it' }],\n    //       scripting: false,\n    //     },\n    //   },\n    // }\n    // const share = {\n    //   data: {\n    //     event: {\n    //       type: 'DEVICE_SHARE',\n    //       state: null,\n    //       timestamp: '2020-12-24T00:44:15.000Z',\n    //       actor: { id: 'E62083B2-91D8-4113-8778-3C77BFDCA1F7', email: 'jamieruderman@gmail.com' },\n    //       users: [{ id: 'C3DEBA49-1019-4571-AA34-4F2D58B69A7F', email: 'jamie@remote.it' }],\n    //       target: [\n    //         {\n    //           id: '80:00:00:00:01:09:62:19',\n    //           name: 'ubuntu vm',\n    //           application: 35,\n    //           platform: 1120,\n    //           owner: { id: 'E62083B2-91D8-4113-8778-3C77BFDCA1F7', email: 'jamieruderman@gmail.com' },\n    //         },\n    //         {\n    //           id: '80:00:00:00:01:09:62:1B',\n    //           name: 'remoteit admin',\n    //           application: 42,\n    //           platform: 1120,\n    //           owner: { id: 'E62083B2-91D8-4113-8778-3C77BFDCA1F7', email: 'jamieruderman@gmail.com' },\n    //         },\n    //       ],\n    //     },\n    //   },\n    // }\n  }\n\n  authenticate = async () => {\n    this.socket?.send(\n      JSON.stringify({\n        action: 'subscribe',\n        headers: { authorization: await getToken() },\n        query: `\n        {\n          event {\n            type\n            state\n            timestamp\n            target {\n              id\n              name\n              application\n              platform\n              owner {\n                id\n                email\n              }\n            }\n            actor {\n              id\n              email\n            }\n            ... on DeviceConnectEvent {\n              platform\n            }\n            ... on DeviceShareEvent {\n              scripting\n            }\n          }\n        }`,\n        // \"variables\": {}\n      })\n    )\n  }\n\n  onMessage = response => {\n    console.log('\\n-------------------------> SOCKET MESSAGE\\n\\n', response.data)\n    let event = this.parse(response)\n    console.log('EVENT', event)\n    if (!event) return\n    event = this.update(event)\n    notify(event)\n  }\n\n  errors(data) {\n    const errors = graphQLGetErrors({ data }, true)\n    return !!errors?.length\n  }\n\n  parse(response): ICloudEvent | undefined {\n    const state = store.getState()\n    try {\n      const json = JSON.parse(response.data)\n      if (this.errors(json)) {\n        return\n      }\n      let event = json.data.event\n      return {\n        type: event.type,\n        state: event.state,\n        timestamp: new Date(event.timestamp),\n        actor: event.actor,\n        users: event.users,\n        authUserId: state.auth.user?.id || '',\n        platform: event.platform,\n        target: event.target.map(t => {\n          const [service, device] = selectService(state, t.id)\n          return {\n            id: t.id,\n            name: connectionName(service, device) || t.name,\n            owner: t.owner,\n            typeID: t.application,\n            targetPlatform: t.platform,\n            connection: state.backend.connections.find(c => c.id === t.id),\n            service,\n            device,\n          }\n        }),\n      }\n    } catch (error) {\n      console.warn('Event parsing error', response, error)\n    }\n  }\n\n  update(event: ICloudEvent) {\n    const { accounts } = store.dispatch\n\n    switch (event.type) {\n      case 'DEVICE_STATE':\n        // active | inactive\n        const state = event.state === 'active' ? 'active' : 'inactive'\n        event.target.forEach(target => {\n          if (target.device?.id === target.id) {\n            target.device.state = state\n            console.log('DEVICE STATE', target.device.name, target.device.state)\n          } else {\n            target.device?.services.find(service => {\n              if (service.id === target.service?.id) {\n                service.state = state\n                console.log('SERVICE STATE', service.name, service.state)\n              }\n            })\n          }\n          if (target.device?.id) {\n            accounts.setDevice({ id: target.device.id, device: target.device })\n          }\n        })\n        break\n\n      case 'DEVICE_CONNECT':\n        // connected | disconnected\n        const isYou = event.authUserId === event.actor.id\n        event.target.forEach(target => {\n          // You have changed connection state\n          if (isYou && target.connection) {\n            target.connection.active = event.state === 'connected'\n            target.connection.connecting = false\n            setConnection(target.connection)\n          }\n\n          // connection state for other users\n          else {\n            target.device?.services.find(service => {\n              if (service.id === target.service?.id) {\n                const i = service.sessions.findIndex(s => s.id === event.actor.id)\n                if (i > -1) service.sessions.splice(i, 1)\n                if (event.state === 'connected') {\n                  service.sessions.push({\n                    id: event.actor.id,\n                    timestamp: event.timestamp,\n                    email: event.actor.email,\n                    platform: event.platform,\n                  })\n                }\n              }\n            })\n            if (target.device?.id) {\n              accounts.setDevice({ id: target.device.id, device: target.device })\n            }\n          }\n\n          console.log('CONNECTION STATE', target.connection?.name, target.connection?.active)\n        })\n        break\n\n      case 'DEVICE_SHARE':\n      // @TODO parse and display notice\n    }\n    return event\n  }\n}\n\nconst cloudController = new CloudController()\nexport default cloudController\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/uiHelper.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Header/Header.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/services/Notifications.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Icon/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Router/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Body/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/Page/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SignInPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InstallationNotice/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LoadingMessage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/shared/applications.ts",["1327"],"/* \n  This is a shared file between backend and frontend\n  It will be copied from the frontend to the backend on build\n  \n  ONLY EDIT THE SOURCE FILE IN frontend\n*/\n\nimport { replaceHost } from './nameHelper'\n\nexport const DEVICE_TYPE = 35\n\nexport class Application {\n  title: string = 'URL'\n  icon: string = 'arrow-right'\n  context?: 'copy' | 'launch'\n  defaultLaunchTemplate: string = 'http://[host]:[port]'\n  defaultCommandTemplate: string = '[host]:[port]'\n  defaultTokens: string[] = ['host', 'port', 'id']\n  iconRotate: boolean = false\n  localhost?: boolean\n\n  connection?: IConnection\n  service?: IService\n\n  REGEX_PARSE: RegExp = /\\[[^\\W\\[\\]]+\\]/g\n\n  constructor(options: { [key in keyof Application]?: any }) {\n    Object.assign(this, options)\n  }\n\n  value(token: string) {\n    return this.connection ? this.connection[token] : this.service ? this.service.attributes[token] : ''\n  }\n\n  get templateKey() {\n    return this.context === 'copy' ? 'commandTemplate' : 'launchTemplate'\n  }\n\n  get contextTitle() {\n    return this.context === 'copy' ? 'Copy Command' : 'Launch URL'\n  }\n\n  get template() {\n    return this.context === 'copy' ? this.commandTemplate : this.launchTemplate\n  }\n\n  get command() {\n    return this.parse(this.template)\n  }\n\n  get prompt() {\n    return this.missingTokens.length\n  }\n\n  get tokens() {\n    return this.extractTokens(this.launchTemplate + this.commandTemplate)\n  }\n\n  get allTokens() {\n    return this.defaultTokens.concat(this.customTokens)\n  }\n\n  get customTokens() {\n    return this.tokens.filter(token => !this.defaultTokens.includes(token))\n  }\n\n  get data() {\n    let data: ILookup<string> = {}\n    this.missingTokens.forEach(token => (data[token] = ''))\n    return data\n  }\n\n  get missingTokens() {\n    return this.extractTokens(this.parse(this.template)) || []\n  }\n\n  private get launchTemplate() {\n    return this.connection?.launchTemplate || this.service?.attributes.launchTemplate || this.defaultLaunchTemplate\n  }\n\n  private get commandTemplate() {\n    return (\n      this.connection?.commandTemplate ||\n      this.service?.attributes.commandTemplate ||\n      this.defaultCommandTemplate ||\n      this.defaultLaunchTemplate\n    )\n  }\n\n  private parse(template: string = '') {\n    let lookup: ILookup<any> = this.connection || {}\n    if (this.service) lookup = { ...this.service.attributes, ...lookup }\n\n    this.tokens.forEach(token => {\n      if (lookup[token]) {\n        const search = new RegExp(`\\\\[${token}\\\\]`, 'g')\n        template = template.replace(search, encodeURI(lookup[token]))\n      }\n    })\n\n    template = replaceHost(template, this.localhost)\n    return template\n  }\n\n  private extractTokens(template: string) {\n    const matches: string[] = (template.match(this.REGEX_PARSE) || []).map(m => m.slice(1, -1))\n    const unique = new Set(matches)\n    return [...Array.from(unique)]\n  }\n}\n\nclass DefaultApp extends Application {\n  title = 'URL'\n  icon = 'arrow-right'\n  iconRotate = true\n}\n\nexport function getApplication(context: Application['context'], service?: IService, connection?: IConnection) {\n  const app = getApplicationType(service?.typeID || connection?.typeID)\n\n  app.context = context\n  app.service = service\n  app.connection = connection\n\n  return app\n}\n\nfunction getApplicationType(typeID?: number) {\n  let app: Application\n\n  switch (typeID) {\n    case 4:\n      app = new Application({\n        title: 'VNC',\n        icon: 'desktop',\n        defaultLaunchTemplate: 'vnc://[username]@[host]:[port]',\n      })\n      break\n    case 28:\n      app = new Application({\n        title: 'SSH',\n        icon: 'terminal',\n        defaultLaunchTemplate: 'ssh://[username]@[host]:[port]',\n        defaultCommandTemplate:\n          'ssh -l [username] [host] -p [port] -o \"StrictHostKeyChecking=no\" -o \"UserKnownHostsFile /dev/null\"',\n      })\n      break\n    case 8:\n    case 10:\n    case 33:\n      app = new Application({\n        title: 'Secure Browser',\n        icon: 'arrow-right',\n        iconRotate: true,\n        defaultLaunchTemplate: 'https://[host]:[port]',\n      })\n      break\n    case 7:\n    case 30:\n    case 38:\n    case 42:\n      app = new Application({\n        title: 'Browser',\n        icon: 'arrow-right',\n        iconRotate: true,\n      })\n      break\n    case 34:\n      app = new Application({\n        title: 'Samba',\n        icon: 'folder',\n        localhost: true,\n        defaultLaunchTemplate: 'smb://[host]:[port]',\n      })\n      break\n    default:\n      app = new DefaultApp({})\n  }\n\n  return app\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Body/Body.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Icon/Icon.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Router/Router.tsx",["1328"],"import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ApplicationState, Dispatch } from '../../store'\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom'\nimport { SettingsPage } from '../../pages/SettingsPage'\nimport { ConnectionsPage } from '../../pages/ConnectionsPage'\nimport { SetupDevice } from '../../pages/SetupDevice'\nimport { SetupWaiting } from '../../pages/SetupWaiting'\nimport { NetworkPage } from '../../pages/NetworkPage'\nimport { DevicesPage } from '../../pages/DevicesPage'\nimport { ServiceAddPage } from '../../pages/ServiceAddPage'\nimport { DeviceDetailPage } from '../../pages/DeviceDetailPage'\nimport { DeviceLogPage } from '../../pages/DeviceLogPage'\nimport { ServiceDetailPage } from '../../pages/ServiceDetailPage'\nimport { ServicesPage } from '../../pages/ServicesPage'\nimport { ServicePage } from '../../pages/ServicePage'\nimport { LanSharePage } from '../../pages/LanSharePage'\nimport { UsersPageService } from '../../pages/UsersPageService'\nimport { UsersPageDevice } from '../../pages/UsersPageDevice'\nimport { AccountSharePage } from '../../pages/AccountSharePage'\nimport { AccountAccessPage } from '../../pages/AccountAccessPage'\nimport { AccountMembershipPage } from '../../pages/AccountMembershipPage'\nimport { DeviceEditPage } from '../../pages/DeviceEditPage'\nimport { ServiceEditPage } from '../../pages/ServiceEditPage'\nimport { SharePage } from '../../pages/SharePage/SharePage'\nimport { getLinks } from '../../helpers/routeHelper'\nimport { LogPage } from '../../pages/LogPage'\nimport { ReportsPage } from '../../pages/ReportsPage'\n\nexport const Router: React.FC = () => {\n  const history = useHistory()\n  const { ui } = useDispatch<Dispatch>()\n  const { redirect, targetDevice, targets, registered, os, links } = useSelector((state: ApplicationState) => ({\n    redirect: state.ui.redirect,\n    targetDevice: state.backend.device,\n    targets: state.backend.targets,\n    registered: !!state.backend.device.uid,\n    uninstalling: state.ui.uninstalling,\n    os: state.backend.environment.os,\n    links: getLinks(state),\n  }))\n\n  useEffect(() => {\n    if (redirect) {\n      console.log('UI REDIRECT', redirect)\n      history.push(redirect)\n      ui.set({ redirect: undefined })\n    }\n  }, [redirect])\n\n  return (\n    <Switch>\n      <Redirect\n        from={'/connect/:serviceID'}\n        to={{\n          pathname: '/connections/:serviceID',\n          state: { autoConnect: true },\n        }}\n      />\n      <Route path={['/settings/membership/share', '/settings/access/share']}>\n        <AccountSharePage />\n      </Route>\n      <Route path=\"/settings/access\">\n        <AccountAccessPage />\n      </Route>\n      <Route path={links.waiting}>\n        <SetupWaiting os={os} targetDevice={targetDevice} />\n      </Route>\n      <Route path=\"/devices/setup\">\n        {registered ? <Redirect to={`/devices/${targetDevice.uid}/edit`} /> : <SetupDevice os={os} />}\n      </Route>\n      <Route path=\"/devices/membership\">\n        <AccountMembershipPage />\n      </Route>\n      <Route path=\"/settings\">\n        <SettingsPage />\n      </Route>\n      <Route\n        path={[\n          '/connections/:serviceID/users/:email',\n          '/connections/:serviceID/users/share',\n          '/connections/:serviceID/share',\n          '/devices/:deviceID/:serviceID/users/share',\n          '/devices/:deviceID/:serviceID/users/:email',\n          '/devices/:deviceID/:serviceID/share',\n          '/devices/:deviceID/users/share',\n          '/devices/:deviceID/users/:email',\n          '/devices/:deviceID/share',\n        ]}\n      >\n        <SharePage />\n      </Route>\n      <Route path={links.scan}>\n        <NetworkPage />\n      </Route>\n      <Route path={['/devices/:deviceID/:serviceID/lan', '/connections/:serviceID/lan']}>\n        <LanSharePage />\n      </Route>\n      <Route path={['/devices/:deviceID/:serviceID/log', '/connections/:serviceID/log']}>\n        <LogPage />\n      </Route>\n      <Route path={['/devices/:deviceID/:serviceID/users', '/connections/:serviceID/users']}>\n        <UsersPageService />\n      </Route>\n      <Route path={['/devices/:deviceID/:serviceID/details', '/connections/:serviceID/details']}>\n        <ServiceDetailPage />\n      </Route>\n      <Route path={links.add}>\n        <ServiceAddPage targetDevice={targetDevice} targets={targets} />\n      </Route>\n      <Route path={[links.service, '/devices/:deviceID/:serviceID/edit', '/connections/:serviceID/edit']}>\n        <ServiceEditPage targetDevice={targetDevice} targets={targets} />\n      </Route>\n      <Route path=\"/devices/:deviceID/users\">\n        <UsersPageDevice />\n      </Route>\n      <Route path=\"/devices/:deviceID/details\">\n        <DeviceDetailPage />\n      </Route>\n      <Route path=\"/devices/:deviceID/logs\">\n        <DeviceLogPage />\n      </Route>\n      <Route path={links.edit}>\n        <DeviceEditPage targetDevice={targetDevice} targets={targets} />\n      </Route>\n      <Route path={['/devices/:deviceID/:serviceID', '/connections/:serviceID']}>\n        <ServicePage />\n      </Route>\n      <Route path=\"/devices/:deviceID\">\n        <ServicesPage />\n      </Route>\n      <Route path=\"/connections\">\n        <ConnectionsPage />\n      </Route>\n      <Route path=\"/configure\">\n        {registered ? <Redirect to={`/configure/${targetDevice.uid}`} /> : <SetupDevice os={os} />}\n      </Route>\n      <Route path=\"/devices\">\n        <DevicesPage />\n      </Route>\n      <Route path=\"/reports\">\n        <ReportsPage />\n      </Route>\n      <Route path=\"/\">\n        <Redirect to={links.home} />\n      </Route>\n    </Switch>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/Page/Page.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SignInPage/SignInPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LoadingMessage/LoadingMessage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InstallationNotice/InstallationNotice.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/routeHelper.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SharePage/SharePage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/AccountMembershipPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/AccountAccessPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/AccountSharePage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ReportsPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/LogPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Sidebar/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceEditPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/RemoteHeader/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UpdateNotice/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/userHelper.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SignInForm/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceEditPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ContactSelector.tsx",["1329","1330"],"import React from 'react'\nimport CreatableSelect from 'react-select/creatable'\nimport { Theme } from 'react-select'\nimport { makeStyles } from '@material-ui/core'\nimport { contactOptions } from '../helpers/contacts'\nimport { colors, spacing, fontSizes } from '../styling'\nimport { Typography, Link } from '@material-ui/core'\n\ntype Props = {\n  selected?: IUser[]\n  contacts: IUserRef[]\n  onChange: (emails: string[]) => void\n}\n\nexport const ContactSelector: React.FC<Props> = ({ selected = [], contacts, onChange }) => {\n  const options = contactOptions(contacts, selected)\n  const css = useStyles()\n\n  const mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n\n  const handleChange = (opts?: any) => {\n    opts = opts?.length ? opts : []\n    onChange(opts.map((r: IReactSelectOption) => r.value))\n  }\n\n  const validateEmail = (inputValue: string) => {\n    return (\n      mailFormat.test(inputValue) && (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Share to <Link>{inputValue}</Link>\n        </Typography>\n      )\n    )\n  }\n\n  return (\n    <CreatableSelect\n      isMulti\n      isClearable\n      options={options}\n      theme={selectTheme}\n      className={css.select}\n      classNamePrefix=\"select\"\n      placeholder=\"Enter an email...\"\n      onChange={handleChange}\n      isValidNewOption={v => mailFormat.test(v)}\n      formatCreateLabel={validateEmail}\n      styles={customStyles}\n    />\n  )\n}\n\nconst useStyles = makeStyles({\n  select: {\n    flexGrow: 1,\n    margin: `${spacing.md}px 0`,\n    fontSize: fontSizes.md,\n    '& .select__placeholder': { color: colors.primary },\n    '& .select__multi-value': { backgroundColor: colors.primary, padding: `${spacing.xxs}px ${spacing.xs}px` },\n    '& .select__multi-value__label': { fontSize: fontSizes.base, fontWeight: 500, color: colors.white },\n    '& .select__multi-value__remove': { color: colors.white },\n  },\n})\n\nconst selectTheme = (theme: Theme) => {\n  return {\n    ...theme,\n    borderRadius: spacing.xs,\n    colors: {\n      ...theme.colors,\n      primary25: colors.primaryHighlight,\n      primary: colors.primary,\n    },\n  }\n}\n\nconst customStyles = {\n  option: (styles: any) => ({ ...styles, cursor: 'pointer' }),\n  control: (styles: any) => ({ ...styles, cursor: 'pointer' }),\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ContactCard.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UsersPageDevice/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UsersPageService/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/LanSharePage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServicePage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServicesPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Alert/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceDetailPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceLogPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceDetailPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DevicesPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceAddPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/NetworkPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SetupWaiting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ConnectionsPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SetupDevice/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SettingsPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Logo/index.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Notice.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ReportsPage/ReportsPage.tsx",["1331","1332"],"import React, { useEffect, useState, useRef, useLayoutEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Dispatch, ApplicationState } from '../../store'\nimport { Typography, Box } from '@material-ui/core'\nimport { colors, spacing } from '../../styling'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container } from '../../components/Container'\nimport { Title } from '../../components/Title'\nimport { ReportSummaryBox } from '../../components/ReportSummaryBox'\nimport { ReportTimeSeriesVis } from '../../components/ReportTimeSeriesVis'\nimport { ReportDeviceQualityList } from '../../components/ReportDeviceQualityList'\nimport analyticsHelper from '../../helpers/analyticsHelper'\nimport { format } from 'date-fns'\n\nimport { LoadingScreen } from '@remote.it/components'\n\nexport const ReportsPage: React.FC = () => {\n  const dispatch = useDispatch<Dispatch>()\n  const css = useStyles()\n  const { fetchAnalytics } = dispatch.analytics\n  const {\n    fetching,\n    totalDevices,\n    devices,\n    lastMonthDeviceCount,\n    lastMonthConnectionCount,\n    startDate,\n    deviceTimeseries,\n    connectionTimeseries,\n  } = useSelector((state: ApplicationState) => {\n    return {\n      fetching: state.analytics.fetching,\n      startDate: state.analytics.startDate,\n      devices: state.analytics.devices,\n      totalDevices: state.analytics.totalDevices,\n      lastMonthDeviceCount: state.analytics.lastMonthDeviceCount,\n      lastMonthConnectionCount: state.analytics.lastMonthConnectionCount,\n      deviceTimeseries: state.analytics.deviceTimeseries,\n      connectionTimeseries: state.analytics.connectionTimeseries,\n    }\n  })\n  const targetRef = useRef<HTMLDivElement>(null)\n  const [columnWidth, setColumnWidth] = useState(0)\n\n  const div_dimensions = () => {\n    if (targetRef.current) {\n      setColumnWidth(targetRef.current.offsetWidth)\n    }\n  }\n  useEffect(() => {\n    analyticsHelper.page('ReportPage')\n    if (!fetching && (devices.length == 0 || devices.length < totalDevices)) {\n      fetchAnalytics()\n    }\n  }, [])\n  useLayoutEffect(() => {\n    div_dimensions()\n  }, [])\n\n  return (\n    <Container\n      header={\n        <Box className={css.container}>\n          <Typography variant=\"h2\" className={css.header}>\n            <Title>{format(startDate, 'MMMM yyyy')} Account Summary</Title>\n          </Typography>\n        </Box>\n      }\n    >\n      {fetching ? (\n        <LoadingScreen />\n      ) : (\n        <>\n          <Box display=\"flex\" className={css.container}>\n            <Box flexGrow={1} className={css.columnContainer}>\n              <div ref={targetRef} className={css.column1}>\n                <ReportSummaryBox\n                  label=\"devices created\"\n                  count={lastMonthDeviceCount}\n                  total={totalDevices}\n                  icon=\"hdd\"\n                  iconTitle=\"Devices\"\n                />\n                <br />\n                <ReportTimeSeriesVis\n                  title=\"Devices Created\"\n                  tooltipLabel=\"devices\"\n                  timeseriesData={deviceTimeseries}\n                  width={columnWidth - 10}\n                  height={300}\n                />\n              </div>\n            </Box>\n            <Box flexGrow={1} className={css.columnContainer}>\n              <div className={css.column2}>\n                <ReportSummaryBox\n                  label=\"Connections Made to Your Devices\"\n                  count={lastMonthConnectionCount}\n                  icon=\"scrubber\"\n                  iconTitle=\"Connections\"\n                />\n                <br />\n                <ReportTimeSeriesVis\n                  title=\"Connections Made to Your Devices\"\n                  tooltipLabel=\"connections\"\n                  timeseriesData={connectionTimeseries}\n                  width={columnWidth - 10}\n                  height={300}\n                />\n              </div>\n            </Box>\n          </Box>\n          <br />\n          <Box display=\"flex\" className={css.container}>\n            <Typography className={css.header} variant=\"h2\">\n              <Title>Devices ({totalDevices})</Title>\n            </Typography>\n          </Box>\n          <Box display=\"flex\" className={css.container}>\n            <ReportDeviceQualityList />\n          </Box>\n        </>\n      )}\n    </Container>\n  )\n}\nconst useStyles = makeStyles({\n  reportSummaryBox: {\n    color: colors.white,\n    backgroundColor: colors.primary,\n    width: '100%',\n  },\n  container: {\n    width: '100%',\n    padding: `0px  ${spacing.md}px`,\n  },\n  columnContainer: {\n    width: '50%',\n  },\n  column1: {\n    width: '100%',\n    padding: `0px ${spacing.sm}px 0px 0px`,\n  },\n  column2: {\n    width: '100%',\n    padding: `0px 0px 0px ${spacing.sm}px`,\n  },\n  header: {\n    margin: `${spacing.sm}px 0px`,\n  },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/LogPage/LogPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/RemoteHeader/RemoteHeader.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UpdateNotice/UpdateNotice.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceEditPage/ServiceEditPage.tsx",["1333"],"import React, { useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { selectService } from '../../models/devices'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ApplicationState, Dispatch } from '../../store'\nimport { UnregisterServiceButton } from '../../buttons/UnregisterServiceButton'\nimport { DeleteServiceButton } from '../../buttons/DeleteServiceButton'\nimport { REGEX_LAST_PATH } from '../../shared/constants'\nimport { Typography } from '@material-ui/core'\nimport { useParams } from 'react-router-dom'\nimport { Container } from '../../components/Container'\nimport { OutOfBand } from '../../components/OutOfBand'\nimport { Breadcrumbs } from '../../components/Breadcrumbs'\nimport { ServiceForm } from '../../components/ServiceForm'\nimport { getLinks } from '../../helpers/routeHelper'\nimport { Title } from '../../components/Title'\nimport { Icon } from '../../components/Icon'\nimport analyticsHelper from '../../helpers/analyticsHelper'\n\ntype Props = {\n  targets: ITarget[]\n  targetDevice: ITargetDevice\n}\nexport const ServiceEditPage: React.FC<Props> = ({ targets, targetDevice }) => {\n  const { devices, backend, applicationTypes } = useDispatch<Dispatch>()\n  const { serviceID = '', deviceID } = useParams<{ serviceID: string; deviceID: string }>()\n  const { device, service, links } = useSelector((state: ApplicationState) => {\n    const [service, device] = selectService(state, serviceID)\n    return {\n      device,\n      service,\n      links: getLinks(state, deviceID),\n    }\n  })\n  const target = targets?.find(t => t.uid === serviceID)\n  const thisDevice = service?.deviceID === targetDevice.uid\n  const location = useLocation()\n  const history = useHistory()\n\n  useEffect(() => {\n    applicationTypes.fetch()\n    analyticsHelper.page('ServiceEditPage')\n  }, [])\n\n  if (!service || (thisDevice && !target)) {\n    history.push(links.edit)\n    return null\n  }\n\n  const exit = () => history.push(location.pathname.replace(REGEX_LAST_PATH, ''))\n\n  return (\n    <Container\n      header={\n        <>\n          <OutOfBand />\n          <Breadcrumbs />\n          <Typography variant=\"h1\">\n            <Icon name=\"pen\" size=\"lg\" type=\"light\" color=\"grayDarker\" fixedWidth />\n            <Title inline>Edit service</Title>\n            <UnregisterServiceButton target={target} />\n            <DeleteServiceButton device={device} service={service} />\n          </Typography>\n        </>\n      }\n    >\n      <ServiceForm\n        service={service}\n        target={target}\n        thisDevice={thisDevice}\n        editable={thisDevice || !!device?.configurable}\n        onCancel={exit}\n        onSubmit={async form => {\n          if (device?.configurable) {\n            // CloudShift\n            await devices.cloudUpdateService({ form, deviceId: deviceID })\n          } else {\n            // for local cli config update\n            backend.updateTargetService(form)\n            // for rest api name change\n            service.name = form.name || ''\n            devices.rename(service)\n            // for cloud route attribute change\n            service.attributes = { ...service.attributes, ...form.attributes }\n            devices.setServiceAttributes(service)\n          }\n          exit()\n        }}\n      />\n    </Container>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Sidebar/Sidebar.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Title/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Container/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/contacts.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Breadcrumbs/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SignInForm/SignInForm.tsx",["1334","1335"],"import React, { useState, useEffect } from 'react'\nimport { AuthUser, CognitoUser } from '@remote.it/types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dispatch, ApplicationState } from '../../store'\nimport { CognitoAuth } from '@remote.it/components'\nimport theme from '../../styling/theme'\n\nexport function SignInForm() {\n  const { signInError, authService } = useSelector((state: ApplicationState) => state.auth)\n  const [successUser, setSuccessUser] = useState<CognitoUser>()\n  const { auth } = useDispatch<Dispatch>()\n\n  useEffect(() => {\n    if (successUser) auth.handleSignInSuccess(successUser)\n  }, [successUser])\n\n  return (\n    <CognitoAuth\n      themeOverride={theme}\n      onSignInSuccess={(user: CognitoUser) => setSuccessUser(user)}\n      errorMessage={signInError}\n      authService={authService}\n      hideCaptcha={true}\n    />\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharingForm.tsx",["1336","1337","1338"],"import React, { useEffect, useState } from 'react'\nimport { Divider, List, Typography } from '@material-ui/core'\nimport { ListItemCheckbox } from './ListItemCheckbox'\nimport { ShareSaveActions } from './ShareSaveActions'\nimport { useHistory, useParams, useLocation } from 'react-router-dom'\nimport { useSelector } from '../hooks/reactReduxHooks'\nimport { ApplicationState } from '../store'\n\nexport interface SharingDetails {\n  access: SharingAccess\n  emails: string[]\n  deviceID?: string\n}\n\nexport interface SharingAccess {\n  scripting: boolean\n  services: string[]\n}\n\nexport function SharingForm({\n  onChange,\n  device,\n  scripting,\n  selectedServices,\n  indeterminateServices,\n  indeterminateScript,\n  update,\n  share,\n  changed,\n}: {\n  onChange: (access: SharingAccess, hasIndetermante: boolean) => void\n  device: IDevice\n  scripting: boolean\n  selectedServices: string[]\n  indeterminateServices: string[]\n  indeterminateScript: boolean\n  users: string[]\n  update: () => void\n  share: () => void\n  changed: boolean\n}): JSX.Element {\n  const history = useHistory()\n  const location = useLocation()\n  const { email = '' } = useParams<{ email: string }>()\n  const saving = useSelector((state: ApplicationState) => state.shares.sharing)\n  const [hasIndeterminate, setHasIndeterminate] = useState<boolean>(false)\n  let disabled = !changed || saving\n\n  const handleChangeServices = (services: string[]) => {\n    onChange({ scripting, services }, hasIndeterminate)\n  }\n\n  useEffect(() => {\n    const crumbs = location.pathname.substr(1).split('/')\n    crumbs[2] !== 'users' && handleChangeServices([crumbs[2]])\n  }, [])\n\n  useEffect(() => {\n    handleChangeScripting(false)\n  }, [hasIndeterminate])\n\n  const handleChangeScripting = (revertScripting = true) => {\n    onChange(\n      {\n        scripting: revertScripting ? !scripting : scripting,\n        services: selectedServices,\n      },\n      hasIndeterminate\n    )\n  }\n  const action = () => {\n    email === '' ? share() : update()\n  }\n\n  return (\n    <>\n      <Typography variant=\"subtitle1\">Services</Typography>\n      <ServiceCheckboxes\n        onChange={handleChangeServices}\n        services={device.services.map(s => ({ label: s.name, value: s.id }))}\n        saving={saving}\n        selectedServices={selectedServices}\n        indeterminateServices={indeterminateServices}\n        onHasIndeterminate={setHasIndeterminate}\n      />\n      <Divider />\n      <List>\n        <ListItemCheckbox\n          label=\"Allow script execution\"\n          subLabel=\"Give the user the ability to run scripts on this device.\"\n          disabled={saving}\n          checked={!indeterminateScript && scripting}\n          indeterminate={indeterminateScript}\n          onClick={() => handleChangeScripting(true)}\n        />\n      </List>\n      <ShareSaveActions\n        onCancel={() => history.push(location.pathname.replace(email ? `/${email}` : '/share', ''))}\n        onSave={action}\n        disabled={disabled}\n      />\n    </>\n  )\n}\n\ninterface CheckboxItem {\n  label: string\n  value: string\n}\n\nfunction ServiceCheckboxes({\n  onChange,\n  services = [],\n  saving,\n  selectedServices = [],\n  indeterminateServices,\n  onHasIndeterminate: onHasIndetermante,\n}: {\n  onChange: (services: string[]) => void\n  services: CheckboxItem[]\n  saving: boolean\n  selectedServices: string[]\n  indeterminateServices: string[]\n  onHasIndeterminate: (indeterminate: boolean) => void\n}): JSX.Element {\n  const [serviceIndeterminate, setServicesIndeterminate] = useState<string[]>([])\n  const [allIndeterminate, setAllIndeterminate] = useState<boolean>(false)\n  const [selectAllChecked, setSelectAllChecked] = useState<boolean>(false)\n\n  useEffect(() => {\n    onHasIndetermante(serviceIndeterminate.length > 0)\n  }, [serviceIndeterminate])\n\n  useEffect(() => {\n    setServicesIndeterminate(indeterminateServices)\n  }, [indeterminateServices])\n\n  useEffect(() => {\n    setAllIndeterminate(services?.length !== selectedServices?.length && selectedServices?.length !== 0)\n    setSelectAllChecked(services?.length === selectedServices?.length && selectedServices?.length !== 0)\n  }, [services, selectedServices])\n\n  const update = (checked: boolean, id: string): void => {\n    const all = checked ? [...selectedServices, id] : selectedServices.filter(v => v !== id)\n    setServicesIndeterminate(serviceIndeterminate.filter(sI => sI !== id))\n    onChange(all)\n  }\n\n  const selectAll = (checked: boolean, services: CheckboxItem[]): void => {\n    const ids = services.map(service => service.value).filter(id => [...selectedServices, id])\n    const all = checked ? ids : selectedServices.filter(v => '')\n    setServicesIndeterminate([])\n    onChange(all)\n  }\n\n  return (\n    <>\n      <List className=\"collapseList\">\n        <ListItemCheckbox\n          disabled={saving}\n          label={<i>Select all</i>}\n          onClick={checked => selectAll(checked, services)}\n          checked={selectAllChecked}\n          indeterminate={allIndeterminate}\n        />\n        {services.map((service, key) => (\n          <ListItemCheckbox\n            key={key}\n            disabled={saving}\n            label={service.label}\n            checked={selectedServices.includes(service.value)}\n            onClick={checked => update(checked, service.value)}\n            indeterminate={serviceIndeterminate.includes(service.value)}\n          />\n        ))}\n      </List>\n    </>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceEditPage/DeviceEditPage.tsx",["1339"],"import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { replaceHost } from '../../shared/nameHelper'\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../../store'\nimport {\n  Typography,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  CircularProgress,\n} from '@material-ui/core'\nimport { useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container } from '../../components/Container'\nimport { OutOfBand } from '../../components/OutOfBand'\nimport { getAllDevices } from '../../models/accounts'\nimport { Breadcrumbs } from '../../components/Breadcrumbs'\n// import { ListItemSetting } from '../../components/ListItemSetting'\nimport { AddServiceButton } from '../../buttons/AddServiceButton'\nimport { ListItemLocation } from '../../components/ListItemLocation'\nimport { ServiceMiniState } from '../../components/ServiceMiniState'\nimport { DeviceNameSetting } from '../../components/DeviceNameSetting'\nimport { AddFromNetwork } from '../../components/AddFromNetwork'\nimport { UnregisterDeviceButton } from '../../buttons/UnregisterDeviceButton'\nimport { AdminPanelConnect } from '../../components/AdminPanelConnect'\nimport { LicensingNotice } from '../../components/LicensingNotice'\nimport { RefreshButton } from '../../buttons/RefreshButton'\nimport { DeleteButton } from '../../buttons/DeleteButton'\nimport { isRemoteUI } from '../../helpers/uiHelper'\nimport { getLinks } from '../../helpers/routeHelper'\nimport { Title } from '../../components/Title'\nimport { Icon } from '../../components/Icon'\nimport { fontSizes } from '../../styling'\nimport analyticsHelper from '../../helpers/analyticsHelper'\n\ntype Props = {\n  targets: ITarget[]\n  targetDevice: ITargetDevice\n}\n\nexport const DeviceEditPage: React.FC<Props> = ({ targetDevice, targets }) => {\n  const css = useStyles()\n  const history = useHistory()\n  const { deviceID } = useParams<{ deviceID: string }>()\n  const { device, connections, setupAddingService, links, remoteUI } = useSelector((state: ApplicationState) => {\n    const device = getAllDevices(state).find((d: IDevice) => d.id === deviceID)\n    return {\n      device,\n      connections: state.backend.connections.filter(c => c.deviceID === deviceID),\n      setupAddingService: state.ui.setupAddingService,\n      remoteUI: isRemoteUI(state),\n      links: getLinks(state, deviceID),\n    }\n  })\n\n  useEffect(() => {\n    analyticsHelper.page('DevicesDetailPage')\n    // check that target device is registered and don't redirect\n    if (!device && !(remoteUI && targetDevice.uid)) history.push(links.home)\n  }, [device, targetDevice, history])\n\n  if (!device) return null\n\n  const thisDevice = device.id === targetDevice.uid\n  const editable = thisDevice || device.configurable\n\n  function host(service: IService) {\n    const target = targets.find(t => t.uid === service.id)\n    if (target) return `${replaceHost(target.hostname)}:${target.port}`\n  }\n\n  // reverse sort services by creation date\n  device.services.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime())\n\n  return (\n    <Container\n      header={\n        <>\n          <OutOfBand />\n          {remoteUI || <Breadcrumbs />}\n          <Typography variant=\"h1\">\n            <Icon name=\"pen\" size=\"lg\" type=\"light\" color=\"grayDarker\" fixedWidth />\n            <Title inline>Edit device</Title>\n            {thisDevice ? <UnregisterDeviceButton device={device} /> : <DeleteButton device={device} />}\n            <RefreshButton device={device} />\n          </Typography>\n        </>\n      }\n    >\n      <List>\n        <DeviceNameSetting device={device} targetDevice={targetDevice} />\n        {/* <DeviceLabelSetting device={device} /> */}\n        {/* <SharedAccessSetting device={device} /> */}\n        {/* {thisDevice && (\n          <ListItemSetting\n            label={targetDevice.disabled ? 'Device disabled' : 'Device enabled'}\n            subLabel=\"Disabling your service will take it offline.\"\n            icon=\"circle-check\"\n            toggle={!form.disabled}\n            disabled={setupBusy}\n            onClick={() => {\n              setForm({ ...form, disabled: !form.disabled })\n            }}\n          />\n        )} */}\n      </List>\n      <Divider />\n      {!editable && <AdminPanelConnect device={device} connections={connections} />}\n      {!device.shared && (\n        <>\n          <Typography variant=\"subtitle1\">\n            <Title>Services</Title>\n            <AddFromNetwork allowScanning={thisDevice} button />\n            <AddServiceButton device={device} editable={editable} link={links.add} />\n          </Typography>\n          <List>\n            {editable && <LicensingNotice device={device} />}\n            {editable && setupAddingService && (\n              <ListItem disabled button dense>\n                <ListItemIcon>\n                  <CircularProgress color=\"inherit\" size={fontSizes.md} />\n                </ListItemIcon>\n                <ListItemText primary=\"Registering...\" />\n              </ListItem>\n            )}\n            {device.services.map(s => (\n              <ListItemLocation key={s.id} pathname={links.service.replace(':serviceID', s.id)} dense>\n                <ListItemIcon></ListItemIcon>\n                <ListItemText primary={s.name} secondary={host(s)} />\n                <ListItemSecondaryAction className={css.actions}>\n                  <ServiceMiniState service={s} connection={connections.find(c => c.id === s.id)} />\n                </ListItemSecondaryAction>\n              </ListItemLocation>\n            ))}\n          </List>\n        </>\n      )}\n    </Container>\n  )\n}\n\nconst useStyles = makeStyles({\n  actions: { right: 70 },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Alert/Alert.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceLogPage/DeviceLogPage.tsx",["1340","1341","1342"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dispatch, ApplicationState } from '../../store'\nimport {\n  Typography,\n  makeStyles,\n  List,\n  ListItem,\n  Box,\n  Button,\n  Link,\n  ListItemIcon,\n  ListItemSecondaryAction,\n} from '@material-ui/core'\nimport { useParams } from 'react-router-dom'\nimport { Container } from '../../components/Container'\nimport { Breadcrumbs } from '../../components/Breadcrumbs'\nimport { Title } from '../../components/Title'\nimport { Icon } from '../../components/Icon'\nimport { colors, fontSizes, spacing } from '../../styling'\nimport { EventMessage } from './EventMessage'\nimport { EventIcon } from './EventIcon'\nimport { CSVDownloadButton } from '../../buttons/CSVDownloadButton'\nimport { DatePicker } from '../../components/DatePicker/DatePicker'\nimport { getOwnDevices } from '../../models/accounts'\n\nconst TIME = 1000 * 60 * 60 * 24\n\nexport const DeviceLogPage = () => {\n  const { deviceID } = useParams<{ deviceID: string }>()\n  const { device, fetchingMore, fetching, user, items } = useSelector((state: ApplicationState) => {\n    const device = getOwnDevices(state).find(d => d.id === deviceID)\n    return {\n      device,\n      fetchingMore: state.logs.fetchingMore,\n      fetching: state.logs.fetching,\n      user: state.auth.user,\n      items: device?.events.items,\n    }\n  })\n\n  useEffect(() => {\n    fetchLogs({ id: deviceID, from: 0 })\n    console.log('Fetching Logs')\n  }, [deviceID])\n\n  const dispatch = useDispatch<Dispatch>()\n  const [planUpgrade, setPlanUpgrade] = useState(false)\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(null)\n  const { fetchLogs } = dispatch.logs\n  const freePlan = 90\n\n  const limitDays = () => {\n    const createAt = device?.createdAt ? new Date(device?.createdAt) : new Date()\n    return Math.floor((new Date().getTime() - createAt.getTime()) / TIME)\n    // return user?.plan.name === 'free' && createAt_days > freePlan ? freePlan : createAt_days\n  }\n\n  const minDay = new Date(new Date().getTime() - TIME * limitDays())\n\n  const css = useStyles()\n\n  const onChange = (date: any) => {\n    setSelectedDate(date)\n    fetchLogs({ id: deviceID, from: 0, maxDate: `${date}` })\n  }\n\n  const fetchMore = () => {\n    fetchLogs({ id: deviceID, from: device?.events.items.length, maxDate: `${selectedDate} 23:59:59` })\n  }\n\n  if (!device) return null\n\n  return (\n    <Container\n      inset\n      header={\n        <>\n          <Breadcrumbs />\n          <Typography variant=\"h1\">\n            <Icon name=\"file-alt\" color=\"grayDarker\" size=\"lg\" />\n            <Title inline>Device Logs</Title>\n          </Typography>\n          <List className={css.header}>\n            <ListItem dense>\n              <ListItemIcon>\n                <Icon name={fetching ? 'spinner-third' : 'calendar-day'} size=\"md\" spin={fetching} fixedWidth />\n              </ListItemIcon>\n              <DatePicker\n                onChange={onChange}\n                minDay={minDay}\n                selectedDate={selectedDate}\n                fetching={fetching}\n                label=\"Jump to Date\"\n              />\n              <ListItemSecondaryAction>\n                <CSVDownloadButton\n                  deviceID={deviceID}\n                  maxDate={selectedDate?.toDateString() || new Date().toString()}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </>\n      }\n    >\n      <List className={css.item}>\n        {!fetching && items?.map((item: any) => <EventCell item={item} device={device} user={user} key={item.id} />)}\n      </List>\n\n      <Box className={css.box}>\n        {device.events.hasMore || fetching ? (\n          <Button color=\"primary\" onClick={fetchMore} disabled={planUpgrade || fetchingMore || fetching}>\n            {fetchingMore || fetching ? `Loading ...` : 'Load More'}\n          </Button>\n        ) : (\n          <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n            End of Logs\n          </Typography>\n        )}\n\n        {planUpgrade && (\n          <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n            Plan upgrade required to view logs past 90 days <br />\n            <Link onClick={() => window.open('https://link.remote.it/licensing/plans')}>Learn more</Link>\n          </Typography>\n        )}\n      </Box>\n    </Container>\n  )\n}\n\nconst options = {\n  month: 'short',\n  day: 'numeric',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n}\n\nexport function EventCell({ item, device, user }: { item: IEvent; device: IDevice; user?: IUser }): JSX.Element {\n  return (\n    <ListItem>\n      <span>{new Date(item.timestamp).toLocaleDateString('en-US', options)}</span>\n      <ListItemIcon>\n        <EventIcon {...item} />\n      </ListItemIcon>\n      <EventMessage item={item} device={device} loggedInUser={user} />\n    </ListItem>\n  )\n}\n\nconst useStyles = makeStyles({\n  header: {\n    paddingTop: 0,\n  },\n  textField: {\n    display: 'block',\n    marginLeft: spacing.sm,\n    marginRight: spacing.sm,\n    marginBottom: spacing.sm,\n    marginTop: spacing.xxs,\n    width: 200,\n  },\n  box: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    padding: spacing.lg,\n    paddingBottom: spacing.xl,\n    height: 100,\n  },\n  item: {\n    paddingTop: 0,\n    '& li': {\n      padding: `4px 0`,\n      fontSize: fontSizes.sm,\n      color: colors.grayDark,\n      alignItems: 'start',\n      '& > span': {\n        fontSize: fontSizes.xxs,\n        textAlign: 'right',\n        fontFamily: 'Roboto Mono',\n        minWidth: 150,\n      },\n      '& b': {\n        color: colors.grayDarkest,\n        fontWeight: 400,\n      },\n      '& i': {\n        color: colors.grayDarker,\n        fontStyle: 'normal',\n      },\n    },\n  },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceDetailPage/DeviceDetailPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceAddPage/ServiceAddPage.tsx",["1343"],"import React, { useEffect } from 'react'\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ApplicationState, Dispatch } from '../../store'\nimport { LicensingServiceNotice } from '../../components/LicensingServiceNotice'\nimport { REGEX_LAST_PATH } from '../../shared/constants'\nimport { getAllDevices } from '../../models/accounts'\nimport { Typography } from '@material-ui/core'\nimport { Container } from '../../components/Container'\nimport { ServiceForm } from '../../components/ServiceForm'\nimport { Breadcrumbs } from '../../components/Breadcrumbs'\nimport { getLinks } from '../../helpers/routeHelper'\nimport { Title } from '../../components/Title'\nimport { Body } from '../../components/Body'\nimport { Icon } from '../../components/Icon'\nimport analyticsHelper from '../../helpers/analyticsHelper'\n\ntype Props = {\n  targets: ITarget[]\n  targetDevice: ITargetDevice\n}\n\nexport const ServiceAddPage: React.FC<Props> = ({ targets, targetDevice }) => {\n  const { deviceID } = useParams<{ deviceID: string }>()\n  const { backend, applicationTypes, devices } = useDispatch<Dispatch>()\n  const { setupServicesLimit, device, links } = useSelector((state: ApplicationState) => ({\n    ...state.ui,\n    device: getAllDevices(state).find(d => d.id === deviceID),\n    links: getLinks(state, deviceID),\n  }))\n  const location = useLocation()\n  const history = useHistory()\n\n  useEffect(() => {\n    applicationTypes.fetch()\n    analyticsHelper.page('ServiceAddPage')\n  }, [])\n\n  const maxReached = targets.length + 1 > setupServicesLimit\n\n  return (\n    <Container\n      header={\n        <>\n          <Breadcrumbs />\n          <Typography variant=\"h1\">\n            <Icon name=\"pen\" size=\"lg\" type=\"light\" color=\"grayDarker\" fixedWidth />\n            <Title inline>Add service</Title>\n          </Typography>\n          <LicensingServiceNotice device={device} />\n        </>\n      }\n    >\n      {maxReached ? (\n        <Body center>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            Desktop currently supports a maximum of {setupServicesLimit} services.\n          </Typography>\n        </Body>\n      ) : (\n        <ServiceForm\n          thisDevice={device?.id === targetDevice.uid}\n          editable={device?.configurable || device?.id === targetDevice.uid}\n          onSubmit={async form => {\n            if (device?.configurable) {\n              // CloudShift\n              devices.cloudAddService({ form, deviceId: device?.id })\n            } else {\n              await backend.addTargetService(form)\n              await backend.set({ deferredAttributes: form.attributes }) // set route attributes via deferred update\n            }\n            history.push(links.edit)\n          }}\n          onCancel={() => history.push(location.pathname.replace(REGEX_LAST_PATH, ''))}\n        />\n      )}\n    </Container>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServicesPage/ServicesPage.tsx",["1344","1345"],"import React, { useState, useEffect } from 'react'\nimport { useHistory, useParams, useLocation } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ApplicationState, Dispatch } from '../../store'\nimport { Typography, List, Divider } from '@material-ui/core'\nimport { ConnectionStateIcon } from '../../components/ConnectionStateIcon'\nimport { ListItemLocation } from '../../components/ListItemLocation'\nimport { LicensingNotice } from '../../components/LicensingNotice'\nimport { LoadingMessage } from '../../components/LoadingMessage'\nimport { RefreshButton } from '../../buttons/RefreshButton'\nimport { selectService } from '../../models/devices'\nimport { ServiceName } from '../../components/ServiceName'\nimport { Breadcrumbs } from '../../components/Breadcrumbs'\nimport { ServiceList } from '../../components/ServiceList'\nimport { UsersSelect } from '../../components/UsersSelect/UsersSelect'\nimport { EditButton } from '../../buttons/EditButton'\nimport { Container } from '../../components/Container'\nimport { Subtitle } from '../../components/Subtitle'\nimport { AddUserButton } from '../../buttons/AddUserButton'\nimport analyticsHelper from '../../helpers/analyticsHelper'\n\nexport const ServicesPage: React.FC = () => {\n  const { deviceID } = useParams<{ deviceID: string }>()\n  const { devices } = useDispatch<Dispatch>()\n  const { connections, device, searched, query, thisDeviceId, fetching } = useSelector((state: ApplicationState) => {\n    const [_, device] = selectService(state, deviceID) // handles redirects that only have the service id\n    return {\n      device,\n      connections: state.backend.connections,\n      searched: state.devices.searched,\n      query: state.devices.query,\n      thisDeviceId: state.backend.device.uid,\n      fetching: state.devices.fetching,\n    }\n  })\n  const [loaded, setLoaded] = useState<boolean>(false)\n  const thisDevice = deviceID === thisDeviceId\n  const history = useHistory()\n  const location = useLocation()\n  const activeConnection = connections.find(c => c.deviceID === deviceID && c.active)\n  const serviceConnections = connections.reduce((result: ConnectionLookup, c: IConnection) => {\n    result[c.id] = c\n    return result\n  }, {})\n\n  useEffect(() => {\n    analyticsHelper.page('ServicesPage')\n    if (!device && !fetching) {\n      if (loaded) history.push('/devices')\n      else fetch()\n    }\n  }, [device, loaded, history])\n\n  async function fetch() {\n    await devices.fetchSingle({ deviceId: deviceID, hidden: true })\n    setLoaded(true)\n  }\n\n  if (!device || fetching) return <LoadingMessage message=\"Fetching data...\" />\n\n  return (\n    <Container\n      header={\n        <>\n          <Breadcrumbs />\n          <Typography variant=\"h1\">\n            <ConnectionStateIcon device={device} connection={activeConnection} thisDevice={thisDevice} size=\"lg\" />\n            <ServiceName device={device} connection={activeConnection} inline />\n            <EditButton device={device} />\n            <AddUserButton device={device} />\n            <RefreshButton device={device} />\n          </Typography>\n          <LicensingNotice device={device} />\n        </>\n      }\n    >\n      {searched && <Subtitle primary=\"Services\" secondary={`Searched for “${query}”`} />}\n      <ServiceList services={device.services} connections={serviceConnections} />\n      <Divider />\n      <List>\n        <ListItemLocation title=\"Edit Device\" icon=\"pen\" pathname={location.pathname + '/edit'} dense />\n        <UsersSelect device={device} />\n        <ListItemLocation title=\"Device Details\" icon=\"info-circle\" pathname={location.pathname + '/details'} dense />\n        <ListItemLocation title=\"Device Logs\" icon=\"file-alt\" pathname={location.pathname + '/logs'} dense />\n      </List>\n    </Container>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServicePage/ServicePage.tsx",["1346"],"import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams, useLocation } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { PortSetting } from '../../components/PortSetting'\nimport { NameSetting } from '../../components/NameSetting'\nimport { ServiceName } from '../../components/ServiceName'\nimport { Breadcrumbs } from '../../components/Breadcrumbs'\nimport { HostSetting } from '../../components/HostSetting'\nimport { ProxySetting } from '../../components/ProxySetting'\nimport { selectService } from '../../models/devices'\nimport { LicensingNotice } from '../../components/LicensingNotice'\nimport { ListItemLocation } from '../../components/ListItemLocation'\nimport { ServiceConnected } from '../../components/ServiceConnected'\nimport { AutoStartSetting } from '../../components/AutoStartSetting'\nimport { CustomAttributeSettings } from '../../components/CustomAttributeSettings'\nimport { ApplicationState, Dispatch } from '../../store'\nimport { Typography, Divider, List } from '@material-ui/core'\nimport { ConnectionErrorMessage } from '../../components/ConnectionErrorMessage'\nimport { InlineTemplateSetting } from '../../components/InlineTemplateSetting'\nimport { ConnectionStateIcon } from '../../components/ConnectionStateIcon'\nimport { UnauthorizedPage } from '../UnauthorizedPage'\nimport { LanShareSelect } from '../../components/LanShareSelect'\nimport { LoadingMessage } from '../../components/LoadingMessage'\nimport { AddUserButton } from '../../buttons/AddUserButton'\nimport { ConnectButton } from '../../buttons/ConnectButton'\nimport { LaunchButton } from '../../buttons/LaunchButton'\nimport { ForgetButton } from '../../buttons/ForgetButton'\nimport { UsersSelect } from '../../components/UsersSelect'\nimport { ErrorButton } from '../../buttons/ErrorButton'\nimport { EditButton } from '../../buttons/EditButton'\nimport { CopyButton } from '../../buttons/CopyButton'\nimport { Container } from '../../components/Container'\nimport { Columns } from '../../components/Columns'\nimport { spacing } from '../../styling'\nimport analyticsHelper from '../../helpers/analyticsHelper'\n\nexport const ServicePage: React.FC = () => {\n  const css = useStyles()\n  const location = useLocation()\n  const { serviceID = '' } = useParams<{ serviceID: string }>()\n  const [showError, setShowError] = useState<boolean>(true)\n  const { devices } = useDispatch<Dispatch>()\n  const { connection, service, device, thisDevice, fetching } = useSelector((state: ApplicationState) => {\n    const connection = state.backend.connections.find(c => c.id === serviceID)\n    const [service, device] = selectService(state, serviceID)\n    return {\n      service,\n      device,\n      connection,\n      thisDevice: state.backend.device?.uid === device?.id,\n      fetching: state.devices.fetching,\n    }\n  })\n\n  useEffect(() => {\n    analyticsHelper.page('ServicePage')\n    if (!device && connection?.deviceID) devices.fetchSingle({ deviceId: connection.deviceID, hidden: true })\n  }, [])\n\n  if (!device && fetching) return <LoadingMessage message=\"Fetching data...\" />\n  if (!service || !device) return <UnauthorizedPage />\n\n  return (\n    <Container\n      header={\n        <>\n          <Breadcrumbs />\n          <Typography variant=\"h1\">\n            <ConnectionStateIcon connection={connection} service={service} thisDevice={thisDevice} size=\"lg\" />\n            <ServiceName connection={connection} service={service} inline />\n            <EditButton device={device} service={service} connection={connection} />\n            <ErrorButton connection={connection} onClick={() => setShowError(!showError)} visible={showError} />\n            <AddUserButton device={device} />\n            <ForgetButton connection={connection} />\n            <LaunchButton connection={connection} service={service} />\n            <CopyButton connection={connection} service={service} />\n          </Typography>\n          <List className={css.errorMessage}>\n            <ConnectionErrorMessage connection={connection} service={service} visible={showError} />\n          </List>\n          {service.license === 'UNLICENSED' && <LicensingNotice device={device} />}\n        </>\n      }\n    >\n      <ServiceConnected connection={connection} service={service} />\n      <Columns center>\n        <List>\n          <NameSetting connection={connection} service={service} />\n          <PortSetting connection={connection} service={service} />\n          <HostSetting connection={connection} service={service} />\n          <InlineTemplateSetting connection={connection} service={service} context=\"launch\" />\n          <InlineTemplateSetting connection={connection} service={service} context=\"copy\" />\n          <CustomAttributeSettings connection={connection} service={service} />\n        </List>\n        <div className={css.actions}>\n          <ConnectButton\n            connection={connection}\n            service={service}\n            autoConnect={location.state?.autoConnect}\n            size=\"medium\"\n          />\n        </div>\n      </Columns>\n      <Divider />\n      <List>\n        <ProxySetting connection={connection} service={service} />\n        <AutoStartSetting connection={connection} service={service} />\n        <LanShareSelect connection={connection} service={service} />\n      </List>\n      <Divider />\n      <List>\n        {!device.shared && (\n          <ListItemLocation title=\"Edit Service\" icon=\"pen\" pathname={location.pathname + '/edit'} dense />\n        )}\n        <UsersSelect service={service} device={device} />\n        <ListItemLocation title=\"Service Details\" icon=\"info-circle\" pathname={location.pathname + '/details'} dense />\n      </List>\n    </Container>\n  )\n}\n\nconst useStyles = makeStyles({\n  actions: {\n    marginRight: spacing.md,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  errorMessage: { padding: 0 },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UsersPageService/UsersPageService.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DevicesPage/DevicesPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ServiceDetailPage/ServiceDetailPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/LanSharePage/LanSharePage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UsersPageDevice/UsersPageDevice.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SettingsPage/SettingsPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SetupDevice/SetupDevice.tsx",["1347"],"import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ApplicationState, Dispatch } from '../../store'\nimport { safeHostname, osName, serviceNameValidation } from '../../shared/nameHelper'\nimport { TextField, Button, Typography } from '@material-ui/core'\nimport { LocalhostScanForm } from '../../components/LocalhostScanForm'\nimport { Breadcrumbs } from '../../components/Breadcrumbs'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getDevices } from '../../models/accounts'\nimport { Container } from '../../components/Container'\nimport { isRemoteUI } from '../../helpers/uiHelper'\nimport { getLinks } from '../../helpers/routeHelper'\nimport { emit } from '../../services/Controller'\nimport { Body } from '../../components/Body'\nimport { Icon } from '../../components/Icon'\nimport styles from '../../styling'\nimport analyticsHelper from '../../helpers/analyticsHelper'\n\ntype Props = { os?: Ios }\n\nexport const SetupDevice: React.FC<Props> = ({ os }) => {\n  const { hostname, loading, nameBlacklist, links, remoteUI } = useSelector((state: ApplicationState) => ({\n    links: getLinks(state),\n    remoteUI: isRemoteUI(state),\n    hostname: state.backend.environment.hostname,\n    loading: !state.backend.scanData.localhost,\n    nameBlacklist: getDevices(state)\n      .filter((device: IDevice) => !device.shared)\n      .map((d: IDevice) => d.name.toLowerCase()),\n  }))\n  const css = useStyles()\n  const history = useHistory()\n  const { backend } = useDispatch<Dispatch>()\n  const [name, setName] = useState<string>(safeHostname(hostname, nameBlacklist))\n  const [disableRegister, setDisableRegister] = useState<boolean>(false)\n  const [nameError, setNameError] = useState<string>()\n  const [selected, setSelected] = useState<ITarget[]>([])\n\n  useEffect(() => {\n    if (loading) {\n      emit('scan', 'localhost')\n      analyticsHelper.track('networkScan')\n    } else {\n      setName(safeHostname(hostname, nameBlacklist))\n    }\n  }, [loading])\n\n  useEffect(() => {\n    // Refresh device data\n    emit('device')\n  }, [])\n\n  return (\n    <Container header={remoteUI || <Breadcrumbs />} integrated>\n      <Body center={true}>\n        <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n          Register your {osName(os)} for remote access\n        </Typography>\n        <form\n          onSubmit={event => {\n            if (!name) return\n            event.preventDefault()\n            backend.registerDevice({ targets: selected, name })\n            history.push(links.waiting)\n          }}\n        >\n          <section className={css.device}>\n            <TextField\n              label=\"Name\"\n              className={css.input}\n              value={name}\n              variant=\"filled\"\n              error={!!nameError}\n              onChange={event => {\n                const validation = serviceNameValidation(event.target.value)\n                setName(validation.value)\n                if (validation.error) {\n                  setNameError(validation.error)\n                  return\n                }\n                if (nameBlacklist.includes(validation.value.toLowerCase().trim())) {\n                  setNameError('That device name is already in use.')\n                  setDisableRegister(true)\n                } else {\n                  setNameError(undefined)\n                  setDisableRegister(false)\n                }\n              }}\n              onFocus={event => event.target.select()}\n              helperText={nameError}\n              inputProps={{ 'data-lpignore': 'true' }}\n            />\n            <Button\n              className={css.button}\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"medium\"\n              disabled={!name || disableRegister}\n              type=\"submit\"\n            >\n              Register\n              <Icon name=\"check\" type=\"regular\" inline />\n            </Button>\n          </section>\n          <LocalhostScanForm setSelected={setSelected} loading={loading} />\n        </form>\n      </Body>\n    </Container>\n  )\n}\n\nconst useStyles = makeStyles({\n  button: {\n    marginTop: styles.spacing.xxs,\n    marginLeft: styles.spacing.lg,\n  },\n  device: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'start',\n  },\n  input: {\n    width: 300,\n  },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Logo/Logo.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/SetupWaiting/SetupWaiting.tsx",["1348"],"import React, { useEffect } from 'react'\nimport { Typography, CircularProgress, Divider } from '@material-ui/core'\nimport { ApplicationState } from '../../store'\nimport { Breadcrumbs } from '../../components/Breadcrumbs'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { getDevices } from '../../models/accounts'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container } from '../../components/Container'\nimport { DocsLinks } from '../../components/DocsLinks'\nimport { getLinks } from '../../helpers/routeHelper'\nimport { osName } from '../../shared/nameHelper'\nimport { Body } from '../../components/Body'\nimport styles from '../../styling'\n\ntype Props = { os?: Ios; targetDevice: ITargetDevice }\n\nexport const SetupWaiting: React.FC<Props> = ({ targetDevice, os }) => {\n  const { errorMessage, device, links } = useSelector((state: ApplicationState) => ({\n    errorMessage: state.ui.errorMessage,\n    device: getDevices(state).find(d => d.id === targetDevice.uid),\n    links: getLinks(state, targetDevice.uid),\n  }))\n  const history = useHistory()\n  const css = useStyles()\n\n  useEffect(() => {\n    if (device) history.push(links.edit)\n  }, [device])\n\n  if (errorMessage) history.push(links.setup)\n\n  return (\n    <Container header={<Breadcrumbs />} integrated>\n      <Body center={true}>\n        <CircularProgress thickness={1.5} size={60} />\n        <section>\n          <Typography className={css.title} variant=\"h2\" align=\"center\">\n            Your {osName(os)} is being registered with remote.it\n          </Typography>\n          <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n            This may take up to a minute to complete.\n          </Typography>\n        </section>\n        <div className={css.divider}>\n          <Divider />\n        </div>\n        <DocsLinks os={os} />\n      </Body>\n    </Container>\n  )\n}\n\nconst useStyles = makeStyles({\n  title: { marginBottom: styles.spacing.sm },\n  divider: { width: 400 },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/ConnectionsPage/ConnectionsPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/NetworkPage/NetworkPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Duration/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InitiatorPlatform/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/AddUserButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Title/Title.tsx",["1349"],"import React from 'react'\nimport { makeStyles, Typography } from '@material-ui/core'\nimport { spacing, colors } from '../../styling'\n\nexport const Title: React.FC<{ offline?: boolean; inline?: boolean }> = ({ children, offline, inline }) => {\n  const css = useStyles(inline)()\n  return <span className={css.title + (offline ? ' offline' : '')}>{children}</span>\n}\n\nconst useStyles = inline =>\n  makeStyles({\n    title: {\n      flexGrow: 1,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      marginLeft: inline ? spacing.lg : 0,\n      '& sup': { marginLeft: spacing.xs, marginRight: spacing.xxs, color: colors.grayDark },\n      '&.offline': { color: colors.grayDark },\n      '&.offline sup': { color: colors.gray },\n    },\n  })\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Container/Container.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DeleteServiceButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Breadcrumbs/Breadcrumbs.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/hooks/reactReduxHooks.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/helpers/lanSharing.ts",["1350","1351"],"import { IP_OPEN, IP_LATCH } from '../shared/constants'\nimport { store } from '../store'\n\nexport function lanShareRestriction(connection?: IConnection) {\n  if (!connection || connection.host !== IP_OPEN) return 'Off'\n  const { privateIP } = store.getState().backend.environment\n\n  if (connection.restriction === undefined) return 'Off'\n  if (connection.restriction === IP_OPEN) return 'No restriction'\n  if (connection.restriction === IP_LATCH) return 'IP Latching'\n  if (isIPClass(connection.restriction, privateIP, 'A')) return 'Class-A Restriction'\n  if (isIPClass(connection.restriction, privateIP, 'B')) return 'Class-B Restriction'\n  if (isIPClass(connection.restriction, privateIP, 'C')) return 'Class-C Restriction'\n  return 'Single IP Restriction'\n}\n\nexport function lanShared(connection?: IConnection) {\n  return !!(connection && connection.host === IP_OPEN)\n}\n\nexport function isIPClass(checkIP: ipAddress, privateIP: ipAddress, type: ipClass) {\n  const maskedIP = maskIPClass(privateIP, type)\n  return checkIP === maskedIP\n}\n\n// IP class-A: *.0.0.0\n// IP class-B: *.*.0.0\n// IP class-C: *.*.*.0\nexport function maskIPClass(privateIP: ipAddress, type: ipClass) {\n  let parts = privateIP.split('.')\n  switch (type) {\n    case 'A':\n      parts[1] = '0'\n    case 'B':\n      parts[2] = '0'\n    case 'C':\n      parts[3] = '0'\n  }\n  return parts.join('.')\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceLogPage/EventIcon.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/QualityDetails.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Quote.tsx",["1352"],"import React from 'react'\nimport { colors, spacing, Spacing } from '../styling'\nimport { makeStyles, Box } from '@material-ui/core'\n\nexport const Quote: React.FC<{ margin?: number }> = ({ children, margin = spacing.lg }) => {\n  const css = useStyles(margin)()\n  return <Box className={css.quote}>{children}</Box>\n}\n\nconst useStyles = margin =>\n  makeStyles({\n    quote: {\n      margin: `${margin}px 0`,\n      paddingLeft: spacing.lg,\n      borderLeft: `1px solid ${colors.grayLight}`,\n    },\n  })\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DatePicker/DatePicker.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InitiatorPlatform/InitiatorPlatform.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Duration/Duration.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/AddUserButton/AddUserButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AccountLinkingSettings.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Columns/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/assets/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceForm/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/TargetPlatform/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/OutOfBand/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportDeviceQualityList/index.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportTimeSeriesVis/index.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportSummaryBox/index.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/UnregisterServiceButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DeleteButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/RefreshButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CSVDownloadButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Subtitle/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharedUsersHeader/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceList/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Confirm.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DataDisplay/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharedUsersList/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Avatar/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LocalhostScanForm/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SessionsList/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Scan/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/DeviceLogPage/EventMessage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Formats.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UpdateSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionsList/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AccountSelect.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DocsLinks/index.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/hooks/useInterval.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SettingsDisableNetworkItem/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceSetupItem/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LimitSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceForm/ServiceForm.tsx",["1353"],"import React, { useState, useEffect } from 'react'\nimport { DEFAULT_TARGET, REGEX_VALID_IP, REGEX_VALID_HOSTNAME } from '../../shared/constants'\nimport { makeStyles, Divider, Typography, TextField, List, ListItem, MenuItem, Button } from '@material-ui/core'\nimport { Dispatch } from '../../store'\nimport { AddFromNetwork } from '../AddFromNetwork'\nimport { ListItemCheckbox } from '../ListItemCheckbox'\nimport { ApplicationState } from '../../store'\nimport { DEFAULT_CONNECTION } from '../../helpers/connectionHelper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ServiceAttributesForm } from '../ServiceAttributesForm'\nimport { serviceNameValidation } from '../../shared/nameHelper'\nimport { findType } from '../../models/applicationTypes'\nimport { Columns } from '../Columns'\nimport { spacing } from '../../styling'\nimport { Notice } from '../Notice'\nimport { emit } from '../../services/Controller'\nimport { Icon } from '../Icon'\n\ntype Props = {\n  service?: IService\n  target?: ITarget\n  thisDevice: boolean\n  editable: boolean\n  onSubmit: (form: IServiceForm) => void\n  onCancel: () => void\n}\n\nexport const ServiceForm: React.FC<Props> = ({\n  service,\n  target = DEFAULT_TARGET,\n  thisDevice,\n  editable,\n  onSubmit,\n  onCancel,\n}) => {\n  const { backend, ui } = useDispatch<Dispatch>()\n  const { applicationTypes, disabled, setupAdded, isValid } = useSelector((state: ApplicationState) => ({\n    applicationTypes: state.applicationTypes.all,\n    disabled: !!(state.ui.setupBusy || (state.ui.setupServiceBusy === service?.id && service?.id)),\n    setupAdded: state.ui.setupAdded,\n    isValid: state.backend.reachablePort,\n  }))\n  const [error, setError] = useState<string>()\n  const [form, setForm] = useState<ITarget & IServiceForm>(() => {\n    const defaultAppType = findType(applicationTypes, target.type)\n    return {\n      hostname: service?.host || target.hostname,\n      hardwareID: target.hardwareID,\n      uid: service?.id || target.uid,\n      secret: target.secret,\n      port: service?.port || target.port,\n      type: service?.typeID || target.type,\n      disabled: service?.enabled === undefined ? target.disabled : !service?.enabled,\n      name: service?.name || serviceNameValidation(defaultAppType.description).value,\n      attributes: service?.attributes || {},\n      ...setupAdded,\n    }\n  })\n  const appType = findType(applicationTypes, form.type)\n  const css = useStyles()\n\n  const checkPort = () => {\n    if (\n      REGEX_VALID_IP.test(`${form.hostname}:${form.port}`) ||\n      REGEX_VALID_HOSTNAME.test(`${form.hostname}:${form.port}`)\n    ) {\n      backend.set({ reachablePortLoading: true })\n      emit('reachablePort', { port: form.port, host: form.hostname })\n    } else {\n      backend.set({ reachablePort: false })\n    }\n  }\n\n  const CheckIcon = () => (\n    <Icon\n      name={isValid ? 'check-circle' : 'exclamation-triangle'}\n      type=\"light\"\n      size=\"md\"\n      color={isValid ? 'success' : 'warning'}\n      fixedWidth\n    />\n  )\n\n  useEffect(() => {\n    checkPort()\n    if (setupAdded) ui.set({ setupAdded: undefined })\n  }, [form?.port, form?.hostname])\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n        onSubmit({ ...form, port: form.port || 1 })\n      }}\n    >\n      {editable && (\n        <>\n          <List>\n            <ListItem className={css.field}>\n              <TextField\n                select\n                autoFocus\n                size=\"small\"\n                label=\"Service Type\"\n                value={form.type}\n                disabled={disabled}\n                variant=\"filled\"\n                onChange={event => {\n                  const type = Number(event.target.value)\n                  const updatedAppType = findType(applicationTypes, type)\n                  setForm({\n                    ...form,\n                    type,\n                    port: findType(applicationTypes, type).port || 0,\n                    name: serviceNameValidation(updatedAppType.description).value,\n                    attributes: {\n                      ...form.attributes,\n                      commandTemplate: undefined,\n                      launchTemplate: undefined,\n                    },\n                  })\n                }}\n              >\n                {applicationTypes.map(type => (\n                  <MenuItem value={type.id} key={type.id}>\n                    {type.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <Typography variant=\"caption\">\n                {appType.description}\n                <br />\n                <em>\n                  {appType.protocol} protocol {appType.proxy && ' - reverse proxy'}\n                </em>\n              </Typography>\n            </ListItem>\n            <ListItem className={css.field}>\n              <TextField\n                size=\"small\"\n                label=\"Service Port\"\n                value={form.port}\n                disabled={disabled}\n                variant=\"filled\"\n                onChange={event => {\n                  const port = Math.max(0, Math.min(+event.target.value, 65535))\n                  setForm({ ...form, port: isNaN(port) ? 0 : port })\n                }}\n                InputProps={{\n                  endAdornment: thisDevice && <CheckIcon />,\n                }}\n              />\n            </ListItem>\n            <ListItem className={css.fieldWide}>\n              <TextField\n                size=\"small\"\n                label=\"Service Host Address\"\n                value={form.hostname}\n                disabled={disabled}\n                variant=\"filled\"\n                onChange={event => setForm({ ...form, hostname: event.target.value })}\n                InputProps={{\n                  endAdornment: thisDevice && <CheckIcon />,\n                }}\n              />\n              <Typography variant=\"caption\">\n                Local network IP address or fully qualified domain name to host this service. Leave blank for this\n                system to host.\n                <br />\n                <i>AWS example:</i>\n                <b> vpc-domain-name-identifier.region.es.amazonaws.com</b>\n              </Typography>\n            </ListItem>\n            {thisDevice && (\n              <ListItem className={css.fieldWide}>\n                <Notice\n                  fullWidth\n                  severity={isValid ? 'success' : 'warning'}\n                  button={\n                    isValid ? undefined : (\n                      <Button size=\"small\" color=\"primary\" onClick={checkPort}>\n                        Retry\n                      </Button>\n                    )\n                  }\n                >\n                  {isValid ? (\n                    'Service found on port and host address!'\n                  ) : (\n                    <>\n                      No service found running on port and host address.\n                      <AddFromNetwork allowScanning={thisDevice} />\n                    </>\n                  )}\n                </Notice>\n              </ListItem>\n            )}\n          </List>\n          <Divider />\n        </>\n      )}\n      <List>\n        <ListItem className={css.fieldWide}>\n          <TextField\n            size=\"small\"\n            label=\"Service Name\"\n            value={form.name}\n            disabled={disabled}\n            error={!!error}\n            variant=\"filled\"\n            helperText={error || ''}\n            placeholder={appType.description}\n            onChange={event => {\n              const validation = serviceNameValidation(event.target.value)\n              setForm({ ...form, name: validation.value })\n              validation.error ? setError(validation.error) : setError(undefined)\n            }}\n          />\n        </ListItem>\n        <ServiceAttributesForm\n          className={css.fieldWide}\n          subClassName={css.fieldSub}\n          connection={{\n            ...DEFAULT_CONNECTION,\n            ...form.attributes,\n            typeID: form.type,\n          }}\n          disabled={disabled}\n          attributes={form.attributes}\n          setAttributes={attributes => setForm({ ...form, attributes })}\n        />\n      </List>\n      {editable && (\n        <>\n          <Divider />\n          <List>\n            <ListItemCheckbox\n              checked={!form.disabled}\n              label={form.disabled ? 'Service disabled' : 'Service enabled'}\n              subLabel=\"Disabling your service will take it offline.\"\n              disabled={disabled}\n              onClick={() => {\n                setForm({ ...form, disabled: !form.disabled })\n              }}\n            />\n          </List>\n        </>\n      )}\n      <Columns inset count={1}>\n        <span>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={disabled || !!error}>\n            Save\n          </Button>\n          <Button onClick={onCancel}>Cancel</Button>\n        </span>\n      </Columns>\n    </form>\n  )\n}\n\nconst useStyles = makeStyles({\n  field: {\n    paddingLeft: 75,\n    paddingRight: spacing.xl,\n    '& .MuiFormControl-root': { minWidth: 200, marginRight: 100 + spacing.lg },\n  },\n  fieldWide: {\n    paddingLeft: 75,\n    paddingRight: spacing.xl,\n    '& .MuiFormControl-root': { minWidth: 300, marginRight: spacing.lg },\n  },\n  fieldSub: {\n    padding: `0 ${spacing.xl}px 0 75px`,\n    '& .MuiFormControl-root': {\n      minWidth: 300 - spacing.lg,\n      display: 'block',\n    },\n    '& .MuiFormControl-root + .MuiFormControl-root': {\n      marginTop: spacing.sm,\n    },\n  },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Columns/Columns.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/OutOfBand/OutOfBand.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportDeviceQualityList/ReportDeviceQualityList.tsx",["1354","1355","1356","1357","1358"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { ApplicationState } from '../../store'\nimport Paper from '@material-ui/core/Paper'\nimport { IAnalyticsDevice } from '../../models/analytics'\nimport { Color } from '../../styling'\nimport { Box } from '@material-ui/core'\nimport { Icon } from '../Icon'\n\nexport interface ReportDeviceQualityListProps {\n  devices: IAnalyticsDevice[]\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      height: 100,\n    },\n    tableBody: {\n      height: 100,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  })\n)\n\nlet title: string = 'Unknown'\nlet color: Color = 'gray'\nconst getQualityDisplay = (device: IAnalyticsDevice) => {\n  switch (device.quality) {\n    case 'GOOD':\n      title = 'Good'\n      color = 'success'\n      break\n    case 'MODERATE':\n      title = 'Moderate'\n      color = 'warning'\n      break\n    case 'POOR':\n      title = 'Poor'\n      color = 'danger'\n      break\n  }\n  return (\n    <Box>\n      <Icon name=\"circle\" color={color} size=\"bug\" type=\"solid\" inlineLeft /> {title}\n    </Box>\n  )\n}\n\ntype Order = 'asc' | 'desc'\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nconst headCells = [\n  { id: 'name', label: 'Device Name', orderBy: 'name', numeric: false },\n  { id: 'quality', label: 'Internet Connectivity', orderBy: 'qualitySort', numeric: true },\n]\n\ninterface HeadCell {\n  id: keyof IAnalyticsDevice\n  label: string\n  orderBy: string\n  numeric: boolean\n}\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof IAnalyticsDevice) => void\n  order: Order\n  orderBy: string\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { classes, order, orderBy, onRequestSort } = props\n  const createSortHandler = property => event => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell key={headCell.id} sortDirection={orderBy === headCell.orderBy ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.orderBy}\n              direction={orderBy === headCell.orderBy ? order : 'asc'}\n              onClick={createSortHandler(headCell.orderBy)}\n            >\n              {headCell.label}\n              {orderBy === headCell.orderBy ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n}\n\nexport const ReportDeviceQualityList: React.FC = () => {\n  const classes = useStyles()\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [orderBy, setOrderBy] = React.useState<keyof IAnalyticsDevice>('qualitySort')\n  const { devices } = useSelector((state: ApplicationState) => state.analytics)\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof IAnalyticsDevice) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n  const devicesInOrder = devices.slice().sort((a, b) => {\n    if (order == 'desc') {\n      if (b[orderBy] < a[orderBy]) {\n        return -1\n      }\n      if (b[orderBy] > a[orderBy]) {\n        return 1\n      }\n    } else {\n      if (b[orderBy] > a[orderBy]) {\n        return -1\n      }\n      if (b[orderBy] < a[orderBy]) {\n        return 1\n      }\n    }\n    return 0\n  })\n  return (\n    <>\n      <TableContainer>\n        <Table size=\"small\" className={classes.table} aria-label=\"Device Internet Connectivity\" stickyHeader>\n          <EnhancedTableHead classes={classes} order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n          <TableBody className={classes.tableBody}>\n            {devicesInOrder.map(device => {\n              const labelId = `enhanced-table-checkbox-${device.id}`\n              return (\n                <TableRow key={device.id}>\n                  <TableCell>{device.name}</TableCell>\n                  <TableCell>{getQualityDisplay(device)}</TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportTimeSeriesVis/ReportTimeSeriesVis.tsx",["1359","1360","1361","1362","1363","1364"],"import React from 'react'\nimport { useTooltip, useTooltipInPortal, defaultStyles } from '@visx/tooltip'\nimport { localPoint } from '@visx/event'\nimport { Bar } from '@visx/shape'\nimport { Group } from '@visx/group'\nimport { AxisBottom, AxisLeft } from '@visx/axis'\nimport { ITimeSeriesData } from '../../models/analytics'\nimport { scaleBand, scaleLinear } from '@visx/scale'\nimport { colors, spacing } from '../../styling'\nimport { format as formatDate, max as maxDate, min as minDate } from 'date-fns'\nimport { Typography } from '@material-ui/core'\n\n// accessors\n\nexport interface ReportTimeSeriesChartProps {\n  title?: string\n  timeseriesData: ITimeSeriesData[]\n  tooltipLabel?: string\n  width: number\n  height: number\n}\nexport type TooltipProps = {\n  width: number\n  height: number\n  showControls?: boolean\n}\n\ntype TooltipData = ITimeSeriesData\n\nconst positionIndicatorSize = 8\nconst formattedDate = (date: Date) => formatDate(date, 'MMM d')\n\nconst getDate = (d: ITimeSeriesData) => formattedDate(d.date)\nconst getCount = (d: ITimeSeriesData) => Math.round(d.count)\n\nconst tooltipStyles = {\n  ...defaultStyles,\n  minWidth: 60,\n  backgroundColor: colors.grayLighter,\n  color: colors.grayDark,\n}\nlet tooltipTimeout\n\nexport const ReportTimeSeriesVis: React.FC<ReportTimeSeriesChartProps> = ({\n  title,\n  timeseriesData,\n  tooltipLabel,\n  width,\n  height,\n}) => {\n  const { containerRef, containerBounds, TooltipInPortal } = useTooltipInPortal({\n    scroll: true,\n    detectBounds: true,\n  })\n\n  const {\n    showTooltip,\n    hideTooltip,\n    tooltipOpen,\n    tooltipData,\n    tooltipLeft = 0,\n    tooltipTop = 0,\n  } = useTooltip<TooltipData>({\n    // initial tooltip state\n    tooltipOpen: false,\n    tooltipLeft: width / 3,\n    tooltipTop: height / 3,\n    tooltipData: { date: new Date(), count: 0 },\n  })\n\n  const maxYTick = Math.round(\n    Math.max.apply(\n      Math,\n      timeseriesData.map(function (d) {\n        return d.count\n      })\n    )\n  )\n  const yTickValues = () => {\n    if (maxYTick > 1) {\n      return [0, Math.round(maxYTick / 2), Math.round(maxYTick)]\n    } else {\n      return [0, 1]\n    }\n  }\n\n  if (width < 10) return null\n\n  const margin = {\n    top: spacing.lg,\n    bottom: spacing.lg,\n    left: spacing.lg,\n    right: 0,\n  }\n  const xMax = width - margin.left - margin.right - 10\n  const yMax = Math.round(height - margin.top - margin.bottom)\n  //handle the tooltip\n  const handleMouseOver = (event, datum) => {\n    if (tooltipTimeout) clearTimeout(tooltipTimeout)\n    const coords = localPoint(event.target.ownerSVGElement, event)\n    showTooltip({\n      tooltipLeft: coords ? coords.x : 0,\n      tooltipTop: coords ? coords.y : 0,\n      tooltipData: datum,\n    })\n  }\n\n  // scales, memoize for performance\n  const xScale = scaleBand({\n    range: [0, xMax],\n    domain: timeseriesData.map(getDate),\n    padding: 0.2,\n  })\n  const yScale = scaleLinear<number>({\n    range: [yMax, 0],\n    round: true,\n    nice: true,\n    domain: [0, Math.max(2, maxYTick)],\n  })\n  console.log('yScale', yScale)\n  return (\n    <>\n      <Typography variant=\"h4\">{title}</Typography>\n      <svg width={width} height={height} ref={containerRef}>\n        <Group top={margin.top} left={margin.left}>\n          <AxisLeft\n            left={0}\n            scale={yScale}\n            stroke={colors.gray}\n            hideZero={false}\n            tickValues={yTickValues()}\n            tickFormat={d => (+d).toString()}\n          />\n          <AxisBottom scale={xScale} numTicks={5} top={yMax} stroke={colors.gray} />\n          {timeseriesData.map(d => {\n            const label = getDate(d)\n            const barWidth = xScale.bandwidth()\n            const yLabel = yScale(getCount(d))\n            const barHeight = yMax - yLabel\n            const barX = xScale(label)\n            const barY = yMax - barHeight\n            const offset = 4\n            const toolTipData: ITimeSeriesData = d\n            return (\n              <Bar\n                width={barWidth}\n                height={barHeight}\n                x={barX}\n                y={barY}\n                fill={colors.primary}\n                onMouseEnter={e => handleMouseOver(e, { date: label, count: d.count })}\n                onMouseOut={() =>\n                  (tooltipTimeout = setTimeout(() => {\n                    hideTooltip()\n                  }, 300))\n                }\n                key={`bar-${label}`}\n                stroke={''}\n              />\n            )\n          })}\n        </Group>\n      </svg>\n      {tooltipOpen && (\n        <TooltipInPortal\n          key={Math.random()} // update tooltip bounds each render\n          top={tooltipTop}\n          left={tooltipLeft}\n          style={tooltipStyles}\n        >\n          <div>{tooltipData && tooltipData.date}</div>\n          <div>\n            {tooltipData && tooltipData.count} {tooltipLabel}\n          </div>\n        </TooltipInPortal>\n      )}\n    </>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ReportSummaryBox/ReportSummaryBox.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/TargetPlatform/TargetPlatform.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/UnregisterServiceButton/UnregisterServiceButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingNotice.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingIcon.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DeleteButton/DeleteButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CSVDownloadButton/CSVDownloadButton.tsx",["1365"],"import { IconButton, Tooltip } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { Icon } from '../../components/Icon'\nimport { Dispatch, ApplicationState } from '../../store'\nimport { useDispatch, useSelector } from 'react-redux'\n\ninterface Props {\n  deviceID: string\n  maxDate: string\n}\n\nexport function CSVDownloadButton({ deviceID, maxDate }: Props) {\n  const dispatch = useDispatch<Dispatch>()\n  const { getEventsURL, set } = dispatch.logs\n  const { eventsUrl } = useSelector((state: ApplicationState) => state.logs)\n  const [shouldDownload, setShouldDownload] = useState(false)\n\n  useEffect(() => {\n    if (shouldDownload && eventsUrl) {\n      window.open(eventsUrl)\n      setShouldDownload(false)\n      set({ eventsURL: '' })\n    }\n  }, [eventsUrl, shouldDownload])\n\n  const download = () => {\n    getEventsURL({ id: deviceID, maxDate: maxDate })\n    setShouldDownload(true)\n  }\n\n  return (\n    <Tooltip title=\"Download CSV\">\n      <IconButton disabled={shouldDownload} onClick={download}>\n        <Icon name={shouldDownload ? 'spinner-third' : 'arrow-to-bottom'} size=\"md\" fixedWidth spin={shouldDownload} />\n      </IconButton>\n    </Tooltip>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceList/DeviceList.tsx",["1366"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { DeviceListItem } from '../DeviceListItem'\nimport { getActiveAccountId, getOwnDevices } from '../../models/accounts'\nimport { DeviceSetupItem } from '../DeviceSetupItem'\nimport { ApplicationState } from '../../store'\nimport { ServiceContextualMenu } from '../ServiceContextualMenu'\nimport { List, Divider, ListItem } from '@material-ui/core'\nimport { isOffline } from '../../models/devices'\nimport { LoadMore } from '../LoadMore'\nimport { Notice } from '../Notice'\n\nexport interface DeviceListProps {\n  devices?: IDevice[]\n  connections: { [deviceID: string]: IConnection[] }\n}\n\nexport const DeviceList: React.FC<DeviceListProps> = ({ devices = [], connections = {} }) => {\n  const [contextMenu, setContextMenu] = React.useState<IContextMenu>({})\n  const { myDevice, loggedInUser, registeredId, restore } = useSelector((state: ApplicationState) => ({\n    registeredId: state.backend.device.uid,\n    loggedInUser: getActiveAccountId(state) === state.auth.user?.id,\n    myDevice: getOwnDevices(state).find(device => device.id === state.backend.device.uid),\n    restore: state.ui.restore,\n  }))\n\n  return (\n    <>\n      <List>\n        {registeredId ? (\n          loggedInUser &&\n          (myDevice ? (\n            <>\n              <DeviceListItem\n                key={registeredId}\n                device={myDevice}\n                connections={connections[registeredId]}\n                thisDevice={true}\n                setContextMenu={setContextMenu}\n              />\n              <Divider />\n            </>\n          ) : (\n            <>\n              <ListItem>\n                <Notice>This device is not registered to you.</Notice>\n              </ListItem>\n              <Divider />\n            </>\n          ))\n        ) : (\n          <>\n            <DeviceSetupItem />\n            <Divider />\n          </>\n        )}\n        {devices?.map(device => {\n          const canRestore = isOffline(device) && !device.shared\n          if (device.id === myDevice?.id || (restore && !canRestore)) return\n          return (\n            <DeviceListItem\n              key={device.id}\n              device={device}\n              connections={connections[device.id]}\n              setContextMenu={setContextMenu}\n              restore={restore && canRestore}\n            />\n          )\n        })}\n      </List>\n      <LoadMore />\n      <ServiceContextualMenu\n        el={contextMenu.el}\n        serviceID={contextMenu.serviceID}\n        setEl={el => setContextMenu({ ...contextMenu, el })}\n      />\n    </>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharedUsersHeader/SharedUsersHeader.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DataDisplay/DataDisplay.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SharedUsersList/SharedUsersList.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SearchField/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/FilterButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Subtitle/Subtitle.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Scan/Scan.tsx",["1367"],"import React, { useEffect, useCallback } from 'react'\nimport { DEFAULT_INTERFACE } from '../../models/ui'\nimport { Button, CircularProgress, TextField, MenuItem, Typography } from '@material-ui/core'\nimport { Dispatch, ApplicationState } from '../../store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ScanNetwork } from '../ScanNetwork'\nimport styles from '../../styling'\n\ntype Props = {\n  data: IScanData\n  onScan: (network: string) => void\n  interfaces: IInterface[]\n  targets: ITarget[]\n  privateIP: string\n}\n\nexport const Scan: React.FC<Props> = ({ data, onScan, interfaces, targets, privateIP }) => {\n  const css = useStyles()\n  const { ui } = useDispatch<Dispatch>()\n  const { scanLoading, scanTimestamp, scanInterface } = useSelector((state: ApplicationState) => state.ui)\n  const selected = data[scanInterface] || {}\n  const selectedTimestamp = scanTimestamp[scanInterface]\n  const selectedLoading = scanLoading[scanInterface]\n  const noResults = selected.data && !selected.data.length\n\n  const scan = useCallback(\n    (i: string) => {\n      onScan(i)\n      ui.set({\n        scanLoading: { [i]: true },\n        scanTimestamp: { [i]: selected.timestamp },\n      })\n    },\n    [selected, onScan, ui]\n  )\n\n  useEffect(() => {\n    if (interfaces.length && scanInterface === DEFAULT_INTERFACE) {\n      let name = interfaces[0].name\n      interfaces.forEach(i => i.active && (name = i.name))\n      ui.set({ scanInterface: name })\n      scan(name) // auto scan\n    }\n  }, [interfaces, scanInterface, scan, ui])\n\n  useEffect(() => {\n    if (selected.timestamp !== selectedTimestamp && selectedLoading) {\n      ui.set({\n        scanLoading: { [scanInterface]: false },\n        scanTimestamp: { [scanInterface]: selected.timestamp },\n      })\n    }\n  }, [selected.timestamp, selectedTimestamp, selectedLoading, scanInterface, ui])\n\n  function interfaceType() {\n    const i = interfaces.find(i => i.name === scanInterface)\n    return (i ? i.type : '') as IInterfaceType\n  }\n\n  return (\n    <>\n      <section className={css.controls}>\n        <div>\n          <TextField\n            select\n            margin=\"dense\"\n            value={scanInterface}\n            variant=\"filled\"\n            onChange={event => ui.set({ scanInterface: event.target.value as string })}\n          >\n            {interfaces.length ? (\n              interfaces.map((i: IInterface) => (\n                <MenuItem key={i.name} value={i.name}>\n                  {i.type}\n                </MenuItem>\n              ))\n            ) : (\n              <MenuItem key={0} value={DEFAULT_INTERFACE}>\n                Finding Network...\n              </MenuItem>\n            )}\n          </TextField>\n        </div>\n        <Typography variant=\"caption\">\n          Scan your system and network <br />\n          for open ports to host\n        </Typography>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => scan(scanInterface)} disabled={selectedLoading}>\n          {selectedLoading ? (\n            <>\n              Scanning\n              <CircularProgress size={styles.fontSizes.lg} color=\"inherit\" />\n            </>\n          ) : (\n            'Scan'\n          )}\n        </Button>\n      </section>\n      <ScanNetwork data={selected.data || []} targets={targets} interfaceType={interfaceType()} privateIP={privateIP} />\n      <section className={css.loading}>{noResults && 'No results'}</section>\n    </>\n  )\n}\n\nconst useStyles = makeStyles({\n  loading: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    color: styles.colors.grayLighter,\n    fontSize: styles.fontSizes.xl,\n  },\n  controls: {\n    paddingBottom: styles.spacing.md,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    '& > div': { flexGrow: 1 },\n    '& .MuiCircularProgress-root': { marginLeft: styles.spacing.md },\n    '& .MuiButton-contained': { marginRight: 0 },\n    '& .MuiFormControl-root': { width: 250 },\n    '& .MuiTypography-root': { textAlign: 'right', marginRight: styles.spacing.md },\n    '& samp': {\n      fontSize: styles.fontSizes.sm,\n      fontFamily: 'Roboto Mono',\n      color: styles.colors.grayDark,\n    },\n  },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SessionsList/SessionsList.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DocsLinks/DocsLinks.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemSetting/ListItemSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionsList/ConnectionsList.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UpdateSetting/UpdateSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemLocation/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceAttributesForm.tsx",["1368"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Typography, TextField, ListItem, MenuItem } from '@material-ui/core'\nimport { useApplication } from '../hooks/useApplication'\nimport { ApplicationState } from '../store'\nimport { TemplateSetting } from './TemplateSetting'\nimport { ROUTES } from '../shared/constants'\nimport { Notice } from './Notice'\nimport { Quote } from './Quote'\n\ntype Props = IService['attributes'] & {\n  className?: string\n  subClassName?: string\n  connection?: IConnection\n  disabled: boolean\n  attributes: IService['attributes']\n  setAttributes: (attributes: IService['attributes']) => void\n}\n\nexport const ServiceAttributesForm: React.FC<Props> = ({\n  className,\n  subClassName,\n  disabled,\n  connection,\n  attributes,\n  setAttributes,\n}) => {\n  const { routingLock, routingMessage } = useSelector((state: ApplicationState) => state.ui)\n  const copyApp = useApplication('copy', undefined, connection)\n  const launchApp = useApplication('launch', undefined, connection)\n\n  // Defaults\n  attributes = {\n    ...attributes,\n    route: routingLock || attributes.route || ROUTES[0].key,\n    commandTemplate: attributes.commandTemplate || copyApp.template,\n    launchTemplate: attributes.launchTemplate || launchApp.template,\n  }\n\n  return (\n    <>\n      <ListItem className={className}>\n        <TextField\n          select\n          size=\"small\"\n          label=\"Routing\"\n          value={attributes.route}\n          disabled={!!routingLock || disabled}\n          variant=\"filled\"\n          onChange={event => {\n            setAttributes({ ...attributes, route: event.target.value as IRouteType })\n          }}\n        >\n          {ROUTES.map(route => (\n            <MenuItem value={route.key} key={route.key}>\n              {route.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        <Typography variant=\"caption\">\n          {routingMessage || ROUTES.find(route => route.key === attributes.route)?.description}\n        </Typography>\n      </ListItem>\n      <TemplateSetting\n        className={className}\n        label={`${launchApp.contextTitle} Template`}\n        value={attributes.launchTemplate}\n        disabled={disabled}\n        onChange={value => setAttributes({ ...attributes, launchTemplate: value })}\n      >\n        Replacement tokens <b>{launchApp.tokens.join(', ')}</b>\n        <br />\n        <b>{launchApp.command}</b>\n      </TemplateSetting>\n      <TemplateSetting\n        className={className}\n        label={`${copyApp.contextTitle} Template`}\n        value={attributes.commandTemplate}\n        disabled={disabled}\n        onChange={value => setAttributes({ ...attributes, commandTemplate: value })}\n      >\n        Replacement tokens <b>{copyApp.tokens.join(', ')}</b>\n        <br />\n        <b>{copyApp.command}</b>\n      </TemplateSetting>\n      <ListItem className={subClassName}>\n        {launchApp.customTokens.length ? (\n          <Quote>\n            {launchApp.customTokens.map(token => (\n              <TextField\n                fullWidth\n                size=\"small\"\n                key={token}\n                label={`${token} default`}\n                value={attributes[token] || ''}\n                disabled={disabled}\n                variant=\"filled\"\n                onChange={event => setAttributes({ ...attributes, [token]: event.target.value })}\n              />\n            ))}\n          </Quote>\n        ) : (\n          <Notice fullWidth>\n            Add custom [tokens]\n            <em>\n              You can add custom [tokens] to the templates above. Just enclose a tag in brackets to create a [token] you\n              can set a default value for. If not filled out, tokens will prompt you at time of connection.\n            </em>\n          </Notice>\n        )}\n      </ListItem>\n    </>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingTitle.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/FilterButton/FilterButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SearchField/SearchField.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemLocation/ListItemLocation.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemCheckbox/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/hooks/useApplication.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/TemplateSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LoadMore/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceContextualMenu/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceListItem/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ShareDetails/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UserListItem/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ScanNetwork/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceName/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ClearButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceListItem/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ListItemCheckbox/ListItemCheckbox.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ShareDetails/ShareDetails.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UserListItem/UserListItem.tsx",["1369"],"import React from 'react'\nimport { ListItemText, ListItemIcon } from '@material-ui/core'\nimport { ListItemLocation } from '../ListItemLocation'\nimport { InitiatorPlatform } from '../InitiatorPlatform'\nimport { Duration } from '../Duration'\nimport { useLocation } from 'react-router-dom'\n\ninterface Props {\n  user: IUser\n  isConnected?: boolean\n}\n\nexport const UserListItem: React.FC<Props> = ({ user, isConnected, children }) => {\n  const location = useLocation()\n\n  return (\n    <ListItemLocation pathname={location.pathname + '/' + user.email} dense>\n      <ListItemIcon>\n        <InitiatorPlatform id={user.platform} connected={isConnected} />\n      </ListItemIcon>\n      {isConnected ? (\n        <ListItemText\n          primaryTypographyProps={{ color: 'primary' }}\n          primary={user.email}\n          secondary={<Duration startTime={user.timestamp?.getTime()} ago />}\n        />\n      ) : (\n        <ListItemText primary={user.email} />\n      )}\n      {children}\n    </ListItemLocation>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ScanNetwork/ScanNetwork.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceName/ServiceName.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceMiniState/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceMiniState/ServiceMiniState.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceListItem/ServiceListItem.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ClearButton/ClearButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CopyButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SessionsTooltip/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ErrorButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/LaunchButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ComboButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/SessionsButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionErrorMessage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/PromptModal.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SessionsTooltip/SessionsTooltip.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/LaunchButton/LaunchButton.tsx",["1370"],"import React, { useState, useEffect } from 'react'\nimport { ApplicationState } from '../../store'\nimport { useApplication } from '../../hooks/useApplication'\nimport { setConnection } from '../../helpers/connectionHelper'\nimport { launchPutty, launchVNC } from '../../services/Browser'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { PromptModal } from '../../components/PromptModal'\nimport { Dispatch } from '../../store'\nimport { FontSize } from '../../styling'\nimport { Icon } from '../../components/Icon'\nimport { emit } from '../../services/Controller'\nimport { makeStyles, IconButton, Tooltip, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport { DialogApp } from '../../components/DialogApp'\n\ntype Props = {\n  connection?: IConnection\n  service?: IService\n  menuItem?: boolean\n  size?: FontSize\n}\n\nexport const LaunchButton: React.FC<Props> = ({ connection, service, menuItem, size = 'md' }) => {\n  const { requireInstall, loading, path } = useSelector((state: ApplicationState) => ({\n    requireInstall: state.ui.requireInstall,\n    path: state.ui.launchPath,\n    loading: state.ui.launchLoading,\n  }))\n  const { ui } = useDispatch<Dispatch>()\n  const [launch, setLaunch] = useState<boolean>(false)\n  const [open, setOpen] = useState<boolean>(false)\n  const [openApp, setOpenApp] = useState<boolean>(false)\n  const [downloadLink, setDownloadLink] = useState<string>('')\n\n  const app = useApplication('launch', service, connection)\n  const css = useStyles()\n\n  useEffect(() => {\n    if (launch) {\n      app.prompt ? setOpen(true) : launchBrowser()\n    }\n    switch (requireInstall) {\n      case 'putty':\n        setDownloadLink('https://link.remote.it/download/putty')\n        setOpenApp(true)\n        ui.set({ requireInstall: 'none' })\n        break\n      case 'vncviewer':\n        setDownloadLink('https://www.realvnc.com/en/connect/download/viewer/windows/')\n        setOpenApp(true)\n        ui.set({ requireInstall: 'none' })\n        break\n    }\n  }, [requireInstall, launch, app])\n\n  if (!connection || !connection.active || !app) return null\n\n  const launchBrowser = () => {\n    let launchApp: ILaunchApp | undefined\n    if (launchPutty(service?.typeID)) {\n      launchApp = {\n        port: app.connection?.port,\n        host: app.connection?.host,\n        path,\n        application: 'putty',\n      }\n    }\n    if (launchVNC(service?.typeID)) {\n      launchApp = {\n        port: app.connection?.port,\n        host: app.connection?.host,\n        username: app.connection?.username,\n        path,\n        application: 'vncviewer',\n      }\n    }\n    launchApp ? emit('launch/app', launchApp) : window.open(app.command)\n    closeAll()\n  }\n\n  const onSubmit = (tokens: ILookup<string>) => {\n    setConnection({ ...connection, ...tokens })\n  }\n\n  const closeAll = () => {\n    setLaunch(false)\n    setOpen(false)\n    setOpenApp(false)\n  }\n\n  const LaunchIcon = (\n    <Icon\n      className={app.iconRotate ? css.rotate : ''}\n      name={loading ? 'spinner-third' : app.icon}\n      spin={loading}\n      size={size}\n    />\n  )\n\n  return (\n    <>\n      {menuItem ? (\n        <MenuItem dense onClick={() => setLaunch(true)}>\n          <ListItemIcon>{LaunchIcon}</ListItemIcon>\n          <ListItemText primary={`Launch ${app.title}`} />\n        </MenuItem>\n      ) : (\n        <Tooltip title={`Launch ${app.title}`}>\n          <IconButton onClick={() => setLaunch(true)} disabled={loading}>\n            {LaunchIcon}\n          </IconButton>\n        </Tooltip>\n      )}\n\n      <PromptModal app={app} open={open} onClose={closeAll} onSubmit={onSubmit} />\n\n      <DialogApp openApp={openApp} closeAll={closeAll} link={downloadLink} type={service?.type} />\n    </>\n  )\n}\n\nconst useStyles = makeStyles({\n  rotate: { transform: 'rotate(-45deg)' },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/SessionsButton/SessionsButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionErrorMessage/ConnectionErrorMessage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ComboButton/ComboButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ErrorButton/ErrorButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceListItem/DeviceListItem.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceContextualMenu/ServiceContextualMenu.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LoadMore/LoadMore.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DialogApp/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/OfflineButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ConnectButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DisconnectButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/RestoreButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DialogApp/DialogApp.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ConnectButton/ConnectButton.tsx",["1371","1372"],"import React, { useEffect, useState } from 'react'\nimport { newConnection } from '../../helpers/connectionHelper'\nimport { DynamicButton } from '../DynamicButton'\nimport { Color } from '../../styling'\nimport { Fade } from '@material-ui/core'\nimport { emit } from '../../services/Controller'\nimport heartbeat from '../../services/Heartbeat'\nimport analyticsHelper from '../../helpers/analyticsHelper'\n\nexport type ConnectButtonProps = {\n  connection?: IConnection\n  service?: IService\n  size?: 'icon' | 'medium' | 'small'\n  color?: Color\n  autoConnect?: boolean\n}\n\nexport const ConnectButton: React.FC<ConnectButtonProps> = ({\n  connection,\n  service,\n  size = 'medium',\n  color = 'secondary',\n  autoConnect,\n}) => {\n  const [autoStart, setAutoStart] = useState<boolean>(!!autoConnect)\n  const hidden = connection?.active || !service || service.state !== 'active'\n  const connecting = !!connection?.connecting\n\n  const clickHandler = () => {\n    if (connecting) {\n      analyticsHelper.trackConnect('connectionClosed', service)\n      emit('service/disconnect', connection)\n    } else {\n      analyticsHelper.trackConnect('connectionInitiated', service)\n      emit('service/connect', connection || newConnection(service))\n    }\n  }\n\n  useEffect(() => {\n    if (autoStart && service) {\n      setAutoStart(false)\n      clickHandler()\n    }\n  })\n\n  let title = 'Connect'\n  let disabled = false\n  let variant: 'text' | 'outlined' | 'contained' | undefined\n\n  if (service?.license === 'EVALUATION') {\n    color = 'warning'\n    title = 'Evaluation'\n    variant = 'text'\n  }\n  if (service?.license === 'UNLICENSED') {\n    color = 'grayLight'\n    title = 'Unlicensed'\n    disabled = true\n    variant = 'text'\n  }\n\n  return (\n    <Fade in={!hidden} timeout={600}>\n      <div>\n        <DynamicButton\n          title={connecting ? 'Connecting' : title}\n          icon=\"exchange\"\n          variant={variant}\n          loading={connecting}\n          color={connecting ? undefined : color}\n          size={size}\n          onClick={clickHandler}\n          disabled={disabled}\n        />\n      </div>\n    </Fade>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DisconnectButton/DisconnectButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/OfflineButton/OfflineButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionStateIcon/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceLabel/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionStateIcon/ConnectionStateIcon.tsx",["1373"],"import React from 'react'\nimport { Icon } from '../Icon'\nimport { IconProps } from '../Icon/Icon'\nimport { Tooltip } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles, IconButton, Badge, Box } from '@material-ui/core'\nimport { colors, spacing, Color } from '../../styling'\n\nexport interface ConnectionStateIconProps extends Partial<IconProps> {\n  connection?: IConnection\n  service?: IService\n  device?: IDevice\n  mini?: boolean\n  thisDevice?: boolean\n}\n\nexport function ConnectionStateIcon({\n  connection,\n  service,\n  device,\n  mini,\n  thisDevice,\n  ...props\n}: ConnectionStateIconProps) {\n  const css = useStyles()\n  const history = useHistory()\n\n  let instance = service || device\n  let icon = 'question-circle'\n  let colorName: Color = 'warning'\n  let showQuality = device?.quality === 'POOR' || device?.quality === 'MODERATE'\n  let element: any\n  let state = instance?.state || ''\n\n  if (connection) {\n    if (connection.active) state = 'connected'\n    if (connection.connecting) state = 'connecting'\n  }\n\n  let name: any = state || 'unknown'\n\n  switch (state) {\n    case 'active':\n      icon = 'check-circle'\n      colorName = 'success'\n      name = 'online'\n      break\n    case 'inactive':\n      icon = 'minus-circle'\n      colorName = 'grayLight'\n      name = 'offline'\n      showQuality = false\n      break\n    case 'connected':\n      icon = 'scrubber'\n      colorName = 'primary'\n      break\n    case 'connecting':\n      icon = 'spinner-third'\n      colorName = 'grayLight'\n      showQuality = false\n      break\n    case 'restricted':\n      icon = 'times-circle'\n      colorName = 'danger'\n      showQuality = false\n      break\n    case 'unknown':\n      icon = 'question-circle'\n      colorName = 'grayLight'\n      showQuality = false\n  }\n\n  if (mini)\n    element = (\n      <span className={css.mini}>\n        <span style={{ backgroundColor: colors[colorName] }} />\n      </span>\n    )\n  else if (thisDevice)\n    element = (\n      <span className={css.combo}>\n        <Icon {...props} name=\"hdd\" color=\"grayDarker\" fixedWidth />\n        {!(showQuality && device) && (\n          <sup>\n            <Icon name={icon} color={colorName} spin={state === 'connecting'} size=\"sm\" type=\"regular\" fixedWidth />\n          </sup>\n        )}\n      </span>\n    )\n  else {\n    element = <Icon {...props} name={icon} color={colorName} spin={state === 'connecting'} fixedWidth />\n  }\n\n  if (showQuality && device) {\n    name = (\n      <>\n        <b className={css.capitalize}>{name}</b>\n        <br />\n        <Icon\n          name=\"circle\"\n          color={device.quality === 'POOR' ? 'danger' : 'warning'}\n          size=\"bug\"\n          type=\"solid\"\n          inlineLeft\n        />\n        Internet connectivity {device.quality.toLowerCase()}\n      </>\n    )\n    element = (\n      <IconButton\n        className={css.button}\n        onClick={event => {\n          event.stopPropagation()\n          history.push(`/devices/${device.id}/details`)\n        }}\n      >\n        <Badge\n          variant=\"dot\"\n          color=\"error\"\n          overlap=\"circle\"\n          classes={{ colorError: device.quality === 'POOR' ? css.poor : css.moderate }}\n        >\n          {element}\n        </Badge>\n      </IconButton>\n    )\n  }\n\n  return <Tooltip title={name}>{element}</Tooltip>\n}\n\nconst useStyles = makeStyles({\n  capitalize: { textTransform: 'capitalize' },\n  mini: {\n    '& > span': {\n      height: 4,\n      borderRadius: 4,\n      width: spacing.md,\n      display: 'inline-block',\n      marginLeft: spacing.xxs,\n    },\n  },\n  combo: {\n    '& sup': {\n      position: 'absolute',\n      marginTop: -6,\n      marginLeft: -8,\n      backgroundColor: colors.white,\n      borderRadius: '50%',\n    },\n  },\n  moderate: { backgroundColor: colors.warning },\n  poor: { backgroundColor: colors.danger },\n  button: { margin: `${-spacing.sm}px ${-spacing.sm}px` },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceLabel/DeviceLabel.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DynamicButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/DynamicButton/DynamicButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AddFromNetwork.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/SettingsDisableNetworkItem/SettingsDisableNetworkItem.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceSetupItem/DeviceSetupItem.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/Avatar/Avatar.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LocalhostScanForm/LocalhostScanForm.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/RefreshButton/RefreshButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/RegisterButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/CustomAttributeSettings.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UsersSelect/UsersSelect.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LicensingServiceNotice.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AdminPanelConnect.tsx",["1374","1375","1376"],"import React from 'react'\nimport { Notice } from './Notice'\nimport { Columns } from './Columns'\nimport { ServiceListItem } from './ServiceListItem'\nimport { List, Typography, Divider } from '@material-ui/core'\n\nexport type Props = {\n  device?: IDevice\n  connections?: IConnection[]\n}\n\nexport const AdminPanelConnect: React.FC<Props> = ({ device, connections }) => {\n  const service = device?.services.find(s => s.typeID === 42 || s.port === 29999)\n\n  if (!service) return null\n\n  const messages = [\n    'This device has additional options that can be accessed remotely via its admin panel.',\n    \"Access this device's full configuration options by connecting through its admin panel.\",\n  ]\n  const message = messages[Math.floor(Math.random() * 2)]\n\n  return (\n    <>\n      <List>\n        <ServiceListItem\n          connection={connections?.find(c => c.id === service.id)}\n          service={service}\n          secondary={message}\n          indent\n        />\n      </List>\n      <Divider />\n    </>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceListEmpty/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/FilterDrawerContent/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/EditButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/UsersSelect/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LanShareSelect/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ForgetButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UnauthorizedPage/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AutoStartSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineTemplateSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceConnected/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ProxySetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/HostSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/NameSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/PortSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceList/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/UnregisterDeviceButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/FilterDrawerContent/FilterDrawerContent.tsx",["1377"],"import React, { useState, useEffect } from 'react'\nimport { state as defaults } from '../../models/devices'\nimport { ApplicationState, Dispatch } from '../../store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { makeStyles, List, Button } from '@material-ui/core'\nimport { FilterSelector } from './FilterSelector'\nimport { CloseButton } from '../../buttons/CloseButton'\nimport { spacing } from '../../styling'\nimport classnames from 'classnames'\n\ntype IValues = {\n  sort: typeof defaults.sort\n  filter: typeof defaults.filter\n  owner: typeof defaults.owner\n}\n\nconst sortFilters = [\n  { value: 'name', filterName: 'Name' },\n  { value: 'state', filterName: 'State' },\n  { value: 'attributes.$remoteit.color', filterName: 'Color' },\n]\nconst deviceFilters = [\n  { value: 'all', filterName: 'All' },\n  { value: 'active', filterName: 'Online' },\n  { value: 'inactive', filterName: 'Offline' },\n]\nconst ownerFilters = [\n  { value: 'all', filterName: 'All' },\n  { value: 'me', filterName: 'Me' },\n  { value: 'others', filterName: 'Others' },\n]\n\nexport const FilterDrawerContent: React.FC = () => {\n  const { state, open } = useSelector((state: ApplicationState) => ({\n    state: {\n      sort: state.devices.sort,\n      filter: state.devices.filter,\n      owner: state.devices.owner,\n    },\n    open: state.ui.filterMenu,\n  }))\n  const { ui, devices } = useDispatch<Dispatch>()\n  const [values, setValues] = useState<IValues>(state)\n  const css = useStyles()\n\n  const handleClear = () => {\n    setValues({\n      filter: defaults.filter,\n      sort: defaults.sort,\n      owner: defaults.owner,\n    })\n  }\n\n  useEffect(() => {\n    if (state.sort !== values.sort || state.filter !== values.filter || state.owner !== values.owner) {\n      devices.set({ ...values, from: defaults.from })\n      devices.fetch()\n    }\n  }, [values])\n\n  return (\n    <div className={classnames(css.drawer, open || css.drawerClose)}>\n      <div className={css.drawerHeader}>\n        <Button size=\"small\" onClick={handleClear}>\n          clear\n        </Button>\n        <CloseButton onClick={() => ui.set({ filterMenu: false })} />\n      </div>\n      <List dense className={css.list}>\n        <FilterSelector\n          subtitle=\"Sort\"\n          icon={values.sort.substr(0, 1) === '-' ? 'sort-amount-up' : 'sort-amount-down'}\n          value={values.sort}\n          onSelect={value => {\n            if (values.sort === value) value = value.substr(0, 1) === '-' ? value : `-${value}`\n            setValues({ ...values, sort: value })\n          }}\n          filterList={sortFilters}\n        />\n        <FilterSelector\n          subtitle=\"State\"\n          icon=\"check\"\n          value={values.filter}\n          onSelect={value => setValues({ ...values, filter: value })}\n          filterList={deviceFilters}\n        />\n        <FilterSelector\n          subtitle=\"Owner\"\n          icon=\"check\"\n          value={values.owner}\n          onSelect={value => setValues({ ...values, owner: value })}\n          filterList={ownerFilters}\n        />\n      </List>\n    </div>\n  )\n}\n\nconst useStyles = makeStyles({\n  drawer: {\n    maxWidth: 180,\n    transition: 'max-width 200ms ease-out',\n    '& > *': { minWidth: 180 },\n  },\n  drawerClose: {\n    maxWidth: 0,\n  },\n  drawerHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  list: {\n    padding: 0,\n    '& > .MuiListItem-dense': { paddingTop: 0, paddingBottom: 0, paddingLeft: 0 },\n    '& > .MuiListItem-dense + .MuiDivider-root': { marginTop: spacing.sm },\n  },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceListEmpty/DeviceListEmpty.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/EditButton/EditButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ForgetButton/ForgetButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/pages/UnauthorizedPage/UnauthorizedPage.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/LanShareSelect/LanShareSelect.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineTextFieldSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceConnected/ServiceConnected.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ProxySetting/ProxySetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/HostSetting/HostSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/NameSetting/NameSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ServiceList/ServiceList.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/PortSetting/PortSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/UnregisterDeviceButton/UnregisterDeviceButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/FilterDrawerContent/FilterSelector.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineTextFieldSetting/InlineTextFieldSetting.tsx",["1378"],"import React, { useEffect, useState, useRef } from 'react'\nimport { TextField } from '@material-ui/core'\nimport { InlineSetting } from '../InlineSetting'\n\ntype Props = {\n  value?: string | number\n  label: string | JSX.Element\n  icon?: JSX.Element\n  actionIcon?: JSX.Element\n  displayValue?: string | number\n  filter?: RegExp\n  disabled?: boolean\n  resetValue?: string | number\n  maxLength?: number\n  onError?: (value: string | undefined) => void\n  onSave: (value: string | number) => void\n}\n\nexport const InlineTextFieldSetting: React.FC<Props> = ({\n  label,\n  filter,\n  value = '',\n  resetValue = '',\n  maxLength,\n  onError,\n  onSave,\n  ...props\n}) => {\n  const fieldRef = useRef<HTMLInputElement>(null)\n  const [editValue, setEditValue] = useState<string | number>('')\n  const [error, setError] = useState<string>()\n\n  useEffect(() => {\n    onError && onError(error)\n  }, [error])\n\n  return (\n    <InlineSetting\n      {...props}\n      label={label}\n      value={value}\n      fieldRef={fieldRef}\n      resetValue={resetValue}\n      onResetClick={() => setEditValue(resetValue)}\n      onSubmit={() => onSave(editValue)}\n      onCancel={() => setEditValue(value)}\n      onShowEdit={() => setEditValue(value)}\n    >\n      <TextField\n        autoFocus\n        multiline={value.toString().length > 30}\n        inputRef={fieldRef}\n        label={label}\n        error={!!error}\n        value={editValue}\n        variant=\"filled\"\n        helperText={error}\n        onChange={event => {\n          let { value } = event.target\n          value = filter ? value.replace(filter, '') : value\n          if (maxLength && value.length > maxLength) {\n            setError(`Cannot exceed ${maxLength} characters.`)\n            value = value.substring(0, maxLength)\n          } else {\n            setError(undefined)\n          }\n          setEditValue(value)\n        }}\n      />\n    </InlineSetting>\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CloseButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineSelectSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/CloseButton/CloseButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineSelectSetting/InlineSelectSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/AutoStartSetting/AutoStartSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineTemplateSetting/InlineTemplateSetting.tsx",["1379","1380"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { InlineTextFieldSetting } from '../InlineTextFieldSetting'\nimport { ApplicationState } from '../../store'\nimport { Application } from '../../shared/applications'\nimport { useApplication } from '../../hooks/useApplication'\nimport { newConnection, setConnection } from '../../helpers/connectionHelper'\nimport { CopyButton } from '../../buttons/CopyButton'\nimport { Tooltip } from '@material-ui/core'\nimport { Icon } from '../Icon'\n\ntype Props = { service: IService; connection?: IConnection; context: Application['context'] }\n\nexport const InlineTemplateSetting: React.FC<Props> = ({ service, connection, context }) => {\n  const freePort = useSelector((state: ApplicationState) => state.backend.freePort)\n  if (!connection) connection = newConnection(service, freePort)\n  const app = useApplication(context, service, connection)\n\n  return (\n    <InlineTextFieldSetting\n      value={app.template}\n      displayValue={app.command}\n      actionIcon={<CopyButton connection={connection} service={service} context={context} show />}\n      label={\n        <>\n          {app.contextTitle}\n          <Tooltip title={`Replacement tokens: ${app.allTokens.join(', ')}`} placement=\"top\" arrow>\n            <span style={{ zIndex: 10 }}>\n              <Icon name=\"question-circle\" size=\"sm\" type=\"regular\" inline />\n            </span>\n          </Tooltip>\n        </>\n      }\n      resetValue={app.template}\n      onSave={template =>\n        connection &&\n        setConnection({\n          ...connection,\n          [app.templateKey]: template.toString(),\n        })\n      }\n    />\n  )\n}\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/InlineSetting/InlineSetting.tsx",["1381"],"import React, { useEffect, useState } from 'react'\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  InputLabel,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core'\nimport { colors, spacing, fontSizes } from '../../styling'\nimport { EditButton } from '../../buttons/EditButton'\nimport { ResetButton } from '../../buttons/ResetButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Title } from '../Title'\nimport { Icon } from '../Icon'\n\ntype Props = {\n  value?: string | number\n  label: JSX.Element | string\n  icon?: JSX.Element\n  actionIcon?: JSX.Element\n  displayValue?: string | number\n  disabled?: boolean\n  resetValue?: string | number\n  fieldRef: React.RefObject<HTMLInputElement>\n  onSubmit: () => void\n  onResetClick: () => void\n  onCancel: () => void\n  onShowEdit: () => void\n}\n\nexport const InlineSetting: React.FC<Props> = ({\n  label,\n  icon,\n  value = '',\n  actionIcon,\n  displayValue,\n  disabled,\n  resetValue,\n  onSubmit,\n  fieldRef,\n  onResetClick,\n  onCancel,\n  onShowEdit,\n  children,\n}) => {\n  const css = useStyles()\n  const [focusTimeout, setFocusTimeout] = useState<NodeJS.Timeout>()\n  const [edit, setEdit] = useState<boolean>(false)\n\n  function triggerEdit() {\n    setEdit(true)\n    onShowEdit()\n  }\n\n  function cancelBlur() {\n    if (focusTimeout) {\n      clearTimeout(focusTimeout)\n      setFocusTimeout(undefined)\n    }\n  }\n\n  useEffect(() => {\n    if (!fieldRef?.current) return\n    if (edit) {\n      fieldRef.current.focus()\n      fieldRef.current.onblur = () => {\n        setFocusTimeout(setTimeout(() => setEdit(false), 200))\n      }\n    }\n  }, [edit])\n\n  if (edit)\n    return (\n      <ListItem className={css.active} dense>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <form\n          className={css.form}\n          onSubmit={e => {\n            e.preventDefault()\n            onSubmit()\n            fieldRef.current?.blur()\n          }}\n        >\n          {children}\n          {resetValue != null && (\n            <ResetButton\n              onClick={() => {\n                cancelBlur()\n                onResetClick()\n                fieldRef.current?.focus()\n              }}\n            />\n          )}\n          <ListItemSecondaryAction>\n            <Tooltip title=\"Cancel\">\n              <IconButton onClick={onCancel}>\n                <Icon name=\"times\" size=\"md\" fixedWidth />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Save\">\n              <IconButton color=\"primary\" type=\"submit\">\n                <Icon name=\"check\" size=\"md\" fixedWidth />\n              </IconButton>\n            </Tooltip>\n          </ListItemSecondaryAction>\n        </form>\n      </ListItem>\n    )\n\n  return (\n    <>\n      {actionIcon && <span className={css.action}> {actionIcon}</span>}\n      <ListItem button onClick={triggerEdit} disabled={disabled} style={{ opacity: 1 }} dense>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <Title>\n          <ListItemText>\n            <InputLabel shrink>{label}</InputLabel>\n            {displayValue || value || '–'}\n          </ListItemText>\n        </Title>\n        {!disabled && (\n          <ListItemSecondaryAction className=\"hidden\">\n            <EditButton onClick={triggerEdit} />\n          </ListItemSecondaryAction>\n        )}\n      </ListItem>\n    </>\n  )\n}\n\nconst useStyles = makeStyles({\n  form: {\n    display: 'flex',\n    width: '100%',\n    marginRight: 120,\n    alignItems: 'center',\n    '& .MuiFormControl-root': { flexGrow: 1, margin: `0 ${spacing.md}px -1px ${spacing.sm}px` },\n    '& .MuiFilledInput-input': { paddingTop: 22, paddingBottom: 10, fontSize: 14 },\n    '& .MuiFilledInput-multiline': { paddingTop: 0, paddingBottom: 0 },\n    '& .MuiTextField-root': { marginLeft: -12 },\n    '& .select': { marginLeft: 0, marginTop: 8, height: 40, '& .MuiInput-root': { marginTop: 9 } }, // paddingTop: 3, marginTop: -6 },\n    '& .MuiSelect-select': { fontSize: fontSizes.base, paddingTop: 3, paddingBottom: 4 },\n  },\n  active: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    backgroundColor: colors.primaryHighlight,\n  },\n  action: {\n    position: 'absolute',\n    zIndex: 1,\n    right: 'auto',\n    left: spacing.md,\n    marginTop: spacing.xs,\n  },\n})\n","/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceNameSetting/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/AddServiceButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ShareSaveActions/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/DeviceNameSetting/DeviceNameSetting.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/AddServiceButton/AddServiceButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ShareSaveActions/ShareSaveActions.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ResetButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/ResetButton/ResetButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/LabelButton/index.ts",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/buttons/LabelButton/LabelButton.tsx",[],"/Users/mauriciovillalba/project/remote/desktop/frontend/src/components/ConnectionLogSetting.tsx",[],{"ruleId":"1382","replacedBy":"1383"},{"ruleId":"1384","replacedBy":"1385"},{"ruleId":"1386","severity":1,"message":"1387","line":88,"column":1,"nodeType":"1388","endLine":88,"endColumn":52},{"ruleId":"1389","severity":1,"message":"1390","line":39,"column":74,"nodeType":"1391","messageId":"1392","endLine":39,"endColumn":75,"suggestions":"1393"},{"ruleId":"1389","severity":1,"message":"1390","line":39,"column":128,"nodeType":"1391","messageId":"1392","endLine":39,"endColumn":129,"suggestions":"1394"},{"ruleId":"1395","severity":1,"message":"1396","line":324,"column":27,"nodeType":"1397","messageId":"1398","endLine":324,"endColumn":29},{"ruleId":"1399","severity":1,"message":"1400","line":81,"column":9,"nodeType":"1401","messageId":"1402","endLine":81,"endColumn":11},{"ruleId":"1399","severity":1,"message":"1403","line":86,"column":13,"nodeType":"1401","messageId":"1402","endLine":86,"endColumn":21},{"ruleId":"1399","severity":1,"message":"1404","line":138,"column":9,"nodeType":"1401","messageId":"1402","endLine":138,"endColumn":18},{"ruleId":"1399","severity":1,"message":"1405","line":139,"column":9,"nodeType":"1401","messageId":"1402","endLine":139,"endColumn":16},{"ruleId":"1399","severity":1,"message":"1403","line":140,"column":9,"nodeType":"1401","messageId":"1402","endLine":140,"endColumn":17},{"ruleId":"1399","severity":1,"message":"1406","line":148,"column":15,"nodeType":"1401","messageId":"1402","endLine":148,"endColumn":23},{"ruleId":"1395","severity":1,"message":"1407","line":181,"column":26,"nodeType":"1397","messageId":"1398","endLine":181,"endColumn":28},{"ruleId":"1395","severity":1,"message":"1408","line":224,"column":26,"nodeType":"1397","messageId":"1409","endLine":224,"endColumn":28},{"ruleId":"1395","severity":1,"message":"1408","line":227,"column":42,"nodeType":"1397","messageId":"1409","endLine":227,"endColumn":44},{"ruleId":"1395","severity":1,"message":"1410","line":187,"column":50,"nodeType":"1397","messageId":"1409","endLine":187,"endColumn":52},{"ruleId":"1395","severity":1,"message":"1410","line":212,"column":50,"nodeType":"1397","messageId":"1409","endLine":212,"endColumn":52},{"ruleId":"1389","severity":1,"message":"1411","line":25,"column":32,"nodeType":"1391","messageId":"1392","endLine":25,"endColumn":33,"suggestions":"1412"},{"ruleId":"1413","severity":1,"message":"1414","line":49,"column":6,"nodeType":"1415","endLine":49,"endColumn":16,"suggestions":"1416"},{"ruleId":"1389","severity":1,"message":"1417","line":19,"column":29,"nodeType":"1391","messageId":"1392","endLine":19,"endColumn":30,"suggestions":"1418"},{"ruleId":"1389","severity":1,"message":"1417","line":19,"column":45,"nodeType":"1391","messageId":"1392","endLine":19,"endColumn":46,"suggestions":"1419"},{"ruleId":"1420","severity":1,"message":"1421","line":52,"column":38,"nodeType":"1422","messageId":"1423","endLine":52,"endColumn":40},{"ruleId":"1413","severity":1,"message":"1424","line":55,"column":6,"nodeType":"1415","endLine":55,"endColumn":8,"suggestions":"1425"},{"ruleId":"1413","severity":1,"message":"1426","line":43,"column":6,"nodeType":"1415","endLine":43,"endColumn":8,"suggestions":"1427"},{"ruleId":"1399","severity":1,"message":"1428","line":2,"column":10,"nodeType":"1401","messageId":"1402","endLine":2,"endColumn":18},{"ruleId":"1413","severity":1,"message":"1429","line":15,"column":6,"nodeType":"1415","endLine":15,"endColumn":19,"suggestions":"1430"},{"ruleId":"1413","severity":1,"message":"1431","line":55,"column":6,"nodeType":"1415","endLine":55,"endColumn":24,"suggestions":"1432"},{"ruleId":"1413","severity":1,"message":"1433","line":60,"column":6,"nodeType":"1415","endLine":60,"endColumn":8,"suggestions":"1434"},{"ruleId":"1413","severity":1,"message":"1435","line":132,"column":6,"nodeType":"1415","endLine":132,"endColumn":28,"suggestions":"1436"},{"ruleId":"1413","severity":1,"message":"1437","line":64,"column":6,"nodeType":"1415","endLine":64,"endColumn":37,"suggestions":"1438"},{"ruleId":"1413","severity":1,"message":"1439","line":45,"column":6,"nodeType":"1415","endLine":45,"endColumn":16,"suggestions":"1440"},{"ruleId":"1399","severity":1,"message":"1441","line":48,"column":23,"nodeType":"1401","messageId":"1402","endLine":48,"endColumn":37},{"ruleId":"1399","severity":1,"message":"1442","line":51,"column":9,"nodeType":"1401","messageId":"1402","endLine":51,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1426","line":37,"column":6,"nodeType":"1415","endLine":37,"endColumn":8,"suggestions":"1443"},{"ruleId":"1399","severity":1,"message":"1444","line":27,"column":14,"nodeType":"1401","messageId":"1402","endLine":27,"endColumn":15},{"ruleId":"1413","severity":1,"message":"1445","line":55,"column":6,"nodeType":"1415","endLine":55,"endColumn":31,"suggestions":"1446"},{"ruleId":"1413","severity":1,"message":"1447","line":61,"column":6,"nodeType":"1415","endLine":61,"endColumn":8,"suggestions":"1448"},{"ruleId":"1413","severity":1,"message":"1449","line":47,"column":6,"nodeType":"1415","endLine":47,"endColumn":15,"suggestions":"1450"},{"ruleId":"1413","severity":1,"message":"1451","line":29,"column":6,"nodeType":"1415","endLine":29,"endColumn":14,"suggestions":"1452"},{"ruleId":"1399","severity":1,"message":"1453","line":2,"column":22,"nodeType":"1401","messageId":"1402","endLine":2,"endColumn":32},{"ruleId":"1454","severity":1,"message":"1455","line":34,"column":5,"nodeType":"1456","messageId":"1457","endLine":35,"endColumn":21},{"ruleId":"1454","severity":1,"message":"1455","line":36,"column":5,"nodeType":"1456","messageId":"1457","endLine":37,"endColumn":21},{"ruleId":"1399","severity":1,"message":"1458","line":2,"column":27,"nodeType":"1401","messageId":"1402","endLine":2,"endColumn":34},{"ruleId":"1413","severity":1,"message":"1459","line":92,"column":6,"nodeType":"1415","endLine":92,"endColumn":34,"suggestions":"1460"},{"ruleId":"1399","severity":1,"message":"1461","line":13,"column":8,"nodeType":"1401","messageId":"1402","endLine":13,"endColumn":13},{"ruleId":"1399","severity":1,"message":"1462","line":77,"column":10,"nodeType":"1401","messageId":"1402","endLine":77,"endColumn":30},{"ruleId":"1399","severity":1,"message":"1463","line":92,"column":11,"nodeType":"1401","messageId":"1402","endLine":92,"endColumn":19},{"ruleId":"1420","severity":1,"message":"1421","line":154,"column":15,"nodeType":"1422","messageId":"1423","endLine":154,"endColumn":17},{"ruleId":"1399","severity":1,"message":"1464","line":178,"column":21,"nodeType":"1401","messageId":"1402","endLine":178,"endColumn":28},{"ruleId":"1399","severity":1,"message":"1465","line":10,"column":39,"nodeType":"1401","messageId":"1402","endLine":10,"endColumn":46},{"ruleId":"1399","severity":1,"message":"1466","line":10,"column":55,"nodeType":"1401","messageId":"1402","endLine":10,"endColumn":62},{"ruleId":"1399","severity":1,"message":"1467","line":30,"column":7,"nodeType":"1401","messageId":"1402","endLine":30,"endColumn":28},{"ruleId":"1399","severity":1,"message":"1468","line":51,"column":25,"nodeType":"1401","messageId":"1402","endLine":51,"endColumn":40},{"ruleId":"1399","severity":1,"message":"1469","line":142,"column":19,"nodeType":"1401","messageId":"1402","endLine":142,"endColumn":25},{"ruleId":"1399","severity":1,"message":"1470","line":143,"column":19,"nodeType":"1401","messageId":"1402","endLine":143,"endColumn":47},{"ruleId":"1413","severity":1,"message":"1471","line":24,"column":6,"nodeType":"1415","endLine":24,"endColumn":33,"suggestions":"1472"},{"ruleId":"1395","severity":1,"message":"1408","line":59,"column":71,"nodeType":"1473","messageId":"1474","endLine":59,"endColumn":77},{"ruleId":"1413","severity":1,"message":"1475","line":22,"column":9,"nodeType":"1476","endLine":22,"endColumn":45},{"ruleId":"1413","severity":1,"message":"1477","line":43,"column":6,"nodeType":"1415","endLine":43,"endColumn":8,"suggestions":"1478"},{"ruleId":"1399","severity":1,"message":"1479","line":2,"column":38,"nodeType":"1401","messageId":"1402","endLine":2,"endColumn":48},{"ruleId":"1413","severity":1,"message":"1480","line":54,"column":6,"nodeType":"1415","endLine":54,"endColumn":35,"suggestions":"1481"},{"ruleId":"1399","severity":1,"message":"1482","line":7,"column":8,"nodeType":"1401","messageId":"1402","endLine":7,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1483","line":39,"column":3,"nodeType":"1401","endLine":39,"endColumn":12,"suggestions":"1484"},{"ruleId":"1399","severity":1,"message":"1485","line":6,"column":41,"nodeType":"1401","messageId":"1402","endLine":6,"endColumn":44},{"ruleId":"1399","severity":1,"message":"1486","line":2,"column":10,"nodeType":"1401","messageId":"1402","endLine":2,"endColumn":16},{"ruleId":"1399","severity":1,"message":"1487","line":3,"column":10,"nodeType":"1401","messageId":"1402","endLine":3,"endColumn":17},{"ruleId":"1399","severity":1,"message":"1453","line":5,"column":16,"nodeType":"1401","messageId":"1402","endLine":5,"endColumn":26},{"ruleId":"1413","severity":1,"message":"1488","line":77,"column":6,"nodeType":"1415","endLine":77,"endColumn":14,"suggestions":"1489"},{"ruleId":"1413","severity":1,"message":"1490","line":35,"column":6,"nodeType":"1415","endLine":35,"endColumn":13,"suggestions":"1491"},{"ruleId":"1399","severity":1,"message":"1492","line":2,"column":10,"nodeType":"1401","messageId":"1402","endLine":2,"endColumn":21},{"ruleId":"1399","severity":1,"message":"1493","line":4,"column":10,"nodeType":"1401","messageId":"1402","endLine":4,"endColumn":26},{"ruleId":"1413","severity":1,"message":"1494","line":72,"column":6,"nodeType":"1415","endLine":72,"endColumn":12,"suggestions":"1495"},"no-native-reassign",["1496"],"no-negated-in-lhs",["1497"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["1498","1499"],["1500","1501"],"array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'timeZone' is assigned a value but never used.","'startDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","'newState' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.find() expects a return value from arrow function.","Unnecessary escape character: \\[.",["1502","1503"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'ui'. Either include them or remove the dependency array.","ArrayExpression",["1504"],"Unnecessary escape character: \\..",["1505","1506"],["1507","1508"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'devices.length', 'fetchAnalytics', 'fetching', and 'totalDevices'. Either include them or remove the dependency array.",["1509"],"React Hook useEffect has a missing dependency: 'applicationTypes'. Either include it or remove the dependency array.",["1510"],"'AuthUser' is defined but never used.","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["1511"],"React Hook useEffect has a missing dependency: 'handleChangeScripting'. Either include it or remove the dependency array.",["1512"],"React Hook useEffect has missing dependencies: 'handleChangeServices' and 'location.pathname'. Either include them or remove the dependency array.",["1513"],"React Hook useEffect has a missing dependency: 'onHasIndetermante'. Either include it or remove the dependency array. If 'onHasIndetermante' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1514"],"React Hook useEffect has missing dependencies: 'links.home' and 'remoteUI'. Either include them or remove the dependency array.",["1515"],"React Hook useEffect has a missing dependency: 'fetchLogs'. Either include it or remove the dependency array.",["1516"],"'setPlanUpgrade' is assigned a value but never used.","'freePlan' is assigned a value but never used.",["1517"],"'_' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetch' and 'fetching'. Either include them or remove the dependency array.",["1518"],"React Hook useEffect has missing dependencies: 'connection.deviceID', 'device', and 'devices'. Either include them or remove the dependency array.",["1519"],"React Hook useEffect has missing dependencies: 'hostname' and 'nameBlacklist'. Either include them or remove the dependency array.",["1520"],"React Hook useEffect has missing dependencies: 'history' and 'links.edit'. Either include them or remove the dependency array.",["1521"],"'Typography' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Spacing' is defined but never used.","React Hook useEffect has missing dependencies: 'checkPort', 'setupAdded', and 'ui'. Either include them or remove the dependency array.",["1522"],"'Paper' is defined but never used.","'descendingComparator' is defined but never used.","'HeadCell' is defined but never used.","'labelId' is assigned a value but never used.","'maxDate' is defined but never used.","'minDate' is defined but never used.","'positionIndicatorSize' is assigned a value but never used.","'containerBounds' is assigned a value but never used.","'offset' is assigned a value but never used.","'toolTipData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'set'. Either include it or remove the dependency array.",["1523"],"ReturnStatement","expectedReturnValue","The 'selected' logical expression could make the dependencies of useCallback Hook (at line 35) change on every render. To fix this, wrap the initialization of 'selected' in its own useMemo() Hook.","VariableDeclarator","React Hook React.useEffect has missing dependencies: 'attributes' and 'onUpdate'. Either include them or remove the dependency array. If 'onUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1524"],"'makeStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'launchBrowser' and 'ui'. Either include them or remove the dependency array.",["1525"],"'heartbeat' is defined but never used.","React Hook useEffect contains a call to 'setAutoStart'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [autoStart, service, clickHandler] as a second argument to the useEffect Hook.",["1526"],"'Box' is defined but never used.","'Notice' is defined but never used.","'Columns' is defined but never used.","React Hook useEffect has missing dependencies: 'devices', 'state.filter', 'state.owner', 'state.platform', and 'state.sort'. Either include them or remove the dependency array.",["1527"],"React Hook useEffect has a missing dependency: 'onError'. Either include it or remove the dependency array. If 'onError' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1528"],"'useSelector' is defined but never used.","'ApplicationState' is defined but never used.","React Hook useEffect has a missing dependency: 'fieldRef'. Either include it or remove the dependency array.",["1529"],"no-global-assign","no-unsafe-negation",{"messageId":"1530","fix":"1531","desc":"1532"},{"messageId":"1533","fix":"1534","desc":"1535"},{"messageId":"1530","fix":"1536","desc":"1532"},{"messageId":"1533","fix":"1537","desc":"1535"},{"messageId":"1530","fix":"1538","desc":"1532"},{"messageId":"1533","fix":"1539","desc":"1535"},{"desc":"1540","fix":"1541"},{"messageId":"1530","fix":"1542","desc":"1532"},{"messageId":"1533","fix":"1543","desc":"1535"},{"messageId":"1530","fix":"1544","desc":"1532"},{"messageId":"1533","fix":"1545","desc":"1535"},{"desc":"1546","fix":"1547"},{"desc":"1548","fix":"1549"},{"desc":"1550","fix":"1551"},{"desc":"1552","fix":"1553"},{"desc":"1554","fix":"1555"},{"desc":"1556","fix":"1557"},{"desc":"1558","fix":"1559"},{"desc":"1560","fix":"1561"},{"desc":"1548","fix":"1562"},{"desc":"1563","fix":"1564"},{"desc":"1565","fix":"1566"},{"desc":"1567","fix":"1568"},{"desc":"1569","fix":"1570"},{"desc":"1571","fix":"1572"},{"desc":"1573","fix":"1574"},{"desc":"1575","fix":"1576"},{"desc":"1577","fix":"1578"},{"desc":"1579","fix":"1580"},{"desc":"1581","fix":"1582"},{"desc":"1583","fix":"1584"},{"desc":"1585","fix":"1586"},"removeEscape",{"range":"1587","text":"1588"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1589","text":"1590"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1591","text":"1588"},{"range":"1592","text":"1590"},{"range":"1593","text":"1588"},{"range":"1594","text":"1590"},"Update the dependencies array to be: [history, redirect, ui]",{"range":"1595","text":"1596"},{"range":"1597","text":"1588"},{"range":"1598","text":"1590"},{"range":"1599","text":"1588"},{"range":"1600","text":"1590"},"Update the dependencies array to be: [devices.length, fetchAnalytics, fetching, totalDevices]",{"range":"1601","text":"1602"},"Update the dependencies array to be: [applicationTypes]",{"range":"1603","text":"1604"},"Update the dependencies array to be: [auth, successUser]",{"range":"1605","text":"1606"},"Update the dependencies array to be: [handleChangeScripting, hasIndeterminate]",{"range":"1607","text":"1608"},"Update the dependencies array to be: [handleChangeServices, location.pathname]",{"range":"1609","text":"1610"},"Update the dependencies array to be: [onHasIndetermante, serviceIndeterminate]",{"range":"1611","text":"1612"},"Update the dependencies array to be: [device, targetDevice, history, remoteUI, links.home]",{"range":"1613","text":"1614"},"Update the dependencies array to be: [deviceID, fetchLogs]",{"range":"1615","text":"1616"},{"range":"1617","text":"1604"},"Update the dependencies array to be: [device, loaded, history, fetching, fetch]",{"range":"1618","text":"1619"},"Update the dependencies array to be: [connection.deviceID, device, devices]",{"range":"1620","text":"1621"},"Update the dependencies array to be: [hostname, loading, nameBlacklist]",{"range":"1622","text":"1623"},"Update the dependencies array to be: [device, history, links.edit]",{"range":"1624","text":"1625"},"Update the dependencies array to be: [form.port, form.hostname, checkPort, setupAdded, ui]",{"range":"1626","text":"1627"},"Update the dependencies array to be: [eventsUrl, set, shouldDownload]",{"range":"1628","text":"1629"},"Update the dependencies array to be: [attributes, onUpdate]",{"range":"1630","text":"1631"},"Update the dependencies array to be: [requireInstall, launch, app, launchBrowser, ui]",{"range":"1632","text":"1633"},"Add dependencies array: [autoStart, service, clickHandler]",{"range":"1634","text":"1635"},"Update the dependencies array to be: [devices, state.filter, state.owner, state.platform, state.sort, values]",{"range":"1636","text":"1637"},"Update the dependencies array to be: [error, onError]",{"range":"1638","text":"1639"},"Update the dependencies array to be: [edit, fieldRef]",{"range":"1640","text":"1641"},[2229,2230],"",[2229,2229],"\\",[2283,2284],[2283,2283],[645,646],[645,645],[2293,2303],"[history, redirect, ui]",[628,629],[628,628],[644,645],[644,644],[2068,2070],"[devices.length, fetchAnalytics, fetching, totalDevices]",[1829,1831],"[applicationTypes]",[628,641],"[auth, successUser]",[1524,1542],"[handleChangeScripting, hasIndeterminate]",[1691,1693],"[handleChangeServices, location.pathname]",[3731,3753],"[onHasIndetermante, serviceIndeterminate]",[2678,2709],"[device, targetDevice, history, remoteUI, links.home]",[1484,1494],"[deviceID, fetchLogs]",[1543,1545],[2470,2495],"[device, loaded, history, fetching, fetch]",[3180,3182],"[connection.deviceID, device, devices]",[2050,2059],"[hostname, loading, nameBlacklist]",[1207,1215],"[device, history, links.edit]",[3280,3308],"[form.port, form.hostname, checkPort, setupAdded, ui]",[777,804],"[eventsUrl, set, shouldDownload]",[1356,1358],"[attributes, onUpdate]",[2026,2055],"[requireInstall, launch, app, launchBrowser, ui]",[1339,1339],", [autoStart, service, clickHandler]",[2315,2323],"[devices, state.filter, state.owner, state.platform, state.sort, values]",[874,881],"[error, onError]",[1623,1629],"[edit, fieldRef]"]