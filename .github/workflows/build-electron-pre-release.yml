name: Build / Electron Pre-Release

on: 
  workflow_dispatch:
    inputs:
      brand:
        description: 'Brand to build (remoteit or cachengo)'
        required: false
        type: choice
        default: 'remoteit'
        options:
          - remoteit
          - cachengo

defaults:
  run:
    shell: bash

env:
  CI: ''
  FONT_AWESOME_AUTH_TOKEN: ${{ secrets.FONT_AWESOME_AUTH_TOKEN }}
  SKIP_SIGNING: true
  BRAND: ${{ inputs.brand || 'remoteit' }}

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=v$VERSION" >> $GITHUB_OUTPUT

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set npm version
        run: npm install -g npm@10

      - name: Authenticate with fontawesome NPM repo
        run: |
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FONT_AWESOME_AUTH_TOKEN }}

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build and install dependencies
        run: |
          npm install
          npm run build-frontend
          npm run build-backend
          cd electron
          npm install ../backend/dist/remoteit-headless.tgz

      - name: Build Electron app
        run: |
          cd electron
          npm install
          npm run build
        env:
          GH_TOKEN: ${{ secrets.github_token }}
          CSC_LINK: ${{ secrets.mac_certs }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          files: electron/dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
