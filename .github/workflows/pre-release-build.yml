name: Build/pre-release

on: workflow_dispatch

defaults:
  run:
    shell: bash

env:
  CI: ''
  FONT_AWESOME_AUTH_TOKEN: ${{ secrets.FONT_AWESOME_AUTH_TOKEN }}
  SKIP_SIGNING: true

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      # fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set npm version
        run: npm install -g npm@10

      - name: Authenticate with fontawesome NPM repo
        run: |
          echo "pwd=${PWD}"
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FONT_AWESOME_AUTH_TOKEN }}

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build and install dependencies
        run: |
          npm install
          npm run build-frontend

          echo "Current directory before running build-backend:"
          pwd
          echo "Listing files in current directory:"
          ls -la

          npm run build-backend

          echo "Current directory after running build-backend:"
          pwd
          echo "Listing files in current directory:"
          ls -la

          cd electron
          echo "Current directory in electron folder:"
          pwd
          echo "Listing files in electron directory:"
          ls -la

          echo "Listing remoteit-headless from ../backend/dist:"
          ls -la ../backend/dist

          npm install ../backend/dist/remoteit-headless.tgz

      - name: Build/release Electron app
        uses: mebays/action-electron-builder@node-16
        with:
          package_root: electron
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}

          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
