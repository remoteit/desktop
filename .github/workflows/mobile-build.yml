name: Build/mobile

on: workflow_dispatch

defaults:
  run:
    shell: bash

# env:
  # CI: ''
  # SKIP_SIGNING: true

jobs:
  build-mobile:
    runs-on: ${{ matrix.os }}

    strategy:
      # fail-fast: false
      matrix:
        os: [macos-latest]

    steps:
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set npm version
        run: npm install -g npm@10

      - name: Authenticate with fontawesome NPM repo
        run: |
          echo "pwd=${PWD}"
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FONT_AWESOME_AUTH_TOKEN }}

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Install root dependencies
        run: npm install

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE: ${{ secrets.APPLE_MOBILE_CERT }}
          P12_PASSWORD: ${{ secrets.APPLE_MOBILE_CERT_PASSWORD }}
          PROVISION_PROFILE_DEV_BASE64: ${{ secrets.PROVISION_PROFILE_DEV_BASE64 }}
          PROVISION_PROFILE_DIST_BASE64: ${{ secrets.PROVISION_PROFILE_DIST_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.MAC_CERTS_PASSWORD }}
          APPLE_MOBILE_APP_PASSWORD: ${{ secrets.APPLE_MOBILE_APP_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH_DEV=$RUNNER_TEMP/6f3f2659-b6b4-428f-be47-947e8d8f26cf.mobileprovision
          PP_PATH_DIST=$RUNNER_TEMP/c2e4a68a-e7e2-48f3-a101-3849682530a8.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          BUILD_PATH=$RUNNER_TEMP/build

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$PROVISION_PROFILE_DEV_BASE64" | base64 --decode -o $PP_PATH_DEV
          echo -n "$PROVISION_PROFILE_DIST_BASE64" | base64 --decode -o $PP_PATH_DIST

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          # add remoteit-mobile-desktop to keychain list
          xcrun altool --store-password-in-keychain-item 'remoteit-mobile-desktop' -u appledeveloper -p $APPLE_MOBILE_APP_PASSWORD --keychain $KEYCHAIN_PATH
          # list the keychain items
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $RUNNER_TEMP/*.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles

      - name: npm build-mobile
        run: npm run build-mobile

      - name: Clean build dir
        working-directory: ./ios/App
        run: |
          rm -rf "$BUILD_PATH"
          mkdir -p "$BUILD_PATH"

      - name: Build archive
        working-directory: ./ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
          -scheme Remote.It \
          -archivePath $BUILD_PATH/remoteit.xcarchive \
          archive

      - name: Export ipa
        working-directory: ./ios/App
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
        run: |
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
          xcodebuild -exportArchive -archivePath $BUILD_PATH/remoteit.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $BUILD_PATH

      - name: Validate ipa
        working-directory: ./ios/App
        run: |
          xcrun altool --validate-app -f $BUILD_PATH/Remote.It.ipa -t ios -p '@keychain:remoteit-mobile-desktop' --output-format xml

      - name: Upload ipa
        working-directory: ./ios/App
        run: |
          xcrun altool --upload-app -f BUILD_PATH/Remote.It.ipa -t ios -p '@keychain:remoteit-mobile-desktop' --output-format xml
